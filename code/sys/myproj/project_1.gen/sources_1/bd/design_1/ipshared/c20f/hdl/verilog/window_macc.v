// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module window_macc (
        ap_clk,
        ap_rst,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        p_read13,
        p_read14,
        p_read15,
        p_read16,
        p_read17,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [15:0] p_read;
input  [15:0] p_read1;
input  [15:0] p_read2;
input  [15:0] p_read3;
input  [15:0] p_read4;
input  [15:0] p_read5;
input  [15:0] p_read6;
input  [15:0] p_read7;
input  [15:0] p_read8;
input  [15:0] p_read9;
input  [15:0] p_read10;
input  [15:0] p_read11;
input  [15:0] p_read12;
input  [15:0] p_read13;
input  [15:0] p_read14;
input  [15:0] p_read15;
input  [15:0] p_read16;
input  [15:0] p_read17;
output  [15:0] ap_return;
input   ap_ce;

reg[15:0] ap_return;

reg   [15:0] p_read_1_reg_1240;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_pp0_stage0_11001;
reg   [15:0] p_read_1_reg_1240_pp0_iter1_reg;
reg   [15:0] p_read_1_reg_1240_pp0_iter2_reg;
reg  signed [15:0] p_read_1_reg_1240_pp0_iter3_reg;
reg   [15:0] p_read_2_reg_1245;
reg   [15:0] p_read_2_reg_1245_pp0_iter1_reg;
reg   [15:0] p_read_2_reg_1245_pp0_iter2_reg;
reg  signed [15:0] p_read_2_reg_1245_pp0_iter3_reg;
reg   [15:0] p_read_3_reg_1250;
reg   [15:0] p_read_3_reg_1250_pp0_iter1_reg;
reg  signed [15:0] p_read_3_reg_1250_pp0_iter2_reg;
reg   [15:0] p_read_4_reg_1255;
reg  signed [15:0] p_read_4_reg_1255_pp0_iter1_reg;
reg   [15:0] p_read_5_reg_1260;
reg  signed [15:0] p_read_5_reg_1260_pp0_iter1_reg;
reg  signed [15:0] p_read_6_reg_1265;
reg   [15:0] p_read_10_reg_1270;
reg   [15:0] p_read_10_reg_1270_pp0_iter1_reg;
reg   [15:0] p_read_10_reg_1270_pp0_iter2_reg;
reg  signed [15:0] p_read_10_reg_1270_pp0_iter3_reg;
reg   [15:0] p_read_11_reg_1275;
reg   [15:0] p_read_11_reg_1275_pp0_iter1_reg;
reg   [15:0] p_read_11_reg_1275_pp0_iter2_reg;
reg  signed [15:0] p_read_11_reg_1275_pp0_iter3_reg;
reg   [15:0] p_read_12_reg_1280;
reg   [15:0] p_read_12_reg_1280_pp0_iter1_reg;
reg  signed [15:0] p_read_12_reg_1280_pp0_iter2_reg;
reg   [15:0] p_read_13_reg_1285;
reg  signed [15:0] p_read_13_reg_1285_pp0_iter1_reg;
reg   [15:0] p_read_14_reg_1290;
reg  signed [15:0] p_read_14_reg_1290_pp0_iter1_reg;
reg  signed [15:0] p_read_15_reg_1295;
wire  signed [31:0] mul_ln1118_fu_1186_p2;
reg  signed [31:0] mul_ln1118_reg_1300;
wire  signed [31:0] mul_ln1118_1_fu_1192_p2;
reg  signed [31:0] mul_ln1118_1_reg_1306;
wire  signed [31:0] mul_ln1118_2_fu_1198_p2;
reg  signed [31:0] mul_ln1118_2_reg_1312;
reg   [0:0] tmp_57_reg_1318;
(* use_dsp48 = "no" *) wire   [31:0] add_ln703_1_fu_323_p2;
reg   [31:0] add_ln703_1_reg_1325;
reg   [0:0] tmp_58_reg_1331;
wire  signed [31:0] mul_ln1118_3_fu_1204_p2;
reg  signed [31:0] mul_ln1118_3_reg_1338;
wire  signed [31:0] select_ln340_11_fu_468_p3;
reg  signed [31:0] select_ln340_11_reg_1344;
wire  signed [31:0] mul_ln1118_4_fu_1210_p2;
reg  signed [31:0] mul_ln1118_4_reg_1350;
wire  signed [31:0] mul_ln1118_5_fu_1216_p2;
reg  signed [31:0] mul_ln1118_5_reg_1356;
reg   [0:0] tmp_63_reg_1362;
(* use_dsp48 = "no" *) wire   [31:0] add_ln703_4_fu_595_p2;
reg   [31:0] add_ln703_4_reg_1369;
reg   [0:0] tmp_64_reg_1375;
wire  signed [31:0] mul_ln1118_6_fu_1222_p2;
reg  signed [31:0] mul_ln1118_6_reg_1382;
wire  signed [31:0] select_ln340_14_fu_740_p3;
reg  signed [31:0] select_ln340_14_reg_1388;
wire  signed [31:0] mul_ln1118_7_fu_1228_p2;
reg  signed [31:0] mul_ln1118_7_reg_1394;
wire  signed [31:0] mul_ln1118_8_fu_1234_p2;
reg  signed [31:0] mul_ln1118_8_reg_1400;
reg   [0:0] tmp_69_reg_1406;
(* use_dsp48 = "no" *) wire   [31:0] add_ln703_7_fu_867_p2;
reg   [31:0] add_ln703_7_reg_1413;
reg   [0:0] tmp_70_reg_1419;
reg   [0:0] p_Result_s_reg_1426;
wire   [15:0] p_Val2_1_fu_994_p2;
reg   [15:0] p_Val2_1_reg_1432;
wire   [0:0] carry_1_fu_1014_p2;
reg   [0:0] carry_1_reg_1438;
wire   [0:0] p_Result_3_fu_1020_p3;
reg   [0:0] p_Result_3_reg_1444;
wire   [0:0] Range1_all_ones_fu_1054_p2;
reg   [0:0] Range1_all_ones_reg_1449;
wire   [0:0] Range1_all_zeros_fu_1060_p2;
reg   [0:0] Range1_all_zeros_reg_1455;
wire   [0:0] and_ln786_fu_1094_p2;
reg   [0:0] and_ln786_reg_1460;
wire    ap_block_pp0_stage0;
wire  signed [32:0] sext_ln703_fu_216_p1;
wire  signed [32:0] sext_ln703_1_fu_219_p1;
wire   [32:0] add_ln1192_fu_222_p2;
(* use_dsp48 = "no" *) wire   [31:0] add_ln703_fu_236_p2;
wire   [0:0] tmp_56_fu_240_p3;
wire   [0:0] tmp_fu_228_p3;
wire   [0:0] xor_ln786_fu_248_p2;
wire   [0:0] xor_ln340_fu_266_p2;
wire   [0:0] xor_ln340_8_fu_260_p2;
wire   [0:0] and_ln786_1_fu_254_p2;
wire   [0:0] or_ln340_1_fu_272_p2;
wire   [31:0] select_ln340_fu_278_p3;
wire   [31:0] select_ln388_fu_286_p3;
wire  signed [31:0] select_ln340_9_fu_294_p3;
wire  signed [32:0] sext_ln703_2_fu_302_p1;
wire  signed [32:0] sext_ln703_3_fu_306_p1;
wire   [32:0] add_ln1192_1_fu_309_p2;
wire   [0:0] xor_ln786_1_fu_342_p2;
wire   [0:0] xor_ln340_1_fu_356_p2;
wire   [0:0] xor_ln340_9_fu_352_p2;
wire   [0:0] and_ln786_2_fu_347_p2;
wire   [0:0] or_ln340_2_fu_361_p2;
wire   [31:0] select_ln340_1_fu_366_p3;
wire   [31:0] select_ln388_1_fu_373_p3;
wire  signed [31:0] select_ln340_10_fu_380_p3;
wire  signed [32:0] sext_ln703_4_fu_388_p1;
wire  signed [32:0] sext_ln703_5_fu_392_p1;
wire   [32:0] add_ln1192_2_fu_395_p2;
(* use_dsp48 = "no" *) wire   [31:0] add_ln703_2_fu_409_p2;
wire   [0:0] tmp_60_fu_414_p3;
wire   [0:0] tmp_59_fu_401_p3;
wire   [0:0] xor_ln786_2_fu_422_p2;
wire   [0:0] xor_ln340_2_fu_440_p2;
wire   [0:0] xor_ln340_10_fu_434_p2;
wire   [0:0] and_ln786_3_fu_428_p2;
wire   [0:0] or_ln340_3_fu_446_p2;
wire   [31:0] select_ln340_2_fu_452_p3;
wire   [31:0] select_ln388_2_fu_460_p3;
wire  signed [32:0] sext_ln703_6_fu_488_p1;
wire  signed [32:0] sext_ln703_7_fu_491_p1;
wire   [32:0] add_ln1192_3_fu_494_p2;
(* use_dsp48 = "no" *) wire   [31:0] add_ln703_3_fu_508_p2;
wire   [0:0] tmp_62_fu_512_p3;
wire   [0:0] tmp_61_fu_500_p3;
wire   [0:0] xor_ln786_3_fu_520_p2;
wire   [0:0] xor_ln340_3_fu_538_p2;
wire   [0:0] xor_ln340_11_fu_532_p2;
wire   [0:0] and_ln786_4_fu_526_p2;
wire   [0:0] or_ln340_4_fu_544_p2;
wire   [31:0] select_ln340_3_fu_550_p3;
wire   [31:0] select_ln388_3_fu_558_p3;
wire  signed [31:0] select_ln340_12_fu_566_p3;
wire  signed [32:0] sext_ln703_8_fu_574_p1;
wire  signed [32:0] sext_ln703_9_fu_578_p1;
wire   [32:0] add_ln1192_4_fu_581_p2;
wire   [0:0] xor_ln786_4_fu_614_p2;
wire   [0:0] xor_ln340_4_fu_628_p2;
wire   [0:0] xor_ln340_12_fu_624_p2;
wire   [0:0] and_ln786_5_fu_619_p2;
wire   [0:0] or_ln340_5_fu_633_p2;
wire   [31:0] select_ln340_4_fu_638_p3;
wire   [31:0] select_ln388_4_fu_645_p3;
wire  signed [31:0] select_ln340_13_fu_652_p3;
wire  signed [32:0] sext_ln703_10_fu_660_p1;
wire  signed [32:0] sext_ln703_11_fu_664_p1;
wire   [32:0] add_ln1192_5_fu_667_p2;
(* use_dsp48 = "no" *) wire   [31:0] add_ln703_5_fu_681_p2;
wire   [0:0] tmp_66_fu_686_p3;
wire   [0:0] tmp_65_fu_673_p3;
wire   [0:0] xor_ln786_5_fu_694_p2;
wire   [0:0] xor_ln340_5_fu_712_p2;
wire   [0:0] xor_ln340_13_fu_706_p2;
wire   [0:0] and_ln786_6_fu_700_p2;
wire   [0:0] or_ln340_6_fu_718_p2;
wire   [31:0] select_ln340_5_fu_724_p3;
wire   [31:0] select_ln388_5_fu_732_p3;
wire  signed [32:0] sext_ln703_12_fu_760_p1;
wire  signed [32:0] sext_ln703_13_fu_763_p1;
wire   [32:0] add_ln1192_6_fu_766_p2;
(* use_dsp48 = "no" *) wire   [31:0] add_ln703_6_fu_780_p2;
wire   [0:0] tmp_68_fu_784_p3;
wire   [0:0] tmp_67_fu_772_p3;
wire   [0:0] xor_ln786_6_fu_792_p2;
wire   [0:0] xor_ln340_6_fu_810_p2;
wire   [0:0] xor_ln340_14_fu_804_p2;
wire   [0:0] and_ln786_7_fu_798_p2;
wire   [0:0] or_ln340_7_fu_816_p2;
wire   [31:0] select_ln340_6_fu_822_p3;
wire   [31:0] select_ln388_6_fu_830_p3;
wire  signed [31:0] select_ln340_15_fu_838_p3;
wire  signed [32:0] sext_ln703_14_fu_846_p1;
wire  signed [32:0] sext_ln703_15_fu_850_p1;
wire   [32:0] add_ln1192_7_fu_853_p2;
wire   [0:0] xor_ln786_7_fu_880_p2;
wire   [0:0] xor_ln340_7_fu_894_p2;
wire   [0:0] xor_ln340_15_fu_890_p2;
wire   [0:0] and_ln786_8_fu_885_p2;
wire   [0:0] or_ln340_8_fu_899_p2;
wire   [31:0] select_ln340_7_fu_904_p3;
wire   [31:0] select_ln388_7_fu_911_p3;
wire   [31:0] select_ln340_16_fu_918_p3;
wire   [6:0] trunc_ln718_fu_952_p1;
wire   [0:0] r_1_fu_956_p2;
wire   [0:0] tmp_72_fu_944_p3;
wire   [0:0] tmp_74_fu_976_p3;
wire   [0:0] r_fu_970_p2;
wire   [0:0] and_ln415_fu_984_p2;
wire   [15:0] zext_ln415_fu_990_p1;
wire   [15:0] p_Val2_s_fu_934_p4;
wire   [0:0] tmp_75_fu_1000_p3;
wire   [0:0] p_Result_2_fu_962_p3;
wire   [0:0] xor_ln416_fu_1008_p2;
wire   [6:0] p_Result_s_51_fu_1028_p4;
wire   [7:0] p_Result_1_fu_1044_p4;
wire   [0:0] tmp_77_fu_1066_p3;
wire   [0:0] Range2_all_ones_fu_1038_p2;
wire   [0:0] xor_ln779_fu_1074_p2;
wire   [0:0] and_ln779_fu_1080_p2;
wire   [0:0] deleted_ones_fu_1086_p3;
wire   [0:0] deleted_zeros_fu_1100_p3;
wire   [0:0] xor_ln785_fu_1109_p2;
wire   [0:0] or_ln785_fu_1115_p2;
wire   [0:0] xor_ln785_1_fu_1120_p2;
wire   [0:0] and_ln781_fu_1105_p2;
wire   [0:0] or_ln786_fu_1131_p2;
wire   [0:0] xor_ln786_8_fu_1136_p2;
wire   [0:0] underflow_fu_1142_p2;
wire   [0:0] overflow_fu_1125_p2;
wire   [0:0] or_ln340_9_fu_1153_p2;
wire   [0:0] or_ln340_fu_1147_p2;
wire   [0:0] or_ln340_10_fu_1158_p2;
wire   [15:0] select_ln340_8_fu_1164_p3;
wire   [15:0] select_ln388_8_fu_1171_p3;
wire   [15:0] select_ln340_17_fu_1178_p3;
reg    ap_ce_reg;
reg  signed [15:0] p_read_int_reg;
reg  signed [15:0] p_read1_int_reg;
reg  signed [15:0] p_read2_int_reg;
reg   [15:0] p_read3_int_reg;
reg   [15:0] p_read4_int_reg;
reg   [15:0] p_read5_int_reg;
reg   [15:0] p_read6_int_reg;
reg   [15:0] p_read7_int_reg;
reg   [15:0] p_read8_int_reg;
reg  signed [15:0] p_read9_int_reg;
reg  signed [15:0] p_read10_int_reg;
reg  signed [15:0] p_read11_int_reg;
reg   [15:0] p_read12_int_reg;
reg   [15:0] p_read13_int_reg;
reg   [15:0] p_read14_int_reg;
reg   [15:0] p_read15_int_reg;
reg   [15:0] p_read16_int_reg;
reg   [15:0] p_read17_int_reg;
reg   [15:0] ap_return_int_reg;

yolo_conv_top_mul_mul_16s_16s_32_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
yolo_conv_top_mul_mul_16s_16s_32_1_0_U6(
    .din0(p_read_int_reg),
    .din1(p_read9_int_reg),
    .dout(mul_ln1118_fu_1186_p2)
);

yolo_conv_top_mul_mul_16s_16s_32_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
yolo_conv_top_mul_mul_16s_16s_32_1_0_U7(
    .din0(p_read1_int_reg),
    .din1(p_read10_int_reg),
    .dout(mul_ln1118_1_fu_1192_p2)
);

yolo_conv_top_mul_mul_16s_16s_32_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
yolo_conv_top_mul_mul_16s_16s_32_1_0_U8(
    .din0(p_read2_int_reg),
    .din1(p_read11_int_reg),
    .dout(mul_ln1118_2_fu_1198_p2)
);

yolo_conv_top_mul_mul_16s_16s_32_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
yolo_conv_top_mul_mul_16s_16s_32_1_0_U9(
    .din0(p_read_15_reg_1295),
    .din1(p_read_6_reg_1265),
    .dout(mul_ln1118_3_fu_1204_p2)
);

yolo_conv_top_mul_mul_16s_16s_32_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
yolo_conv_top_mul_mul_16s_16s_32_1_0_U10(
    .din0(p_read_14_reg_1290_pp0_iter1_reg),
    .din1(p_read_5_reg_1260_pp0_iter1_reg),
    .dout(mul_ln1118_4_fu_1210_p2)
);

yolo_conv_top_mul_mul_16s_16s_32_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
yolo_conv_top_mul_mul_16s_16s_32_1_0_U11(
    .din0(p_read_13_reg_1285_pp0_iter1_reg),
    .din1(p_read_4_reg_1255_pp0_iter1_reg),
    .dout(mul_ln1118_5_fu_1216_p2)
);

yolo_conv_top_mul_mul_16s_16s_32_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
yolo_conv_top_mul_mul_16s_16s_32_1_0_U12(
    .din0(p_read_12_reg_1280_pp0_iter2_reg),
    .din1(p_read_3_reg_1250_pp0_iter2_reg),
    .dout(mul_ln1118_6_fu_1222_p2)
);

yolo_conv_top_mul_mul_16s_16s_32_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
yolo_conv_top_mul_mul_16s_16s_32_1_0_U13(
    .din0(p_read_11_reg_1275_pp0_iter3_reg),
    .din1(p_read_2_reg_1245_pp0_iter3_reg),
    .dout(mul_ln1118_7_fu_1228_p2)
);

yolo_conv_top_mul_mul_16s_16s_32_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
yolo_conv_top_mul_mul_16s_16s_32_1_0_U14(
    .din0(p_read_10_reg_1270_pp0_iter3_reg),
    .din1(p_read_1_reg_1240_pp0_iter3_reg),
    .dout(mul_ln1118_8_fu_1234_p2)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Range1_all_ones_reg_1449 <= Range1_all_ones_fu_1054_p2;
        Range1_all_zeros_reg_1455 <= Range1_all_zeros_fu_1060_p2;
        add_ln703_1_reg_1325 <= add_ln703_1_fu_323_p2;
        add_ln703_4_reg_1369 <= add_ln703_4_fu_595_p2;
        add_ln703_7_reg_1413 <= add_ln703_7_fu_867_p2;
        and_ln786_reg_1460 <= and_ln786_fu_1094_p2;
        carry_1_reg_1438 <= carry_1_fu_1014_p2;
        mul_ln1118_1_reg_1306 <= mul_ln1118_1_fu_1192_p2;
        mul_ln1118_2_reg_1312 <= mul_ln1118_2_fu_1198_p2;
        mul_ln1118_3_reg_1338 <= mul_ln1118_3_fu_1204_p2;
        mul_ln1118_4_reg_1350 <= mul_ln1118_4_fu_1210_p2;
        mul_ln1118_5_reg_1356 <= mul_ln1118_5_fu_1216_p2;
        mul_ln1118_6_reg_1382 <= mul_ln1118_6_fu_1222_p2;
        mul_ln1118_7_reg_1394 <= mul_ln1118_7_fu_1228_p2;
        mul_ln1118_8_reg_1400 <= mul_ln1118_8_fu_1234_p2;
        mul_ln1118_reg_1300 <= mul_ln1118_fu_1186_p2;
        p_Result_3_reg_1444 <= p_Val2_1_fu_994_p2[32'd15];
        p_Result_s_reg_1426 <= select_ln340_16_fu_918_p3[32'd31];
        p_Val2_1_reg_1432 <= p_Val2_1_fu_994_p2;
        p_read_10_reg_1270 <= p_read8_int_reg;
        p_read_10_reg_1270_pp0_iter1_reg <= p_read_10_reg_1270;
        p_read_10_reg_1270_pp0_iter2_reg <= p_read_10_reg_1270_pp0_iter1_reg;
        p_read_10_reg_1270_pp0_iter3_reg <= p_read_10_reg_1270_pp0_iter2_reg;
        p_read_11_reg_1275 <= p_read7_int_reg;
        p_read_11_reg_1275_pp0_iter1_reg <= p_read_11_reg_1275;
        p_read_11_reg_1275_pp0_iter2_reg <= p_read_11_reg_1275_pp0_iter1_reg;
        p_read_11_reg_1275_pp0_iter3_reg <= p_read_11_reg_1275_pp0_iter2_reg;
        p_read_12_reg_1280 <= p_read6_int_reg;
        p_read_12_reg_1280_pp0_iter1_reg <= p_read_12_reg_1280;
        p_read_12_reg_1280_pp0_iter2_reg <= p_read_12_reg_1280_pp0_iter1_reg;
        p_read_13_reg_1285 <= p_read5_int_reg;
        p_read_13_reg_1285_pp0_iter1_reg <= p_read_13_reg_1285;
        p_read_14_reg_1290 <= p_read4_int_reg;
        p_read_14_reg_1290_pp0_iter1_reg <= p_read_14_reg_1290;
        p_read_15_reg_1295 <= p_read3_int_reg;
        p_read_1_reg_1240 <= p_read17_int_reg;
        p_read_1_reg_1240_pp0_iter1_reg <= p_read_1_reg_1240;
        p_read_1_reg_1240_pp0_iter2_reg <= p_read_1_reg_1240_pp0_iter1_reg;
        p_read_1_reg_1240_pp0_iter3_reg <= p_read_1_reg_1240_pp0_iter2_reg;
        p_read_2_reg_1245 <= p_read16_int_reg;
        p_read_2_reg_1245_pp0_iter1_reg <= p_read_2_reg_1245;
        p_read_2_reg_1245_pp0_iter2_reg <= p_read_2_reg_1245_pp0_iter1_reg;
        p_read_2_reg_1245_pp0_iter3_reg <= p_read_2_reg_1245_pp0_iter2_reg;
        p_read_3_reg_1250 <= p_read15_int_reg;
        p_read_3_reg_1250_pp0_iter1_reg <= p_read_3_reg_1250;
        p_read_3_reg_1250_pp0_iter2_reg <= p_read_3_reg_1250_pp0_iter1_reg;
        p_read_4_reg_1255 <= p_read14_int_reg;
        p_read_4_reg_1255_pp0_iter1_reg <= p_read_4_reg_1255;
        p_read_5_reg_1260 <= p_read13_int_reg;
        p_read_5_reg_1260_pp0_iter1_reg <= p_read_5_reg_1260;
        p_read_6_reg_1265 <= p_read12_int_reg;
        select_ln340_11_reg_1344 <= select_ln340_11_fu_468_p3;
        select_ln340_14_reg_1388 <= select_ln340_14_fu_740_p3;
        tmp_57_reg_1318 <= add_ln1192_1_fu_309_p2[32'd32];
        tmp_58_reg_1331 <= add_ln703_1_fu_323_p2[32'd31];
        tmp_63_reg_1362 <= add_ln1192_4_fu_581_p2[32'd32];
        tmp_64_reg_1375 <= add_ln703_4_fu_595_p2[32'd31];
        tmp_69_reg_1406 <= add_ln1192_7_fu_853_p2[32'd32];
        tmp_70_reg_1419 <= add_ln703_7_fu_867_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= select_ln340_17_fu_1178_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        p_read10_int_reg <= p_read10;
        p_read11_int_reg <= p_read11;
        p_read12_int_reg <= p_read12;
        p_read13_int_reg <= p_read13;
        p_read14_int_reg <= p_read14;
        p_read15_int_reg <= p_read15;
        p_read16_int_reg <= p_read16;
        p_read17_int_reg <= p_read17;
        p_read1_int_reg <= p_read1;
        p_read2_int_reg <= p_read2;
        p_read3_int_reg <= p_read3;
        p_read4_int_reg <= p_read4;
        p_read5_int_reg <= p_read5;
        p_read6_int_reg <= p_read6;
        p_read7_int_reg <= p_read7;
        p_read8_int_reg <= p_read8;
        p_read9_int_reg <= p_read9;
        p_read_int_reg <= p_read;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = select_ln340_17_fu_1178_p3;
    end
end

assign Range1_all_ones_fu_1054_p2 = ((p_Result_1_fu_1044_p4 == 8'd255) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_1060_p2 = ((p_Result_1_fu_1044_p4 == 8'd0) ? 1'b1 : 1'b0);

assign Range2_all_ones_fu_1038_p2 = ((p_Result_s_51_fu_1028_p4 == 7'd127) ? 1'b1 : 1'b0);

assign add_ln1192_1_fu_309_p2 = ($signed(sext_ln703_2_fu_302_p1) + $signed(sext_ln703_3_fu_306_p1));

assign add_ln1192_2_fu_395_p2 = ($signed(sext_ln703_4_fu_388_p1) + $signed(sext_ln703_5_fu_392_p1));

assign add_ln1192_3_fu_494_p2 = ($signed(sext_ln703_6_fu_488_p1) + $signed(sext_ln703_7_fu_491_p1));

assign add_ln1192_4_fu_581_p2 = ($signed(sext_ln703_8_fu_574_p1) + $signed(sext_ln703_9_fu_578_p1));

assign add_ln1192_5_fu_667_p2 = ($signed(sext_ln703_10_fu_660_p1) + $signed(sext_ln703_11_fu_664_p1));

assign add_ln1192_6_fu_766_p2 = ($signed(sext_ln703_12_fu_760_p1) + $signed(sext_ln703_13_fu_763_p1));

assign add_ln1192_7_fu_853_p2 = ($signed(sext_ln703_14_fu_846_p1) + $signed(sext_ln703_15_fu_850_p1));

assign add_ln1192_fu_222_p2 = ($signed(sext_ln703_fu_216_p1) + $signed(sext_ln703_1_fu_219_p1));

assign add_ln703_1_fu_323_p2 = ($signed(mul_ln1118_2_reg_1312) + $signed(select_ln340_9_fu_294_p3));

assign add_ln703_2_fu_409_p2 = ($signed(mul_ln1118_3_reg_1338) + $signed(select_ln340_10_fu_380_p3));

assign add_ln703_3_fu_508_p2 = ($signed(mul_ln1118_4_reg_1350) + $signed(select_ln340_11_reg_1344));

assign add_ln703_4_fu_595_p2 = ($signed(mul_ln1118_5_reg_1356) + $signed(select_ln340_12_fu_566_p3));

assign add_ln703_5_fu_681_p2 = ($signed(mul_ln1118_6_reg_1382) + $signed(select_ln340_13_fu_652_p3));

assign add_ln703_6_fu_780_p2 = ($signed(mul_ln1118_7_reg_1394) + $signed(select_ln340_14_reg_1388));

assign add_ln703_7_fu_867_p2 = ($signed(mul_ln1118_8_reg_1400) + $signed(select_ln340_15_fu_838_p3));

assign add_ln703_fu_236_p2 = ($signed(mul_ln1118_1_reg_1306) + $signed(mul_ln1118_reg_1300));

assign and_ln415_fu_984_p2 = (tmp_74_fu_976_p3 & r_fu_970_p2);

assign and_ln779_fu_1080_p2 = (xor_ln779_fu_1074_p2 & Range2_all_ones_fu_1038_p2);

assign and_ln781_fu_1105_p2 = (carry_1_reg_1438 & Range1_all_ones_reg_1449);

assign and_ln786_1_fu_254_p2 = (xor_ln786_fu_248_p2 & tmp_fu_228_p3);

assign and_ln786_2_fu_347_p2 = (xor_ln786_1_fu_342_p2 & tmp_57_reg_1318);

assign and_ln786_3_fu_428_p2 = (xor_ln786_2_fu_422_p2 & tmp_59_fu_401_p3);

assign and_ln786_4_fu_526_p2 = (xor_ln786_3_fu_520_p2 & tmp_61_fu_500_p3);

assign and_ln786_5_fu_619_p2 = (xor_ln786_4_fu_614_p2 & tmp_63_reg_1362);

assign and_ln786_6_fu_700_p2 = (xor_ln786_5_fu_694_p2 & tmp_65_fu_673_p3);

assign and_ln786_7_fu_798_p2 = (xor_ln786_6_fu_792_p2 & tmp_67_fu_772_p3);

assign and_ln786_8_fu_885_p2 = (xor_ln786_7_fu_880_p2 & tmp_69_reg_1406);

assign and_ln786_fu_1094_p2 = (p_Result_3_fu_1020_p3 & deleted_ones_fu_1086_p3);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign carry_1_fu_1014_p2 = (xor_ln416_fu_1008_p2 & p_Result_2_fu_962_p3);

assign deleted_ones_fu_1086_p3 = ((carry_1_fu_1014_p2[0:0] === 1'b1) ? and_ln779_fu_1080_p2 : Range1_all_ones_fu_1054_p2);

assign deleted_zeros_fu_1100_p3 = ((carry_1_reg_1438[0:0] === 1'b1) ? Range1_all_ones_reg_1449 : Range1_all_zeros_reg_1455);

assign or_ln340_10_fu_1158_p2 = (or_ln340_9_fu_1153_p2 | and_ln781_fu_1105_p2);

assign or_ln340_1_fu_272_p2 = (xor_ln340_fu_266_p2 | tmp_56_fu_240_p3);

assign or_ln340_2_fu_361_p2 = (xor_ln340_1_fu_356_p2 | tmp_58_reg_1331);

assign or_ln340_3_fu_446_p2 = (xor_ln340_2_fu_440_p2 | tmp_60_fu_414_p3);

assign or_ln340_4_fu_544_p2 = (xor_ln340_3_fu_538_p2 | tmp_62_fu_512_p3);

assign or_ln340_5_fu_633_p2 = (xor_ln340_4_fu_628_p2 | tmp_64_reg_1375);

assign or_ln340_6_fu_718_p2 = (xor_ln340_5_fu_712_p2 | tmp_66_fu_686_p3);

assign or_ln340_7_fu_816_p2 = (xor_ln340_6_fu_810_p2 | tmp_68_fu_784_p3);

assign or_ln340_8_fu_899_p2 = (xor_ln340_7_fu_894_p2 | tmp_70_reg_1419);

assign or_ln340_9_fu_1153_p2 = (xor_ln785_1_fu_1120_p2 | and_ln786_reg_1460);

assign or_ln340_fu_1147_p2 = (underflow_fu_1142_p2 | overflow_fu_1125_p2);

assign or_ln785_fu_1115_p2 = (xor_ln785_fu_1109_p2 | p_Result_3_reg_1444);

assign or_ln786_fu_1131_p2 = (and_ln786_reg_1460 | and_ln781_fu_1105_p2);

assign overflow_fu_1125_p2 = (xor_ln785_1_fu_1120_p2 & or_ln785_fu_1115_p2);

assign p_Result_1_fu_1044_p4 = {{select_ln340_16_fu_918_p3[31:24]}};

assign p_Result_2_fu_962_p3 = select_ln340_16_fu_918_p3[32'd23];

assign p_Result_3_fu_1020_p3 = p_Val2_1_fu_994_p2[32'd15];

assign p_Result_s_51_fu_1028_p4 = {{select_ln340_16_fu_918_p3[31:25]}};

assign p_Val2_1_fu_994_p2 = (zext_ln415_fu_990_p1 + p_Val2_s_fu_934_p4);

assign p_Val2_s_fu_934_p4 = {{select_ln340_16_fu_918_p3[23:8]}};

assign r_1_fu_956_p2 = ((trunc_ln718_fu_952_p1 != 7'd0) ? 1'b1 : 1'b0);

assign r_fu_970_p2 = (tmp_72_fu_944_p3 | r_1_fu_956_p2);

assign select_ln340_10_fu_380_p3 = ((or_ln340_2_fu_361_p2[0:0] === 1'b1) ? select_ln340_1_fu_366_p3 : select_ln388_1_fu_373_p3);

assign select_ln340_11_fu_468_p3 = ((or_ln340_3_fu_446_p2[0:0] === 1'b1) ? select_ln340_2_fu_452_p3 : select_ln388_2_fu_460_p3);

assign select_ln340_12_fu_566_p3 = ((or_ln340_4_fu_544_p2[0:0] === 1'b1) ? select_ln340_3_fu_550_p3 : select_ln388_3_fu_558_p3);

assign select_ln340_13_fu_652_p3 = ((or_ln340_5_fu_633_p2[0:0] === 1'b1) ? select_ln340_4_fu_638_p3 : select_ln388_4_fu_645_p3);

assign select_ln340_14_fu_740_p3 = ((or_ln340_6_fu_718_p2[0:0] === 1'b1) ? select_ln340_5_fu_724_p3 : select_ln388_5_fu_732_p3);

assign select_ln340_15_fu_838_p3 = ((or_ln340_7_fu_816_p2[0:0] === 1'b1) ? select_ln340_6_fu_822_p3 : select_ln388_6_fu_830_p3);

assign select_ln340_16_fu_918_p3 = ((or_ln340_8_fu_899_p2[0:0] === 1'b1) ? select_ln340_7_fu_904_p3 : select_ln388_7_fu_911_p3);

assign select_ln340_17_fu_1178_p3 = ((or_ln340_10_fu_1158_p2[0:0] === 1'b1) ? select_ln340_8_fu_1164_p3 : select_ln388_8_fu_1171_p3);

assign select_ln340_1_fu_366_p3 = ((xor_ln340_9_fu_352_p2[0:0] === 1'b1) ? 32'd2147483647 : add_ln703_1_reg_1325);

assign select_ln340_2_fu_452_p3 = ((xor_ln340_10_fu_434_p2[0:0] === 1'b1) ? 32'd2147483647 : add_ln703_2_fu_409_p2);

assign select_ln340_3_fu_550_p3 = ((xor_ln340_11_fu_532_p2[0:0] === 1'b1) ? 32'd2147483647 : add_ln703_3_fu_508_p2);

assign select_ln340_4_fu_638_p3 = ((xor_ln340_12_fu_624_p2[0:0] === 1'b1) ? 32'd2147483647 : add_ln703_4_reg_1369);

assign select_ln340_5_fu_724_p3 = ((xor_ln340_13_fu_706_p2[0:0] === 1'b1) ? 32'd2147483647 : add_ln703_5_fu_681_p2);

assign select_ln340_6_fu_822_p3 = ((xor_ln340_14_fu_804_p2[0:0] === 1'b1) ? 32'd2147483647 : add_ln703_6_fu_780_p2);

assign select_ln340_7_fu_904_p3 = ((xor_ln340_15_fu_890_p2[0:0] === 1'b1) ? 32'd2147483647 : add_ln703_7_reg_1413);

assign select_ln340_8_fu_1164_p3 = ((or_ln340_fu_1147_p2[0:0] === 1'b1) ? 16'd32767 : p_Val2_1_reg_1432);

assign select_ln340_9_fu_294_p3 = ((or_ln340_1_fu_272_p2[0:0] === 1'b1) ? select_ln340_fu_278_p3 : select_ln388_fu_286_p3);

assign select_ln340_fu_278_p3 = ((xor_ln340_8_fu_260_p2[0:0] === 1'b1) ? 32'd2147483647 : add_ln703_fu_236_p2);

assign select_ln388_1_fu_373_p3 = ((and_ln786_2_fu_347_p2[0:0] === 1'b1) ? 32'd2147483648 : add_ln703_1_reg_1325);

assign select_ln388_2_fu_460_p3 = ((and_ln786_3_fu_428_p2[0:0] === 1'b1) ? 32'd2147483648 : add_ln703_2_fu_409_p2);

assign select_ln388_3_fu_558_p3 = ((and_ln786_4_fu_526_p2[0:0] === 1'b1) ? 32'd2147483648 : add_ln703_3_fu_508_p2);

assign select_ln388_4_fu_645_p3 = ((and_ln786_5_fu_619_p2[0:0] === 1'b1) ? 32'd2147483648 : add_ln703_4_reg_1369);

assign select_ln388_5_fu_732_p3 = ((and_ln786_6_fu_700_p2[0:0] === 1'b1) ? 32'd2147483648 : add_ln703_5_fu_681_p2);

assign select_ln388_6_fu_830_p3 = ((and_ln786_7_fu_798_p2[0:0] === 1'b1) ? 32'd2147483648 : add_ln703_6_fu_780_p2);

assign select_ln388_7_fu_911_p3 = ((and_ln786_8_fu_885_p2[0:0] === 1'b1) ? 32'd2147483648 : add_ln703_7_reg_1413);

assign select_ln388_8_fu_1171_p3 = ((underflow_fu_1142_p2[0:0] === 1'b1) ? 16'd32768 : p_Val2_1_reg_1432);

assign select_ln388_fu_286_p3 = ((and_ln786_1_fu_254_p2[0:0] === 1'b1) ? 32'd2147483648 : add_ln703_fu_236_p2);

assign sext_ln703_10_fu_660_p1 = select_ln340_13_fu_652_p3;

assign sext_ln703_11_fu_664_p1 = mul_ln1118_6_reg_1382;

assign sext_ln703_12_fu_760_p1 = select_ln340_14_reg_1388;

assign sext_ln703_13_fu_763_p1 = mul_ln1118_7_reg_1394;

assign sext_ln703_14_fu_846_p1 = select_ln340_15_fu_838_p3;

assign sext_ln703_15_fu_850_p1 = mul_ln1118_8_reg_1400;

assign sext_ln703_1_fu_219_p1 = mul_ln1118_1_reg_1306;

assign sext_ln703_2_fu_302_p1 = select_ln340_9_fu_294_p3;

assign sext_ln703_3_fu_306_p1 = mul_ln1118_2_reg_1312;

assign sext_ln703_4_fu_388_p1 = select_ln340_10_fu_380_p3;

assign sext_ln703_5_fu_392_p1 = mul_ln1118_3_reg_1338;

assign sext_ln703_6_fu_488_p1 = select_ln340_11_reg_1344;

assign sext_ln703_7_fu_491_p1 = mul_ln1118_4_reg_1350;

assign sext_ln703_8_fu_574_p1 = select_ln340_12_fu_566_p3;

assign sext_ln703_9_fu_578_p1 = mul_ln1118_5_reg_1356;

assign sext_ln703_fu_216_p1 = mul_ln1118_reg_1300;

assign tmp_56_fu_240_p3 = add_ln703_fu_236_p2[32'd31];

assign tmp_59_fu_401_p3 = add_ln1192_2_fu_395_p2[32'd32];

assign tmp_60_fu_414_p3 = add_ln703_2_fu_409_p2[32'd31];

assign tmp_61_fu_500_p3 = add_ln1192_3_fu_494_p2[32'd32];

assign tmp_62_fu_512_p3 = add_ln703_3_fu_508_p2[32'd31];

assign tmp_65_fu_673_p3 = add_ln1192_5_fu_667_p2[32'd32];

assign tmp_66_fu_686_p3 = add_ln703_5_fu_681_p2[32'd31];

assign tmp_67_fu_772_p3 = add_ln1192_6_fu_766_p2[32'd32];

assign tmp_68_fu_784_p3 = add_ln703_6_fu_780_p2[32'd31];

assign tmp_72_fu_944_p3 = select_ln340_16_fu_918_p3[32'd8];

assign tmp_74_fu_976_p3 = select_ln340_16_fu_918_p3[32'd7];

assign tmp_75_fu_1000_p3 = p_Val2_1_fu_994_p2[32'd15];

assign tmp_77_fu_1066_p3 = select_ln340_16_fu_918_p3[32'd24];

assign tmp_fu_228_p3 = add_ln1192_fu_222_p2[32'd32];

assign trunc_ln718_fu_952_p1 = select_ln340_16_fu_918_p3[6:0];

assign underflow_fu_1142_p2 = (xor_ln786_8_fu_1136_p2 & p_Result_s_reg_1426);

assign xor_ln340_10_fu_434_p2 = (tmp_60_fu_414_p3 ^ tmp_59_fu_401_p3);

assign xor_ln340_11_fu_532_p2 = (tmp_62_fu_512_p3 ^ tmp_61_fu_500_p3);

assign xor_ln340_12_fu_624_p2 = (tmp_64_reg_1375 ^ tmp_63_reg_1362);

assign xor_ln340_13_fu_706_p2 = (tmp_66_fu_686_p3 ^ tmp_65_fu_673_p3);

assign xor_ln340_14_fu_804_p2 = (tmp_68_fu_784_p3 ^ tmp_67_fu_772_p3);

assign xor_ln340_15_fu_890_p2 = (tmp_70_reg_1419 ^ tmp_69_reg_1406);

assign xor_ln340_1_fu_356_p2 = (tmp_57_reg_1318 ^ 1'd1);

assign xor_ln340_2_fu_440_p2 = (tmp_59_fu_401_p3 ^ 1'd1);

assign xor_ln340_3_fu_538_p2 = (tmp_61_fu_500_p3 ^ 1'd1);

assign xor_ln340_4_fu_628_p2 = (tmp_63_reg_1362 ^ 1'd1);

assign xor_ln340_5_fu_712_p2 = (tmp_65_fu_673_p3 ^ 1'd1);

assign xor_ln340_6_fu_810_p2 = (tmp_67_fu_772_p3 ^ 1'd1);

assign xor_ln340_7_fu_894_p2 = (tmp_69_reg_1406 ^ 1'd1);

assign xor_ln340_8_fu_260_p2 = (tmp_fu_228_p3 ^ tmp_56_fu_240_p3);

assign xor_ln340_9_fu_352_p2 = (tmp_58_reg_1331 ^ tmp_57_reg_1318);

assign xor_ln340_fu_266_p2 = (tmp_fu_228_p3 ^ 1'd1);

assign xor_ln416_fu_1008_p2 = (tmp_75_fu_1000_p3 ^ 1'd1);

assign xor_ln779_fu_1074_p2 = (tmp_77_fu_1066_p3 ^ 1'd1);

assign xor_ln785_1_fu_1120_p2 = (p_Result_s_reg_1426 ^ 1'd1);

assign xor_ln785_fu_1109_p2 = (deleted_zeros_fu_1100_p3 ^ 1'd1);

assign xor_ln786_1_fu_342_p2 = (tmp_58_reg_1331 ^ 1'd1);

assign xor_ln786_2_fu_422_p2 = (tmp_60_fu_414_p3 ^ 1'd1);

assign xor_ln786_3_fu_520_p2 = (tmp_62_fu_512_p3 ^ 1'd1);

assign xor_ln786_4_fu_614_p2 = (tmp_64_reg_1375 ^ 1'd1);

assign xor_ln786_5_fu_694_p2 = (tmp_66_fu_686_p3 ^ 1'd1);

assign xor_ln786_6_fu_792_p2 = (tmp_68_fu_784_p3 ^ 1'd1);

assign xor_ln786_7_fu_880_p2 = (tmp_70_reg_1419 ^ 1'd1);

assign xor_ln786_8_fu_1136_p2 = (or_ln786_fu_1131_p2 ^ 1'd1);

assign xor_ln786_fu_248_p2 = (tmp_56_fu_240_p3 ^ 1'd1);

assign zext_ln415_fu_990_p1 = and_ln415_fu_984_p2;

endmodule //window_macc
