// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module post_process_unit (
        ap_clk,
        ap_rst,
        data_in_V,
        bias_V,
        bias_en_V,
        leaky_V,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [15:0] data_in_V;
input  [15:0] bias_V;
input  [0:0] bias_en_V;
input  [0:0] leaky_V;
output  [15:0] ap_return;
input   ap_ce;

reg[15:0] ap_return;

reg   [0:0] leaky_V_read_reg_364;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] leaky_V_read_reg_364_pp0_iter1_reg;
reg   [0:0] bias_en_V_read_reg_369;
reg   [0:0] bias_en_V_read_reg_369_pp0_iter1_reg;
reg  signed [15:0] data_in_V_read_reg_375;
reg  signed [15:0] data_in_V_read_reg_375_pp0_iter1_reg;
wire  signed [15:0] activated_output_V_fu_152_p3;
reg  signed [15:0] activated_output_V_reg_380;
reg  signed [15:0] activated_output_V_reg_380_pp0_iter1_reg;
wire  signed [21:0] r_V_fu_355_p2;
reg  signed [21:0] r_V_reg_387;
wire   [6:0] trunc_ln718_fu_163_p1;
reg   [6:0] trunc_ln718_reg_395;
reg   [0:0] p_Result_9_reg_400;
reg   [0:0] Range2_all_ones_reg_406;
wire  signed [15:0] lhs_V_fu_70_p0;
wire    ap_block_pp0_stage0;
wire  signed [15:0] rhs_V_fu_74_p0;
wire  signed [16:0] rhs_V_fu_74_p1;
wire  signed [16:0] lhs_V_fu_70_p1;
wire   [16:0] ret_V_fu_78_p2;
wire  signed [15:0] p_Val2_16_fu_92_p0;
wire  signed [15:0] p_Val2_16_fu_92_p1;
wire   [15:0] p_Val2_16_fu_92_p2;
wire   [0:0] p_Result_8_fu_98_p3;
wire   [0:0] p_Result_s_fu_84_p3;
wire   [0:0] xor_ln786_fu_106_p2;
wire   [0:0] xor_ln340_fu_124_p2;
wire   [0:0] xor_ln340_8_fu_118_p2;
wire   [0:0] underflow_fu_112_p2;
wire   [0:0] or_ln340_fu_130_p2;
wire   [15:0] select_ln340_fu_136_p3;
wire   [15:0] select_ln388_fu_144_p3;
wire   [13:0] trunc_ln_fu_187_p4;
wire   [0:0] r_fu_207_p2;
wire   [0:0] tmp_11_fu_200_p3;
wire   [0:0] tmp_13_fu_218_p3;
wire   [0:0] or_ln412_fu_212_p2;
wire   [0:0] and_ln415_fu_225_p2;
wire  signed [14:0] sext_ln713_fu_196_p1;
wire   [14:0] zext_ln415_fu_231_p1;
wire  signed [14:0] p_Val2_18_fu_235_p2;
wire   [0:0] tmp_14_fu_245_p3;
wire   [0:0] xor_ln416_1_fu_253_p2;
wire   [0:0] tmp_17_fu_272_p3;
wire   [0:0] xor_ln416_2_fu_285_p2;
wire   [0:0] or_ln416_1_fu_290_p2;
wire   [0:0] xor_ln779_fu_279_p2;
wire   [0:0] or_ln416_fu_296_p2;
wire   [0:0] carry_1_fu_259_p2;
wire   [0:0] p_Result_10_fu_264_p3;
wire   [0:0] deleted_ones_fu_302_p2;
wire   [0:0] and_ln781_fu_307_p2;
wire   [0:0] and_ln786_fu_312_p2;
wire   [0:0] or_ln786_fu_318_p2;
wire  signed [15:0] sext_ln415_fu_241_p1;
wire   [0:0] and_ln97_fu_332_p2;
wire   [0:0] tmp_fu_180_p3;
wire   [0:0] and_ln97_1_fu_336_p2;
wire   [15:0] select_ln340_4_fu_324_p3;
wire   [15:0] select_ln97_fu_342_p3;
wire   [5:0] r_V_fu_355_p0;
wire   [15:0] select_ln97_1_fu_349_p3;
reg    ap_ce_reg;
reg   [15:0] data_in_V_int_reg;
reg   [15:0] bias_V_int_reg;
reg   [0:0] bias_en_V_int_reg;
reg   [0:0] leaky_V_int_reg;
reg   [15:0] ap_return_int_reg;

yolo_acc_top_mul_mul_6ns_16s_22_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 22 ))
yolo_acc_top_mul_mul_6ns_16s_22_1_0_U1(
    .din0(r_V_fu_355_p0),
    .din1(activated_output_V_reg_380),
    .dout(r_V_fu_355_p2)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if (((bias_en_V_read_reg_369 == 1'd1) & (1'b1 == ap_ce_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Range2_all_ones_reg_406 <= r_V_fu_355_p2[32'd21];
        p_Result_9_reg_400 <= r_V_fu_355_p2[32'd21];
        r_V_reg_387 <= r_V_fu_355_p2;
        trunc_ln718_reg_395 <= trunc_ln718_fu_163_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        activated_output_V_reg_380 <= activated_output_V_fu_152_p3;
        activated_output_V_reg_380_pp0_iter1_reg <= activated_output_V_reg_380;
        bias_en_V_read_reg_369 <= bias_en_V_int_reg;
        bias_en_V_read_reg_369_pp0_iter1_reg <= bias_en_V_read_reg_369;
        data_in_V_read_reg_375 <= data_in_V_int_reg;
        data_in_V_read_reg_375_pp0_iter1_reg <= data_in_V_read_reg_375;
        leaky_V_read_reg_364 <= leaky_V_int_reg;
        leaky_V_read_reg_364_pp0_iter1_reg <= leaky_V_read_reg_364;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= select_ln97_1_fu_349_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        bias_V_int_reg <= bias_V;
        bias_en_V_int_reg <= bias_en_V;
        data_in_V_int_reg <= data_in_V;
        leaky_V_int_reg <= leaky_V;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = select_ln97_1_fu_349_p3;
    end
end

assign activated_output_V_fu_152_p3 = ((or_ln340_fu_130_p2[0:0] === 1'b1) ? select_ln340_fu_136_p3 : select_ln388_fu_144_p3);

assign and_ln415_fu_225_p2 = (tmp_13_fu_218_p3 & or_ln412_fu_212_p2);

assign and_ln781_fu_307_p2 = (carry_1_fu_259_p2 & Range2_all_ones_reg_406);

assign and_ln786_fu_312_p2 = (p_Result_10_fu_264_p3 & deleted_ones_fu_302_p2);

assign and_ln97_1_fu_336_p2 = (tmp_fu_180_p3 & and_ln97_fu_332_p2);

assign and_ln97_fu_332_p2 = (leaky_V_read_reg_364_pp0_iter1_reg & bias_en_V_read_reg_369_pp0_iter1_reg);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign carry_1_fu_259_p2 = (xor_ln416_1_fu_253_p2 & p_Result_9_reg_400);

assign deleted_ones_fu_302_p2 = (or_ln416_fu_296_p2 & Range2_all_ones_reg_406);

assign lhs_V_fu_70_p0 = data_in_V_int_reg;

assign lhs_V_fu_70_p1 = lhs_V_fu_70_p0;

assign or_ln340_fu_130_p2 = (xor_ln340_fu_124_p2 | p_Result_8_fu_98_p3);

assign or_ln412_fu_212_p2 = (tmp_11_fu_200_p3 | r_fu_207_p2);

assign or_ln416_1_fu_290_p2 = (xor_ln416_2_fu_285_p2 | tmp_14_fu_245_p3);

assign or_ln416_fu_296_p2 = (xor_ln779_fu_279_p2 | or_ln416_1_fu_290_p2);

assign or_ln786_fu_318_p2 = (and_ln786_fu_312_p2 | and_ln781_fu_307_p2);

assign p_Result_10_fu_264_p3 = p_Val2_18_fu_235_p2[32'd14];

assign p_Result_8_fu_98_p3 = p_Val2_16_fu_92_p2[32'd15];

assign p_Result_s_fu_84_p3 = ret_V_fu_78_p2[32'd16];

assign p_Val2_16_fu_92_p0 = data_in_V_int_reg;

assign p_Val2_16_fu_92_p1 = bias_V_int_reg;

assign p_Val2_16_fu_92_p2 = ($signed(p_Val2_16_fu_92_p0) + $signed(p_Val2_16_fu_92_p1));

assign p_Val2_18_fu_235_p2 = ($signed(sext_ln713_fu_196_p1) + $signed(zext_ln415_fu_231_p1));

assign r_V_fu_355_p0 = 22'd26;

assign r_fu_207_p2 = ((trunc_ln718_reg_395 != 7'd0) ? 1'b1 : 1'b0);

assign ret_V_fu_78_p2 = ($signed(rhs_V_fu_74_p1) + $signed(lhs_V_fu_70_p1));

assign rhs_V_fu_74_p0 = bias_V_int_reg;

assign rhs_V_fu_74_p1 = rhs_V_fu_74_p0;

assign select_ln340_4_fu_324_p3 = ((or_ln786_fu_318_p2[0:0] === 1'b1) ? sext_ln415_fu_241_p1 : 16'd32768);

assign select_ln340_fu_136_p3 = ((xor_ln340_8_fu_118_p2[0:0] === 1'b1) ? 16'd32767 : p_Val2_16_fu_92_p2);

assign select_ln388_fu_144_p3 = ((underflow_fu_112_p2[0:0] === 1'b1) ? 16'd32768 : p_Val2_16_fu_92_p2);

assign select_ln97_1_fu_349_p3 = ((bias_en_V_read_reg_369_pp0_iter1_reg[0:0] === 1'b1) ? select_ln97_fu_342_p3 : data_in_V_read_reg_375_pp0_iter1_reg);

assign select_ln97_fu_342_p3 = ((and_ln97_1_fu_336_p2[0:0] === 1'b1) ? select_ln340_4_fu_324_p3 : activated_output_V_reg_380_pp0_iter1_reg);

assign sext_ln415_fu_241_p1 = p_Val2_18_fu_235_p2;

assign sext_ln713_fu_196_p1 = $signed(trunc_ln_fu_187_p4);

assign tmp_11_fu_200_p3 = r_V_reg_387[32'd8];

assign tmp_13_fu_218_p3 = r_V_reg_387[32'd7];

assign tmp_14_fu_245_p3 = p_Val2_18_fu_235_p2[32'd14];

assign tmp_17_fu_272_p3 = r_V_reg_387[32'd20];

assign tmp_fu_180_p3 = activated_output_V_reg_380_pp0_iter1_reg[32'd15];

assign trunc_ln718_fu_163_p1 = r_V_fu_355_p2[6:0];

assign trunc_ln_fu_187_p4 = {{r_V_reg_387[21:8]}};

assign underflow_fu_112_p2 = (xor_ln786_fu_106_p2 & p_Result_s_fu_84_p3);

assign xor_ln340_8_fu_118_p2 = (p_Result_s_fu_84_p3 ^ p_Result_8_fu_98_p3);

assign xor_ln340_fu_124_p2 = (p_Result_s_fu_84_p3 ^ 1'd1);

assign xor_ln416_1_fu_253_p2 = (tmp_14_fu_245_p3 ^ 1'd1);

assign xor_ln416_2_fu_285_p2 = (p_Result_9_reg_400 ^ 1'd1);

assign xor_ln779_fu_279_p2 = (tmp_17_fu_272_p3 ^ 1'd1);

assign xor_ln786_fu_106_p2 = (p_Result_8_fu_98_p3 ^ 1'd1);

assign zext_ln415_fu_231_p1 = and_ln415_fu_225_p2;

endmodule //post_process_unit
