// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module yolo_conv_top_window_macc (
        ap_clk,
        ap_rst,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        p_read13,
        p_read14,
        p_read15,
        p_read16,
        p_read17,
        p_read18,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [15:0] p_read1;
input  [15:0] p_read2;
input  [15:0] p_read3;
input  [15:0] p_read4;
input  [15:0] p_read5;
input  [15:0] p_read6;
input  [15:0] p_read7;
input  [15:0] p_read8;
input  [15:0] p_read9;
input  [15:0] p_read10;
input  [15:0] p_read11;
input  [15:0] p_read12;
input  [15:0] p_read13;
input  [15:0] p_read14;
input  [15:0] p_read15;
input  [15:0] p_read16;
input  [15:0] p_read17;
input  [15:0] p_read18;
output  [31:0] ap_return;
input   ap_ce;

reg[31:0] ap_return;

reg  signed [15:0] p_read_reg_286;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_pp0_stage0_11001;
reg   [15:0] p_read_2_reg_291;
reg  signed [15:0] p_read_2_reg_291_pp0_iter1_reg;
reg  signed [15:0] p_read_3_reg_296;
reg  signed [15:0] p_read_5_reg_301;
reg  signed [15:0] p_read_8_reg_306;
reg  signed [15:0] p_read_9_reg_311;
reg   [15:0] p_read_11_reg_316;
reg  signed [15:0] p_read_11_reg_316_pp0_iter1_reg;
reg  signed [15:0] p_read_12_reg_321;
reg  signed [15:0] p_read412_reg_326;
reg  signed [15:0] p_read19_reg_331;
wire  signed [31:0] grp_fu_221_p2;
wire  signed [31:0] grp_fu_227_p2;
wire  signed [31:0] grp_fu_233_p2;
wire  signed [31:0] grp_fu_239_p2;
wire  signed [31:0] grp_fu_245_p3;
reg  signed [31:0] add_ln813_reg_446;
reg  signed [31:0] add_ln813_reg_446_pp0_iter5_reg;
wire  signed [31:0] grp_fu_253_p3;
reg  signed [31:0] add_ln813_1_reg_451;
reg  signed [31:0] add_ln813_1_reg_451_pp0_iter5_reg;
wire  signed [31:0] grp_fu_261_p3;
reg  signed [31:0] add_ln813_3_reg_456;
wire   [31:0] grp_fu_269_p3;
(* use_dsp48 = "no" *) wire   [31:0] add_ln813_6_fu_208_p2;
reg   [31:0] add_ln813_6_reg_466;
wire    ap_block_pp0_stage0;
wire  signed [31:0] add_ln813_6_fu_208_p0;
wire   [31:0] grp_fu_277_p3;
(* use_dsp48 = "no" *) wire   [31:0] add_ln813_2_fu_212_p2;
wire   [31:0] sum_V_fu_216_p2;
reg    grp_fu_221_ce;
reg    grp_fu_227_ce;
reg    grp_fu_233_ce;
reg    grp_fu_239_ce;
reg    grp_fu_245_ce;
reg    grp_fu_253_ce;
reg    grp_fu_261_ce;
reg    grp_fu_269_ce;
reg    grp_fu_277_ce;
reg    ap_ce_reg;
reg   [15:0] p_read1_int_reg;
reg  signed [15:0] p_read2_int_reg;
reg  signed [15:0] p_read3_int_reg;
reg   [15:0] p_read4_int_reg;
reg  signed [15:0] p_read5_int_reg;
reg   [15:0] p_read6_int_reg;
reg   [15:0] p_read7_int_reg;
reg  signed [15:0] p_read8_int_reg;
reg   [15:0] p_read9_int_reg;
reg   [15:0] p_read10_int_reg;
reg  signed [15:0] p_read11_int_reg;
reg  signed [15:0] p_read12_int_reg;
reg   [15:0] p_read13_int_reg;
reg  signed [15:0] p_read14_int_reg;
reg   [15:0] p_read15_int_reg;
reg   [15:0] p_read16_int_reg;
reg  signed [15:0] p_read17_int_reg;
reg   [15:0] p_read18_int_reg;
reg   [31:0] ap_return_int_reg;

yolo_conv_top_mul_mul_16s_16s_32_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16s_16s_32_4_0_U100(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read11_int_reg),
    .din1(p_read2_int_reg),
    .ce(grp_fu_221_ce),
    .dout(grp_fu_221_p2)
);

yolo_conv_top_mul_mul_16s_16s_32_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16s_16s_32_4_0_U101(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read12_int_reg),
    .din1(p_read3_int_reg),
    .ce(grp_fu_227_ce),
    .dout(grp_fu_227_p2)
);

yolo_conv_top_mul_mul_16s_16s_32_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16s_16s_32_4_0_U102(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read14_int_reg),
    .din1(p_read5_int_reg),
    .ce(grp_fu_233_ce),
    .dout(grp_fu_233_p2)
);

yolo_conv_top_mul_mul_16s_16s_32_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16s_16s_32_4_0_U103(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read17_int_reg),
    .din1(p_read8_int_reg),
    .ce(grp_fu_239_ce),
    .dout(grp_fu_239_p2)
);

yolo_conv_top_mac_muladd_16s_16s_32s_32_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_16s_16s_32s_32_4_0_U104(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read_8_reg_306),
    .din1(p_read19_reg_331),
    .din2(grp_fu_221_p2),
    .ce(grp_fu_245_ce),
    .dout(grp_fu_245_p3)
);

yolo_conv_top_mac_muladd_16s_16s_32s_32_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_16s_16s_32s_32_4_0_U105(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read_5_reg_301),
    .din1(p_read412_reg_326),
    .din2(grp_fu_227_p2),
    .ce(grp_fu_253_ce),
    .dout(grp_fu_253_p3)
);

yolo_conv_top_mac_muladd_16s_16s_32s_32_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_16s_16s_32s_32_4_0_U106(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read_3_reg_296),
    .din1(p_read_12_reg_321),
    .din2(grp_fu_233_p2),
    .ce(grp_fu_261_ce),
    .dout(grp_fu_261_p3)
);

yolo_conv_top_mac_muladd_16s_16s_32s_32_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_16s_16s_32s_32_4_0_U107(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read_reg_286),
    .din1(p_read_9_reg_311),
    .din2(grp_fu_239_p2),
    .ce(grp_fu_269_ce),
    .dout(grp_fu_269_p3)
);

yolo_conv_top_mac_muladd_16s_16s_32ns_32_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_16s_16s_32ns_32_4_0_U108(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read_2_reg_291_pp0_iter1_reg),
    .din1(p_read_11_reg_316_pp0_iter1_reg),
    .din2(grp_fu_269_p3),
    .ce(grp_fu_277_ce),
    .dout(grp_fu_277_p3)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        add_ln813_1_reg_451 <= grp_fu_253_p3;
        add_ln813_1_reg_451_pp0_iter5_reg <= add_ln813_1_reg_451;
        add_ln813_3_reg_456 <= grp_fu_261_p3;
        add_ln813_6_reg_466 <= add_ln813_6_fu_208_p2;
        add_ln813_reg_446 <= grp_fu_245_p3;
        add_ln813_reg_446_pp0_iter5_reg <= add_ln813_reg_446;
        p_read19_reg_331 <= p_read1_int_reg;
        p_read412_reg_326 <= p_read4_int_reg;
        p_read_11_reg_316 <= p_read7_int_reg;
        p_read_11_reg_316_pp0_iter1_reg <= p_read_11_reg_316;
        p_read_12_reg_321 <= p_read6_int_reg;
        p_read_2_reg_291 <= p_read16_int_reg;
        p_read_2_reg_291_pp0_iter1_reg <= p_read_2_reg_291;
        p_read_3_reg_296 <= p_read15_int_reg;
        p_read_5_reg_301 <= p_read13_int_reg;
        p_read_8_reg_306 <= p_read10_int_reg;
        p_read_9_reg_311 <= p_read9_int_reg;
        p_read_reg_286 <= p_read18_int_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= sum_V_fu_216_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        p_read10_int_reg <= p_read10;
        p_read11_int_reg <= p_read11;
        p_read12_int_reg <= p_read12;
        p_read13_int_reg <= p_read13;
        p_read14_int_reg <= p_read14;
        p_read15_int_reg <= p_read15;
        p_read16_int_reg <= p_read16;
        p_read17_int_reg <= p_read17;
        p_read18_int_reg <= p_read18;
        p_read1_int_reg <= p_read1;
        p_read2_int_reg <= p_read2;
        p_read3_int_reg <= p_read3;
        p_read4_int_reg <= p_read4;
        p_read5_int_reg <= p_read5;
        p_read6_int_reg <= p_read6;
        p_read7_int_reg <= p_read7;
        p_read8_int_reg <= p_read8;
        p_read9_int_reg <= p_read9;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = sum_V_fu_216_p2;
    end else begin
        ap_return = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_221_ce = 1'b1;
    end else begin
        grp_fu_221_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_227_ce = 1'b1;
    end else begin
        grp_fu_227_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_233_ce = 1'b1;
    end else begin
        grp_fu_233_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_239_ce = 1'b1;
    end else begin
        grp_fu_239_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_245_ce = 1'b1;
    end else begin
        grp_fu_245_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_253_ce = 1'b1;
    end else begin
        grp_fu_253_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_261_ce = 1'b1;
    end else begin
        grp_fu_261_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_269_ce = 1'b1;
    end else begin
        grp_fu_269_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_277_ce = 1'b1;
    end else begin
        grp_fu_277_ce = 1'b0;
    end
end

assign add_ln813_2_fu_212_p2 = ($signed(add_ln813_1_reg_451_pp0_iter5_reg) + $signed(add_ln813_reg_446_pp0_iter5_reg));

assign add_ln813_6_fu_208_p0 = grp_fu_277_p3;

assign add_ln813_6_fu_208_p2 = ($signed(add_ln813_6_fu_208_p0) + $signed(add_ln813_3_reg_456));

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign sum_V_fu_216_p2 = (add_ln813_6_reg_466 + add_ln813_2_fu_212_p2);

endmodule //yolo_conv_top_window_macc
