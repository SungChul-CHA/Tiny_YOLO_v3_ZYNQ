// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module post_process (
        ap_clk,
        ap_rst,
        sub0_val_output_V,
        sub1_val_output_V,
        sub2_val_output_V,
        sub3_val_output_V,
        input_ch_idx,
        val_output_V,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [15:0] sub0_val_output_V;
input  [15:0] sub1_val_output_V;
input  [15:0] sub2_val_output_V;
input  [15:0] sub3_val_output_V;
input  [3:0] input_ch_idx;
input  [15:0] val_output_V;
output  [15:0] ap_return;
input   ap_ce;

reg[15:0] ap_return;

reg  signed [15:0] sub3_val_output_V_re_reg_428;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg  signed [15:0] sub3_val_output_V_re_reg_428_pp0_iter1_reg;
reg  signed [15:0] sub2_val_output_V_re_reg_434;
reg  signed [15:0] sub1_val_output_V_re_reg_440;
wire  signed [15:0] p_Val2_4_fu_166_p3;
reg  signed [15:0] p_Val2_4_reg_446;
reg   [0:0] p_Result_7_reg_452;
wire   [15:0] p_Val2_9_fu_281_p2;
reg   [15:0] p_Val2_9_reg_459;
reg   [0:0] p_Result_8_reg_465;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln211_fu_70_p2;
wire  signed [15:0] p_Val2_s_fu_76_p3;
wire  signed [15:0] rhs_V_fu_88_p0;
wire  signed [16:0] rhs_V_fu_88_p1;
wire  signed [16:0] lhs_V_fu_84_p1;
wire   [16:0] ret_V_fu_92_p2;
wire  signed [15:0] p_Val2_3_fu_106_p1;
wire   [15:0] p_Val2_3_fu_106_p2;
wire   [0:0] p_Result_4_fu_112_p3;
wire   [0:0] p_Result_s_fu_98_p3;
wire   [0:0] xor_ln786_fu_120_p2;
wire   [0:0] xor_ln340_fu_138_p2;
wire   [0:0] xor_ln340_16_fu_132_p2;
wire   [0:0] underflow_fu_126_p2;
wire   [0:0] or_ln340_fu_144_p2;
wire   [15:0] select_ln340_fu_150_p3;
wire   [15:0] select_ln388_fu_158_p3;
wire  signed [16:0] rhs_V_1_fu_177_p1;
wire  signed [16:0] lhs_V_1_fu_174_p1;
wire   [16:0] ret_V_1_fu_180_p2;
wire   [15:0] p_Val2_6_fu_194_p2;
wire   [0:0] p_Result_6_fu_198_p3;
wire   [0:0] p_Result_5_fu_186_p3;
wire   [0:0] xor_ln786_2_fu_206_p2;
wire   [0:0] xor_ln340_9_fu_224_p2;
wire   [0:0] xor_ln340_17_fu_218_p2;
wire   [0:0] underflow_1_fu_212_p2;
wire   [0:0] or_ln340_11_fu_230_p2;
wire   [15:0] select_ln340_9_fu_236_p3;
wire   [15:0] select_ln388_9_fu_244_p3;
wire  signed [15:0] p_Val2_7_fu_252_p3;
wire  signed [16:0] rhs_V_2_fu_264_p1;
wire  signed [16:0] lhs_V_2_fu_260_p1;
wire   [16:0] ret_V_2_fu_267_p2;
wire   [0:0] xor_ln786_3_fu_294_p2;
wire   [0:0] xor_ln340_10_fu_308_p2;
wire   [0:0] xor_ln340_18_fu_304_p2;
wire   [0:0] underflow_2_fu_299_p2;
wire   [0:0] or_ln340_12_fu_313_p2;
wire   [15:0] select_ln340_10_fu_318_p3;
wire   [15:0] select_ln388_10_fu_325_p3;
wire  signed [15:0] p_Val2_10_fu_332_p3;
wire  signed [16:0] rhs_V_3_fu_344_p1;
wire  signed [16:0] lhs_V_3_fu_340_p1;
wire   [16:0] ret_V_3_fu_347_p2;
wire   [15:0] p_Val2_12_fu_361_p2;
wire   [0:0] p_Result_10_fu_366_p3;
wire   [0:0] p_Result_9_fu_353_p3;
wire   [0:0] xor_ln786_4_fu_374_p2;
wire   [0:0] xor_ln340_11_fu_392_p2;
wire   [0:0] xor_ln340_19_fu_386_p2;
wire   [0:0] underflow_3_fu_380_p2;
wire   [0:0] or_ln340_13_fu_398_p2;
wire   [15:0] select_ln340_11_fu_404_p3;
wire   [15:0] select_ln388_11_fu_412_p3;
wire   [15:0] select_ln340_21_fu_420_p3;
reg    ap_ce_reg;
reg   [15:0] sub0_val_output_V_int_reg;
reg   [15:0] sub1_val_output_V_int_reg;
reg   [15:0] sub2_val_output_V_int_reg;
reg   [15:0] sub3_val_output_V_int_reg;
reg   [3:0] input_ch_idx_int_reg;
reg   [15:0] val_output_V_int_reg;
reg   [15:0] ap_return_int_reg;

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= select_ln340_21_fu_420_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        input_ch_idx_int_reg <= input_ch_idx;
        sub0_val_output_V_int_reg <= sub0_val_output_V;
        sub1_val_output_V_int_reg <= sub1_val_output_V;
        sub2_val_output_V_int_reg <= sub2_val_output_V;
        sub3_val_output_V_int_reg <= sub3_val_output_V;
        val_output_V_int_reg <= val_output_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Result_7_reg_452 <= ret_V_2_fu_267_p2[32'd16];
        p_Result_8_reg_465 <= p_Val2_9_fu_281_p2[32'd15];
        p_Val2_4_reg_446 <= p_Val2_4_fu_166_p3;
        p_Val2_9_reg_459 <= p_Val2_9_fu_281_p2;
        sub1_val_output_V_re_reg_440 <= sub1_val_output_V_int_reg;
        sub2_val_output_V_re_reg_434 <= sub2_val_output_V_int_reg;
        sub3_val_output_V_re_reg_428 <= sub3_val_output_V_int_reg;
        sub3_val_output_V_re_reg_428_pp0_iter1_reg <= sub3_val_output_V_re_reg_428;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = select_ln340_21_fu_420_p3;
    end
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign icmp_ln211_fu_70_p2 = ((input_ch_idx_int_reg == 4'd0) ? 1'b1 : 1'b0);

assign lhs_V_1_fu_174_p1 = p_Val2_4_reg_446;

assign lhs_V_2_fu_260_p1 = p_Val2_7_fu_252_p3;

assign lhs_V_3_fu_340_p1 = p_Val2_10_fu_332_p3;

assign lhs_V_fu_84_p1 = p_Val2_s_fu_76_p3;

assign or_ln340_11_fu_230_p2 = (xor_ln340_9_fu_224_p2 | p_Result_6_fu_198_p3);

assign or_ln340_12_fu_313_p2 = (xor_ln340_10_fu_308_p2 | p_Result_8_reg_465);

assign or_ln340_13_fu_398_p2 = (xor_ln340_11_fu_392_p2 | p_Result_10_fu_366_p3);

assign or_ln340_fu_144_p2 = (xor_ln340_fu_138_p2 | p_Result_4_fu_112_p3);

assign p_Result_10_fu_366_p3 = p_Val2_12_fu_361_p2[32'd15];

assign p_Result_4_fu_112_p3 = p_Val2_3_fu_106_p2[32'd15];

assign p_Result_5_fu_186_p3 = ret_V_1_fu_180_p2[32'd16];

assign p_Result_6_fu_198_p3 = p_Val2_6_fu_194_p2[32'd15];

assign p_Result_9_fu_353_p3 = ret_V_3_fu_347_p2[32'd16];

assign p_Result_s_fu_98_p3 = ret_V_fu_92_p2[32'd16];

assign p_Val2_10_fu_332_p3 = ((or_ln340_12_fu_313_p2[0:0] === 1'b1) ? select_ln340_10_fu_318_p3 : select_ln388_10_fu_325_p3);

assign p_Val2_12_fu_361_p2 = ($signed(p_Val2_10_fu_332_p3) + $signed(sub3_val_output_V_re_reg_428_pp0_iter1_reg));

assign p_Val2_3_fu_106_p1 = sub0_val_output_V_int_reg;

assign p_Val2_3_fu_106_p2 = ($signed(p_Val2_s_fu_76_p3) + $signed(p_Val2_3_fu_106_p1));

assign p_Val2_4_fu_166_p3 = ((or_ln340_fu_144_p2[0:0] === 1'b1) ? select_ln340_fu_150_p3 : select_ln388_fu_158_p3);

assign p_Val2_6_fu_194_p2 = ($signed(p_Val2_4_reg_446) + $signed(sub1_val_output_V_re_reg_440));

assign p_Val2_7_fu_252_p3 = ((or_ln340_11_fu_230_p2[0:0] === 1'b1) ? select_ln340_9_fu_236_p3 : select_ln388_9_fu_244_p3);

assign p_Val2_9_fu_281_p2 = ($signed(p_Val2_7_fu_252_p3) + $signed(sub2_val_output_V_re_reg_434));

assign p_Val2_s_fu_76_p3 = ((icmp_ln211_fu_70_p2[0:0] === 1'b1) ? 16'd0 : val_output_V_int_reg);

assign ret_V_1_fu_180_p2 = ($signed(rhs_V_1_fu_177_p1) + $signed(lhs_V_1_fu_174_p1));

assign ret_V_2_fu_267_p2 = ($signed(rhs_V_2_fu_264_p1) + $signed(lhs_V_2_fu_260_p1));

assign ret_V_3_fu_347_p2 = ($signed(rhs_V_3_fu_344_p1) + $signed(lhs_V_3_fu_340_p1));

assign ret_V_fu_92_p2 = ($signed(rhs_V_fu_88_p1) + $signed(lhs_V_fu_84_p1));

assign rhs_V_1_fu_177_p1 = sub1_val_output_V_re_reg_440;

assign rhs_V_2_fu_264_p1 = sub2_val_output_V_re_reg_434;

assign rhs_V_3_fu_344_p1 = sub3_val_output_V_re_reg_428_pp0_iter1_reg;

assign rhs_V_fu_88_p0 = sub0_val_output_V_int_reg;

assign rhs_V_fu_88_p1 = rhs_V_fu_88_p0;

assign select_ln340_10_fu_318_p3 = ((xor_ln340_18_fu_304_p2[0:0] === 1'b1) ? 16'd32767 : p_Val2_9_reg_459);

assign select_ln340_11_fu_404_p3 = ((xor_ln340_19_fu_386_p2[0:0] === 1'b1) ? 16'd32767 : p_Val2_12_fu_361_p2);

assign select_ln340_21_fu_420_p3 = ((or_ln340_13_fu_398_p2[0:0] === 1'b1) ? select_ln340_11_fu_404_p3 : select_ln388_11_fu_412_p3);

assign select_ln340_9_fu_236_p3 = ((xor_ln340_17_fu_218_p2[0:0] === 1'b1) ? 16'd32767 : p_Val2_6_fu_194_p2);

assign select_ln340_fu_150_p3 = ((xor_ln340_16_fu_132_p2[0:0] === 1'b1) ? 16'd32767 : p_Val2_3_fu_106_p2);

assign select_ln388_10_fu_325_p3 = ((underflow_2_fu_299_p2[0:0] === 1'b1) ? 16'd32768 : p_Val2_9_reg_459);

assign select_ln388_11_fu_412_p3 = ((underflow_3_fu_380_p2[0:0] === 1'b1) ? 16'd32768 : p_Val2_12_fu_361_p2);

assign select_ln388_9_fu_244_p3 = ((underflow_1_fu_212_p2[0:0] === 1'b1) ? 16'd32768 : p_Val2_6_fu_194_p2);

assign select_ln388_fu_158_p3 = ((underflow_fu_126_p2[0:0] === 1'b1) ? 16'd32768 : p_Val2_3_fu_106_p2);

assign underflow_1_fu_212_p2 = (xor_ln786_2_fu_206_p2 & p_Result_5_fu_186_p3);

assign underflow_2_fu_299_p2 = (xor_ln786_3_fu_294_p2 & p_Result_7_reg_452);

assign underflow_3_fu_380_p2 = (xor_ln786_4_fu_374_p2 & p_Result_9_fu_353_p3);

assign underflow_fu_126_p2 = (xor_ln786_fu_120_p2 & p_Result_s_fu_98_p3);

assign xor_ln340_10_fu_308_p2 = (p_Result_7_reg_452 ^ 1'd1);

assign xor_ln340_11_fu_392_p2 = (p_Result_9_fu_353_p3 ^ 1'd1);

assign xor_ln340_16_fu_132_p2 = (p_Result_s_fu_98_p3 ^ p_Result_4_fu_112_p3);

assign xor_ln340_17_fu_218_p2 = (p_Result_6_fu_198_p3 ^ p_Result_5_fu_186_p3);

assign xor_ln340_18_fu_304_p2 = (p_Result_8_reg_465 ^ p_Result_7_reg_452);

assign xor_ln340_19_fu_386_p2 = (p_Result_9_fu_353_p3 ^ p_Result_10_fu_366_p3);

assign xor_ln340_9_fu_224_p2 = (p_Result_5_fu_186_p3 ^ 1'd1);

assign xor_ln340_fu_138_p2 = (p_Result_s_fu_98_p3 ^ 1'd1);

assign xor_ln786_2_fu_206_p2 = (p_Result_6_fu_198_p3 ^ 1'd1);

assign xor_ln786_3_fu_294_p2 = (p_Result_8_reg_465 ^ 1'd1);

assign xor_ln786_4_fu_374_p2 = (p_Result_10_fu_366_p3 ^ 1'd1);

assign xor_ln786_fu_120_p2 = (p_Result_4_fu_112_p3 ^ 1'd1);

endmodule //post_process
