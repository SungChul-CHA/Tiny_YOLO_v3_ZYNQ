// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module yolo_yolo_top_logistic_activate (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        val_in,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [15:0] val_in;
output  [15:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
reg    ap_block_pp0_stage0_subdone;
reg   [15:0] val_in_read_reg_208;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln1653_fu_70_p2;
reg   [0:0] icmp_ln1653_reg_213;
reg   [0:0] icmp_ln1653_reg_213_pp0_iter1_reg;
reg   [0:0] icmp_ln1653_reg_213_pp0_iter2_reg;
reg   [0:0] icmp_ln1653_reg_213_pp0_iter3_reg;
reg   [0:0] icmp_ln1653_reg_213_pp0_iter4_reg;
reg   [0:0] icmp_ln1653_reg_213_pp0_iter5_reg;
reg   [0:0] icmp_ln1653_reg_213_pp0_iter6_reg;
reg   [0:0] icmp_ln1653_reg_213_pp0_iter7_reg;
reg   [0:0] icmp_ln1653_reg_213_pp0_iter8_reg;
reg   [0:0] icmp_ln1653_reg_213_pp0_iter9_reg;
reg   [0:0] icmp_ln1653_reg_213_pp0_iter10_reg;
reg   [0:0] icmp_ln1653_reg_213_pp0_iter11_reg;
reg   [0:0] icmp_ln1653_reg_213_pp0_iter12_reg;
reg   [0:0] icmp_ln1653_reg_213_pp0_iter13_reg;
reg   [0:0] icmp_ln1653_reg_213_pp0_iter14_reg;
reg   [0:0] icmp_ln1653_reg_213_pp0_iter15_reg;
reg   [0:0] icmp_ln1653_reg_213_pp0_iter16_reg;
reg   [0:0] icmp_ln1653_reg_213_pp0_iter17_reg;
reg   [0:0] icmp_ln1653_reg_213_pp0_iter18_reg;
reg   [0:0] icmp_ln1653_reg_213_pp0_iter19_reg;
reg   [0:0] icmp_ln1653_reg_213_pp0_iter20_reg;
reg   [0:0] icmp_ln1653_reg_213_pp0_iter21_reg;
reg   [0:0] icmp_ln1653_reg_213_pp0_iter22_reg;
reg   [0:0] icmp_ln1653_reg_213_pp0_iter23_reg;
reg   [0:0] icmp_ln1653_reg_213_pp0_iter24_reg;
reg   [0:0] icmp_ln1653_reg_213_pp0_iter25_reg;
reg   [0:0] icmp_ln1653_reg_213_pp0_iter26_reg;
reg   [0:0] icmp_ln1653_reg_213_pp0_iter27_reg;
reg   [0:0] icmp_ln1653_reg_213_pp0_iter28_reg;
wire   [15:0] grp_exp_16_8_s_fu_59_ap_return;
reg   [15:0] rhs_reg_217;
wire   [15:0] p_Val2_s_fu_109_p1;
reg   [15:0] p_Val2_s_reg_227;
wire   [0:0] overflow_fu_149_p2;
reg   [0:0] overflow_reg_233;
wire   [0:0] underflow_fu_173_p2;
reg   [0:0] underflow_reg_239;
wire    grp_exp_16_8_s_fu_59_ap_start;
wire    grp_exp_16_8_s_fu_59_ap_done;
wire    grp_exp_16_8_s_fu_59_ap_idle;
wire    grp_exp_16_8_s_fu_59_ap_ready;
reg    grp_exp_16_8_s_fu_59_ap_ce;
wire   [15:0] grp_exp_16_8_s_fu_59_x;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call1;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call1;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call1;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call1;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call1;
wire    ap_block_state6_pp0_stage0_iter5_ignore_call1;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call1;
wire    ap_block_state8_pp0_stage0_iter7_ignore_call1;
wire    ap_block_state9_pp0_stage0_iter8_ignore_call1;
wire    ap_block_state10_pp0_stage0_iter9_ignore_call1;
wire    ap_block_state11_pp0_stage0_iter10_ignore_call1;
wire    ap_block_state12_pp0_stage0_iter11_ignore_call1;
wire    ap_block_state13_pp0_stage0_iter12_ignore_call1;
wire    ap_block_state14_pp0_stage0_iter13_ignore_call1;
wire    ap_block_state15_pp0_stage0_iter14_ignore_call1;
wire    ap_block_state16_pp0_stage0_iter15_ignore_call1;
wire    ap_block_state17_pp0_stage0_iter16_ignore_call1;
wire    ap_block_state18_pp0_stage0_iter17_ignore_call1;
wire    ap_block_state19_pp0_stage0_iter18_ignore_call1;
wire    ap_block_state20_pp0_stage0_iter19_ignore_call1;
wire    ap_block_state21_pp0_stage0_iter20_ignore_call1;
wire    ap_block_state22_pp0_stage0_iter21_ignore_call1;
wire    ap_block_state23_pp0_stage0_iter22_ignore_call1;
wire    ap_block_state24_pp0_stage0_iter23_ignore_call1;
wire    ap_block_state25_pp0_stage0_iter24_ignore_call1;
wire    ap_block_state26_pp0_stage0_iter25_ignore_call1;
wire    ap_block_state27_pp0_stage0_iter26_ignore_call1;
wire    ap_block_state28_pp0_stage0_iter27_ignore_call1;
wire    ap_block_state29_pp0_stage0_iter28_ignore_call1;
wire    ap_block_state30_pp0_stage0_iter29_ignore_call1;
wire    ap_block_pp0_stage0_11001_ignoreCallOp35;
reg   [15:0] ap_phi_mux_agg_result_2_phi_fu_50_p6;
wire   [15:0] ap_phi_reg_pp0_iter0_agg_result_2_reg_46;
reg   [15:0] ap_phi_reg_pp0_iter1_agg_result_2_reg_46;
reg   [15:0] ap_phi_reg_pp0_iter2_agg_result_2_reg_46;
reg   [15:0] ap_phi_reg_pp0_iter3_agg_result_2_reg_46;
reg   [15:0] ap_phi_reg_pp0_iter4_agg_result_2_reg_46;
reg   [15:0] ap_phi_reg_pp0_iter5_agg_result_2_reg_46;
reg   [15:0] ap_phi_reg_pp0_iter6_agg_result_2_reg_46;
reg   [15:0] ap_phi_reg_pp0_iter7_agg_result_2_reg_46;
reg   [15:0] ap_phi_reg_pp0_iter8_agg_result_2_reg_46;
reg   [15:0] ap_phi_reg_pp0_iter9_agg_result_2_reg_46;
reg   [15:0] ap_phi_reg_pp0_iter10_agg_result_2_reg_46;
reg   [15:0] ap_phi_reg_pp0_iter11_agg_result_2_reg_46;
reg   [15:0] ap_phi_reg_pp0_iter12_agg_result_2_reg_46;
reg   [15:0] ap_phi_reg_pp0_iter13_agg_result_2_reg_46;
reg   [15:0] ap_phi_reg_pp0_iter14_agg_result_2_reg_46;
reg   [15:0] ap_phi_reg_pp0_iter15_agg_result_2_reg_46;
reg   [15:0] ap_phi_reg_pp0_iter16_agg_result_2_reg_46;
reg   [15:0] ap_phi_reg_pp0_iter17_agg_result_2_reg_46;
reg   [15:0] ap_phi_reg_pp0_iter18_agg_result_2_reg_46;
reg   [15:0] ap_phi_reg_pp0_iter19_agg_result_2_reg_46;
reg   [15:0] ap_phi_reg_pp0_iter20_agg_result_2_reg_46;
reg   [15:0] ap_phi_reg_pp0_iter21_agg_result_2_reg_46;
reg   [15:0] ap_phi_reg_pp0_iter22_agg_result_2_reg_46;
reg   [15:0] ap_phi_reg_pp0_iter23_agg_result_2_reg_46;
reg   [15:0] ap_phi_reg_pp0_iter24_agg_result_2_reg_46;
reg   [15:0] ap_phi_reg_pp0_iter25_agg_result_2_reg_46;
reg   [15:0] ap_phi_reg_pp0_iter26_agg_result_2_reg_46;
reg   [15:0] ap_phi_reg_pp0_iter27_agg_result_2_reg_46;
reg   [15:0] ap_phi_reg_pp0_iter28_agg_result_2_reg_46;
reg   [15:0] ap_phi_reg_pp0_iter29_agg_result_2_reg_46;
wire   [15:0] select_ln350_fu_201_p3;
wire   [0:0] or_ln302_1_fu_188_p2;
wire   [15:0] select_ln302_fu_193_p3;
reg    grp_exp_16_8_s_fu_59_ap_start_reg;
wire    ap_block_pp0_stage0;
wire  signed [16:0] sext_ln813_fu_82_p1;
wire  signed [16:0] ret_V_fu_85_p2;
wire   [17:0] grp_fu_95_p2;
wire   [1:0] tmp_fu_121_p4;
wire   [0:0] p_Result_4_fu_113_p3;
wire   [0:0] icmp_ln878_fu_131_p2;
wire   [0:0] p_Result_s_fu_101_p3;
wire   [0:0] or_ln895_fu_137_p2;
wire   [0:0] xor_ln895_fu_143_p2;
wire   [0:0] icmp_ln896_fu_161_p2;
wire   [0:0] xor_ln896_fu_155_p2;
wire   [0:0] or_ln896_fu_167_p2;
wire   [0:0] xor_ln302_fu_183_p2;
wire   [0:0] or_ln302_fu_179_p2;
reg    grp_fu_95_ce;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to28;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_293;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 grp_exp_16_8_s_fu_59_ap_start_reg = 1'b0;
end

yolo_yolo_top_exp_16_8_s grp_exp_16_8_s_fu_59(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_exp_16_8_s_fu_59_ap_start),
    .ap_done(grp_exp_16_8_s_fu_59_ap_done),
    .ap_idle(grp_exp_16_8_s_fu_59_ap_idle),
    .ap_ready(grp_exp_16_8_s_fu_59_ap_ready),
    .ap_ce(grp_exp_16_8_s_fu_59_ap_ce),
    .x(grp_exp_16_8_s_fu_59_x),
    .ap_return(grp_exp_16_8_s_fu_59_ap_return)
);

yolo_yolo_top_sdiv_18ns_17s_18_22_1 #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 18 ))
sdiv_18ns_17s_18_22_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(18'd65536),
    .din1(ret_V_fu_85_p2),
    .ce(grp_fu_95_ce),
    .dout(grp_fu_95_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_exp_16_8_s_fu_59_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1653_fu_70_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            grp_exp_16_8_s_fu_59_ap_start_reg <= 1'b1;
        end else if ((grp_exp_16_8_s_fu_59_ap_ready == 1'b1)) begin
            grp_exp_16_8_s_fu_59_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_293)) begin
        if ((icmp_ln1653_fu_70_p2 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_agg_result_2_reg_46 <= 16'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_agg_result_2_reg_46 <= ap_phi_reg_pp0_iter0_agg_result_2_reg_46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter10_agg_result_2_reg_46 <= ap_phi_reg_pp0_iter9_agg_result_2_reg_46;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter11_agg_result_2_reg_46 <= ap_phi_reg_pp0_iter10_agg_result_2_reg_46;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter12_agg_result_2_reg_46 <= ap_phi_reg_pp0_iter11_agg_result_2_reg_46;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter13_agg_result_2_reg_46 <= ap_phi_reg_pp0_iter12_agg_result_2_reg_46;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter14_agg_result_2_reg_46 <= ap_phi_reg_pp0_iter13_agg_result_2_reg_46;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter15_agg_result_2_reg_46 <= ap_phi_reg_pp0_iter14_agg_result_2_reg_46;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter16_agg_result_2_reg_46 <= ap_phi_reg_pp0_iter15_agg_result_2_reg_46;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter17_agg_result_2_reg_46 <= ap_phi_reg_pp0_iter16_agg_result_2_reg_46;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter18_agg_result_2_reg_46 <= ap_phi_reg_pp0_iter17_agg_result_2_reg_46;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter19_agg_result_2_reg_46 <= ap_phi_reg_pp0_iter18_agg_result_2_reg_46;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter20_agg_result_2_reg_46 <= ap_phi_reg_pp0_iter19_agg_result_2_reg_46;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter21_agg_result_2_reg_46 <= ap_phi_reg_pp0_iter20_agg_result_2_reg_46;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter22_agg_result_2_reg_46 <= ap_phi_reg_pp0_iter21_agg_result_2_reg_46;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter23_agg_result_2_reg_46 <= ap_phi_reg_pp0_iter22_agg_result_2_reg_46;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter24_agg_result_2_reg_46 <= ap_phi_reg_pp0_iter23_agg_result_2_reg_46;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter25_agg_result_2_reg_46 <= ap_phi_reg_pp0_iter24_agg_result_2_reg_46;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter26_agg_result_2_reg_46 <= ap_phi_reg_pp0_iter25_agg_result_2_reg_46;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter27_agg_result_2_reg_46 <= ap_phi_reg_pp0_iter26_agg_result_2_reg_46;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        ap_phi_reg_pp0_iter28_agg_result_2_reg_46 <= ap_phi_reg_pp0_iter27_agg_result_2_reg_46;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        ap_phi_reg_pp0_iter29_agg_result_2_reg_46 <= ap_phi_reg_pp0_iter28_agg_result_2_reg_46;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter2_agg_result_2_reg_46 <= ap_phi_reg_pp0_iter1_agg_result_2_reg_46;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter3_agg_result_2_reg_46 <= ap_phi_reg_pp0_iter2_agg_result_2_reg_46;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter4_agg_result_2_reg_46 <= ap_phi_reg_pp0_iter3_agg_result_2_reg_46;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter5_agg_result_2_reg_46 <= ap_phi_reg_pp0_iter4_agg_result_2_reg_46;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter6_agg_result_2_reg_46 <= ap_phi_reg_pp0_iter5_agg_result_2_reg_46;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter7_agg_result_2_reg_46 <= ap_phi_reg_pp0_iter6_agg_result_2_reg_46;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter8_agg_result_2_reg_46 <= ap_phi_reg_pp0_iter7_agg_result_2_reg_46;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter9_agg_result_2_reg_46 <= ap_phi_reg_pp0_iter8_agg_result_2_reg_46;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln1653_reg_213 <= icmp_ln1653_fu_70_p2;
        icmp_ln1653_reg_213_pp0_iter1_reg <= icmp_ln1653_reg_213;
        val_in_read_reg_208 <= val_in;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln1653_reg_213_pp0_iter10_reg <= icmp_ln1653_reg_213_pp0_iter9_reg;
        icmp_ln1653_reg_213_pp0_iter11_reg <= icmp_ln1653_reg_213_pp0_iter10_reg;
        icmp_ln1653_reg_213_pp0_iter12_reg <= icmp_ln1653_reg_213_pp0_iter11_reg;
        icmp_ln1653_reg_213_pp0_iter13_reg <= icmp_ln1653_reg_213_pp0_iter12_reg;
        icmp_ln1653_reg_213_pp0_iter14_reg <= icmp_ln1653_reg_213_pp0_iter13_reg;
        icmp_ln1653_reg_213_pp0_iter15_reg <= icmp_ln1653_reg_213_pp0_iter14_reg;
        icmp_ln1653_reg_213_pp0_iter16_reg <= icmp_ln1653_reg_213_pp0_iter15_reg;
        icmp_ln1653_reg_213_pp0_iter17_reg <= icmp_ln1653_reg_213_pp0_iter16_reg;
        icmp_ln1653_reg_213_pp0_iter18_reg <= icmp_ln1653_reg_213_pp0_iter17_reg;
        icmp_ln1653_reg_213_pp0_iter19_reg <= icmp_ln1653_reg_213_pp0_iter18_reg;
        icmp_ln1653_reg_213_pp0_iter20_reg <= icmp_ln1653_reg_213_pp0_iter19_reg;
        icmp_ln1653_reg_213_pp0_iter21_reg <= icmp_ln1653_reg_213_pp0_iter20_reg;
        icmp_ln1653_reg_213_pp0_iter22_reg <= icmp_ln1653_reg_213_pp0_iter21_reg;
        icmp_ln1653_reg_213_pp0_iter23_reg <= icmp_ln1653_reg_213_pp0_iter22_reg;
        icmp_ln1653_reg_213_pp0_iter24_reg <= icmp_ln1653_reg_213_pp0_iter23_reg;
        icmp_ln1653_reg_213_pp0_iter25_reg <= icmp_ln1653_reg_213_pp0_iter24_reg;
        icmp_ln1653_reg_213_pp0_iter26_reg <= icmp_ln1653_reg_213_pp0_iter25_reg;
        icmp_ln1653_reg_213_pp0_iter27_reg <= icmp_ln1653_reg_213_pp0_iter26_reg;
        icmp_ln1653_reg_213_pp0_iter28_reg <= icmp_ln1653_reg_213_pp0_iter27_reg;
        icmp_ln1653_reg_213_pp0_iter2_reg <= icmp_ln1653_reg_213_pp0_iter1_reg;
        icmp_ln1653_reg_213_pp0_iter3_reg <= icmp_ln1653_reg_213_pp0_iter2_reg;
        icmp_ln1653_reg_213_pp0_iter4_reg <= icmp_ln1653_reg_213_pp0_iter3_reg;
        icmp_ln1653_reg_213_pp0_iter5_reg <= icmp_ln1653_reg_213_pp0_iter4_reg;
        icmp_ln1653_reg_213_pp0_iter6_reg <= icmp_ln1653_reg_213_pp0_iter5_reg;
        icmp_ln1653_reg_213_pp0_iter7_reg <= icmp_ln1653_reg_213_pp0_iter6_reg;
        icmp_ln1653_reg_213_pp0_iter8_reg <= icmp_ln1653_reg_213_pp0_iter7_reg;
        icmp_ln1653_reg_213_pp0_iter9_reg <= icmp_ln1653_reg_213_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (icmp_ln1653_reg_213_pp0_iter27_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        overflow_reg_233 <= overflow_fu_149_p2;
        p_Val2_s_reg_227 <= p_Val2_s_fu_109_p1;
        underflow_reg_239 <= underflow_fu_173_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (icmp_ln1653_reg_213_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rhs_reg_217 <= grp_exp_16_8_s_fu_59_ap_return;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0_0to28 = 1'b1;
    end else begin
        ap_idle_pp0_0to28 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1653_reg_213_pp0_iter28_reg == 1'd0)) begin
        if ((or_ln302_1_fu_188_p2 == 1'd1)) begin
            ap_phi_mux_agg_result_2_phi_fu_50_p6 = select_ln302_fu_193_p3;
        end else if ((or_ln302_1_fu_188_p2 == 1'd0)) begin
            ap_phi_mux_agg_result_2_phi_fu_50_p6 = select_ln350_fu_201_p3;
        end else begin
            ap_phi_mux_agg_result_2_phi_fu_50_p6 = ap_phi_reg_pp0_iter29_agg_result_2_reg_46;
        end
    end else begin
        ap_phi_mux_agg_result_2_phi_fu_50_p6 = ap_phi_reg_pp0_iter29_agg_result_2_reg_46;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to28 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp35))) begin
        grp_exp_16_8_s_fu_59_ap_ce = 1'b1;
    end else begin
        grp_exp_16_8_s_fu_59_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_95_ce = 1'b1;
    end else begin
        grp_fu_95_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp35 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = (1'b0 == ap_ce);
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8_ignore_call1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_293 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_agg_result_2_reg_46 = 'bx;

assign ap_return = ap_phi_mux_agg_result_2_phi_fu_50_p6;

assign grp_exp_16_8_s_fu_59_ap_start = grp_exp_16_8_s_fu_59_ap_start_reg;

assign grp_exp_16_8_s_fu_59_x = (16'd0 - val_in_read_reg_208);

assign icmp_ln1653_fu_70_p2 = ((val_in == 16'd63584) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_131_p2 = ((tmp_fu_121_p4 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln896_fu_161_p2 = ((tmp_fu_121_p4 != 2'd3) ? 1'b1 : 1'b0);

assign or_ln302_1_fu_188_p2 = (xor_ln302_fu_183_p2 | overflow_reg_233);

assign or_ln302_fu_179_p2 = (underflow_reg_239 | overflow_reg_233);

assign or_ln895_fu_137_p2 = (p_Result_4_fu_113_p3 | icmp_ln878_fu_131_p2);

assign or_ln896_fu_167_p2 = (xor_ln896_fu_155_p2 | icmp_ln896_fu_161_p2);

assign overflow_fu_149_p2 = (xor_ln895_fu_143_p2 & or_ln895_fu_137_p2);

assign p_Result_4_fu_113_p3 = grp_fu_95_p2[32'd15];

assign p_Result_s_fu_101_p3 = grp_fu_95_p2[32'd17];

assign p_Val2_s_fu_109_p1 = grp_fu_95_p2[15:0];

assign ret_V_fu_85_p2 = ($signed(sext_ln813_fu_82_p1) + $signed(17'd256));

assign select_ln302_fu_193_p3 = ((or_ln302_fu_179_p2[0:0] == 1'b1) ? 16'd32767 : p_Val2_s_reg_227);

assign select_ln350_fu_201_p3 = ((underflow_reg_239[0:0] == 1'b1) ? 16'd32768 : p_Val2_s_reg_227);

assign sext_ln813_fu_82_p1 = $signed(rhs_reg_217);

assign tmp_fu_121_p4 = {{grp_fu_95_p2[17:16]}};

assign underflow_fu_173_p2 = (p_Result_s_fu_101_p3 & or_ln896_fu_167_p2);

assign xor_ln302_fu_183_p2 = (underflow_reg_239 ^ 1'd1);

assign xor_ln895_fu_143_p2 = (p_Result_s_fu_101_p3 ^ 1'd1);

assign xor_ln896_fu_155_p2 = (p_Result_4_fu_113_p3 ^ 1'd1);

endmodule //yolo_yolo_top_logistic_activate
