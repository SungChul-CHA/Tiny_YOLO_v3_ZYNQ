// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module yolo_acc_top_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        outStream_TREADY,
        sub_i_i,
        sub_i_i54,
        bound4,
        bound,
        cmp_i_i31_mid111,
        fold_input_ch,
        icmp_ln1027,
        inStream_a_TDATA,
        inStream_a_TVALID,
        inStream_a_TREADY,
        inStream_b_TDATA,
        inStream_b_TVALID,
        inStream_b_TREADY,
        kernel_bias_fp_V_address0,
        kernel_bias_fp_V_ce0,
        kernel_bias_fp_V_q0,
        kernel_bias_fp_V_address1,
        kernel_bias_fp_V_ce1,
        kernel_bias_fp_V_q1,
        bias_en,
        leaky,
        outStream_TDATA,
        outStream_TVALID
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   outStream_TREADY;
input  [9:0] sub_i_i;
input  [9:0] sub_i_i54;
input  [21:0] bound4;
input  [12:0] bound;
input  [0:0] cmp_i_i31_mid111;
input  [3:0] fold_input_ch;
input  [0:0] icmp_ln1027;
input  [111:0] inStream_a_TDATA;
input   inStream_a_TVALID;
output   inStream_a_TREADY;
input  [111:0] inStream_b_TDATA;
input   inStream_b_TVALID;
output   inStream_b_TREADY;
output  [4:0] kernel_bias_fp_V_address0;
output   kernel_bias_fp_V_ce0;
input  [15:0] kernel_bias_fp_V_q0;
output  [4:0] kernel_bias_fp_V_address1;
output   kernel_bias_fp_V_ce1;
input  [15:0] kernel_bias_fp_V_q1;
input  [0:0] bias_en;
input  [0:0] leaky;
output  [111:0] outStream_TDATA;
output   outStream_TVALID;

reg ap_idle;
reg inStream_a_TREADY;
reg inStream_b_TREADY;
reg[4:0] kernel_bias_fp_V_address0;
reg kernel_bias_fp_V_ce0;
reg[4:0] kernel_bias_fp_V_address1;
reg kernel_bias_fp_V_ce1;
reg outStream_TVALID;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_state6_pp0_stage1_iter2;
wire    ap_block_state8_pp0_stage1_iter3;
reg    ap_block_state10_pp0_stage1_iter4;
reg    ap_block_pp0_stage1_subdone;
wire   [0:0] icmp_ln1027_1_fu_330_p2;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    inStream_a_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln1027_1_reg_1067;
reg    inStream_b_TDATA_blk_n;
reg    outStream_TDATA_blk_n;
wire    ap_block_pp0_stage1;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state9_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
reg    ap_block_pp0_stage1_11001;
reg   [12:0] indvar_flatten_load_reg_1071;
wire   [0:0] icmp_ln1027_2_fu_347_p2;
reg   [0:0] icmp_ln1027_2_reg_1076;
wire   [0:0] select_ln42_3_fu_357_p3;
reg   [0:0] select_ln42_3_reg_1085;
wire   [3:0] select_ln45_fu_370_p3;
reg   [3:0] select_ln45_reg_1091;
wire   [4:0] shl_ln_fu_382_p3;
reg   [4:0] shl_ln_reg_1097;
wire   [15:0] select_ln302_fu_636_p3;
reg   [15:0] select_ln302_reg_1113;
wire   [15:0] select_ln302_1_fu_706_p3;
reg   [15:0] select_ln302_1_reg_1118;
wire   [15:0] select_ln302_2_fu_776_p3;
reg   [15:0] select_ln302_2_reg_1123;
wire   [15:0] select_ln302_3_fu_846_p3;
reg   [15:0] select_ln302_3_reg_1128;
reg   [15:0] kernel_bias_fp_V_load_reg_1133;
reg   [15:0] kernel_bias_fp_V_load_1_reg_1138;
wire   [0:0] curr_output_last_V_fu_885_p2;
reg   [0:0] curr_output_last_V_reg_1153;
reg   [0:0] curr_output_last_V_reg_1153_pp0_iter2_reg;
reg   [0:0] curr_output_last_V_reg_1153_pp0_iter3_reg;
reg   [0:0] curr_output_last_V_reg_1153_pp0_iter4_reg;
reg   [5:0] tmp_s_reg_1158;
reg   [5:0] tmp_s_reg_1158_pp0_iter2_reg;
reg   [5:0] tmp_s_reg_1158_pp0_iter3_reg;
reg   [5:0] tmp_s_reg_1158_pp0_iter4_reg;
reg   [4:0] tmp_1_reg_1163;
reg   [4:0] tmp_1_reg_1163_pp0_iter2_reg;
reg   [4:0] tmp_1_reg_1163_pp0_iter3_reg;
reg   [4:0] tmp_1_reg_1163_pp0_iter4_reg;
reg   [17:0] tmp_4_reg_1168;
reg   [17:0] tmp_4_reg_1168_pp0_iter2_reg;
reg   [17:0] tmp_4_reg_1168_pp0_iter3_reg;
reg   [17:0] tmp_4_reg_1168_pp0_iter4_reg;
reg   [15:0] kernel_bias_fp_V_load_2_reg_1173;
reg   [15:0] kernel_bias_fp_V_load_3_reg_1178;
wire   [15:0] grp_post_process_unit_fu_286_ap_return;
reg   [15:0] curr_output_data_sub_data_0_V_reg_1183;
wire   [15:0] grp_post_process_unit_fu_294_ap_return;
reg   [15:0] curr_output_data_sub_data_1_V_reg_1188;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter1_stage0;
reg   [15:0] grp_post_process_unit_fu_286_data_in;
reg   [15:0] grp_post_process_unit_fu_286_bias;
reg    grp_post_process_unit_fu_286_ap_ce;
wire    ap_block_state2_pp0_stage1_iter0_ignore_call83;
wire    ap_block_state4_pp0_stage1_iter1_ignore_call83;
wire    ap_block_state6_pp0_stage1_iter2_ignore_call83;
wire    ap_block_state8_pp0_stage1_iter3_ignore_call83;
reg    ap_block_state10_pp0_stage1_iter4_ignore_call83;
reg    ap_block_pp0_stage1_11001_ignoreCallOp151;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call83;
reg    ap_block_state3_pp0_stage0_iter1_ignore_call83;
wire    ap_block_state5_pp0_stage0_iter2_ignore_call83;
wire    ap_block_state7_pp0_stage0_iter3_ignore_call83;
wire    ap_block_state9_pp0_stage0_iter4_ignore_call83;
reg    ap_block_pp0_stage0_11001_ignoreCallOp155;
reg   [15:0] grp_post_process_unit_fu_294_data_in;
reg   [15:0] grp_post_process_unit_fu_294_bias;
reg    grp_post_process_unit_fu_294_ap_ce;
wire    ap_block_state2_pp0_stage1_iter0_ignore_call88;
wire    ap_block_state4_pp0_stage1_iter1_ignore_call88;
wire    ap_block_state6_pp0_stage1_iter2_ignore_call88;
wire    ap_block_state8_pp0_stage1_iter3_ignore_call88;
reg    ap_block_state10_pp0_stage1_iter4_ignore_call88;
reg    ap_block_pp0_stage1_11001_ignoreCallOp152;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call88;
reg    ap_block_state3_pp0_stage0_iter1_ignore_call88;
wire    ap_block_state5_pp0_stage0_iter2_ignore_call88;
wire    ap_block_state7_pp0_stage0_iter3_ignore_call88;
wire    ap_block_state9_pp0_stage0_iter4_ignore_call88;
reg    ap_block_pp0_stage0_11001_ignoreCallOp156;
wire   [63:0] zext_ln65_fu_390_p1;
wire   [63:0] zext_ln66_fu_401_p1;
wire   [63:0] zext_ln67_fu_859_p1;
wire   [63:0] zext_ln68_fu_869_p1;
reg   [3:0] input_ch_idx_fu_152;
wire   [3:0] add_ln48_fu_921_p2;
wire    ap_loop_init;
reg   [8:0] col_idx_fu_156;
wire   [8:0] select_ln1027_1_fu_499_p3;
reg   [12:0] indvar_flatten_fu_160;
wire   [12:0] select_ln1027_2_fu_931_p3;
reg   [8:0] row_idx_fu_164;
wire   [8:0] select_ln1027_fu_470_p3;
reg   [21:0] indvar_flatten15_fu_168;
wire   [21:0] add_ln1027_1_fu_335_p2;
reg    ap_block_pp0_stage1_01001;
wire   [0:0] icmp_ln1027_3_fu_352_p2;
wire   [0:0] or_ln45_fu_364_p2;
wire   [2:0] trunc_ln65_fu_378_p1;
wire   [4:0] or_ln66_fu_395_p2;
wire   [9:0] row_idx_cast_fu_417_p1;
wire   [9:0] col_idx_cast_fu_426_p1;
wire   [8:0] add_ln42_fu_442_p2;
wire   [9:0] row_idx_cast_mid1_fu_448_p1;
wire   [0:0] cmp_i_i_mid1_fu_452_p2;
wire   [0:0] cmp_i_i_fu_421_p2;
wire   [0:0] cmp_i_i31_fu_430_p2;
wire   [8:0] select_ln42_fu_435_p3;
wire   [8:0] col_idx_3_fu_477_p2;
wire   [9:0] col_idx_cast_mid1_fu_483_p1;
wire   [0:0] cmp_i_i31_mid1_fu_487_p2;
wire   [0:0] select_ln42_2_fu_464_p3;
wire  signed [15:0] curr_input_a_data_sub_data_0_V_fu_506_p1;
wire  signed [15:0] curr_input_b_data_sub_data_0_V_fu_540_p1;
wire  signed [16:0] sext_ln813_1_fu_578_p1;
wire  signed [16:0] sext_ln813_fu_574_p1;
wire   [16:0] ret_V_fu_582_p2;
wire   [15:0] p_Val2_1_fu_596_p2;
wire   [0:0] p_Result_s_fu_588_p3;
wire   [0:0] p_Result_1_fu_602_p3;
wire   [0:0] xor_ln895_fu_610_p2;
wire   [0:0] overflow_fu_616_p2;
wire   [0:0] xor_ln302_fu_622_p2;
wire   [15:0] select_ln346_fu_628_p3;
wire  signed [15:0] curr_input_a_data_sub_data_1_V_fu_510_p4;
wire  signed [15:0] curr_input_b_data_sub_data_1_V_fu_544_p4;
wire  signed [16:0] sext_ln813_3_fu_648_p1;
wire  signed [16:0] sext_ln813_2_fu_644_p1;
wire   [16:0] ret_V_1_fu_652_p2;
wire   [15:0] p_Val2_3_fu_666_p2;
wire   [0:0] p_Result_2_fu_658_p3;
wire   [0:0] p_Result_3_fu_672_p3;
wire   [0:0] xor_ln895_1_fu_680_p2;
wire   [0:0] overflow_1_fu_686_p2;
wire   [0:0] xor_ln302_1_fu_692_p2;
wire   [15:0] select_ln346_1_fu_698_p3;
wire  signed [15:0] curr_input_a_data_sub_data_2_V_fu_520_p4;
wire  signed [15:0] curr_input_b_data_sub_data_2_V_fu_554_p4;
wire  signed [16:0] sext_ln813_5_fu_718_p1;
wire  signed [16:0] sext_ln813_4_fu_714_p1;
wire   [16:0] ret_V_2_fu_722_p2;
wire   [15:0] p_Val2_5_fu_736_p2;
wire   [0:0] p_Result_4_fu_728_p3;
wire   [0:0] p_Result_5_fu_742_p3;
wire   [0:0] xor_ln895_2_fu_750_p2;
wire   [0:0] overflow_2_fu_756_p2;
wire   [0:0] xor_ln302_2_fu_762_p2;
wire   [15:0] select_ln346_2_fu_768_p3;
wire  signed [15:0] curr_input_a_data_sub_data_3_V_fu_530_p4;
wire  signed [15:0] curr_input_b_data_sub_data_3_V_fu_564_p4;
wire  signed [16:0] sext_ln813_7_fu_788_p1;
wire  signed [16:0] sext_ln813_6_fu_784_p1;
wire   [16:0] ret_V_3_fu_792_p2;
wire   [15:0] p_Val2_7_fu_806_p2;
wire   [0:0] p_Result_6_fu_798_p3;
wire   [0:0] p_Result_7_fu_812_p3;
wire   [0:0] xor_ln895_3_fu_820_p2;
wire   [0:0] overflow_3_fu_826_p2;
wire   [0:0] xor_ln302_3_fu_832_p2;
wire   [15:0] select_ln346_3_fu_838_p3;
wire   [4:0] or_ln67_fu_854_p2;
wire   [4:0] or_ln68_fu_864_p2;
wire   [0:0] select_ln42_1_fu_457_p3;
wire   [0:0] icmp_ln75_fu_874_p2;
wire   [0:0] and_ln76_fu_879_p2;
wire   [0:0] select_ln45_1_fu_492_p3;
wire   [12:0] add_ln1027_fu_926_p2;
wire   [109:0] tmp_6_fu_958_p12;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to4;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

yolo_acc_top_post_process_unit grp_post_process_unit_fu_286(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_post_process_unit_fu_286_data_in),
    .bias(grp_post_process_unit_fu_286_bias),
    .bias_en(bias_en),
    .leaky(leaky),
    .ap_return(grp_post_process_unit_fu_286_ap_return),
    .ap_ce(grp_post_process_unit_fu_286_ap_ce)
);

yolo_acc_top_post_process_unit grp_post_process_unit_fu_294(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_post_process_unit_fu_294_data_in),
    .bias(grp_post_process_unit_fu_294_bias),
    .bias_en(bias_en),
    .leaky(leaky),
    .ap_return(grp_post_process_unit_fu_294_ap_return),
    .ap_ce(grp_post_process_unit_fu_294_ap_ce)
);

yolo_acc_top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            col_idx_fu_156 <= 9'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1027_1_reg_1067 == 1'd0))) begin
            col_idx_fu_156 <= select_ln1027_1_fu_499_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten15_fu_168 <= 22'd0;
    end else if (((icmp_ln1027_1_fu_330_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        indvar_flatten15_fu_168 <= add_ln1027_1_fu_335_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_160 <= 13'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1027_1_reg_1067 == 1'd0))) begin
            indvar_flatten_fu_160 <= select_ln1027_2_fu_931_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            input_ch_idx_fu_152 <= 4'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1027_1_reg_1067 == 1'd0))) begin
            input_ch_idx_fu_152 <= add_ln48_fu_921_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            row_idx_fu_164 <= 9'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1027_1_reg_1067 == 1'd0))) begin
            row_idx_fu_164 <= select_ln1027_fu_470_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        icmp_ln1027_1_reg_1067 <= icmp_ln1027_1_fu_330_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        curr_output_data_sub_data_0_V_reg_1183 <= grp_post_process_unit_fu_286_ap_return;
        curr_output_data_sub_data_1_V_reg_1188 <= grp_post_process_unit_fu_294_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_1_reg_1067 == 1'd0))) begin
        curr_output_last_V_reg_1153 <= curr_output_last_V_fu_885_p2;
        select_ln302_1_reg_1118 <= select_ln302_1_fu_706_p3;
        select_ln302_2_reg_1123 <= select_ln302_2_fu_776_p3;
        select_ln302_3_reg_1128 <= select_ln302_3_fu_846_p3;
        select_ln302_reg_1113 <= select_ln302_fu_636_p3;
        tmp_1_reg_1163 <= {{inStream_a_TDATA[100:96]}};
        tmp_4_reg_1168 <= {{inStream_a_TDATA[81:64]}};
        tmp_s_reg_1158 <= {{inStream_a_TDATA[109:104]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        curr_output_last_V_reg_1153_pp0_iter2_reg <= curr_output_last_V_reg_1153;
        curr_output_last_V_reg_1153_pp0_iter3_reg <= curr_output_last_V_reg_1153_pp0_iter2_reg;
        curr_output_last_V_reg_1153_pp0_iter4_reg <= curr_output_last_V_reg_1153_pp0_iter3_reg;
        tmp_1_reg_1163_pp0_iter2_reg <= tmp_1_reg_1163;
        tmp_1_reg_1163_pp0_iter3_reg <= tmp_1_reg_1163_pp0_iter2_reg;
        tmp_1_reg_1163_pp0_iter4_reg <= tmp_1_reg_1163_pp0_iter3_reg;
        tmp_4_reg_1168_pp0_iter2_reg <= tmp_4_reg_1168;
        tmp_4_reg_1168_pp0_iter3_reg <= tmp_4_reg_1168_pp0_iter2_reg;
        tmp_4_reg_1168_pp0_iter4_reg <= tmp_4_reg_1168_pp0_iter3_reg;
        tmp_s_reg_1158_pp0_iter2_reg <= tmp_s_reg_1158;
        tmp_s_reg_1158_pp0_iter3_reg <= tmp_s_reg_1158_pp0_iter2_reg;
        tmp_s_reg_1158_pp0_iter4_reg <= tmp_s_reg_1158_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_1_fu_330_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln1027_2_reg_1076 <= icmp_ln1027_2_fu_347_p2;
        indvar_flatten_load_reg_1071 <= indvar_flatten_fu_160;
        select_ln42_3_reg_1085 <= select_ln42_3_fu_357_p3;
        select_ln45_reg_1091 <= select_ln45_fu_370_p3;
        shl_ln_reg_1097[4 : 2] <= shl_ln_fu_382_p3[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_1_reg_1067 == 1'd0))) begin
        kernel_bias_fp_V_load_1_reg_1138 <= kernel_bias_fp_V_q0;
        kernel_bias_fp_V_load_reg_1133 <= kernel_bias_fp_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        kernel_bias_fp_V_load_2_reg_1173 <= kernel_bias_fp_V_q1;
        kernel_bias_fp_V_load_3_reg_1178 <= kernel_bias_fp_V_q0;
    end
end

always @ (*) begin
    if (((icmp_ln1027_1_fu_330_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_1_reg_1067 == 1'd1))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to4 = 1'b1;
    end else begin
        ap_idle_pp0_1to4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp155) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp151) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_post_process_unit_fu_286_ap_ce = 1'b1;
    end else begin
        grp_post_process_unit_fu_286_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_post_process_unit_fu_286_bias = kernel_bias_fp_V_load_2_reg_1173;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_post_process_unit_fu_286_bias = kernel_bias_fp_V_load_reg_1133;
    end else begin
        grp_post_process_unit_fu_286_bias = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_post_process_unit_fu_286_data_in = select_ln302_2_reg_1123;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_post_process_unit_fu_286_data_in = select_ln302_reg_1113;
    end else begin
        grp_post_process_unit_fu_286_data_in = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp156) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp152) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_post_process_unit_fu_294_ap_ce = 1'b1;
    end else begin
        grp_post_process_unit_fu_294_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_post_process_unit_fu_294_bias = kernel_bias_fp_V_load_3_reg_1178;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_post_process_unit_fu_294_bias = kernel_bias_fp_V_load_1_reg_1138;
    end else begin
        grp_post_process_unit_fu_294_bias = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_post_process_unit_fu_294_data_in = select_ln302_3_reg_1128;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_post_process_unit_fu_294_data_in = select_ln302_1_reg_1118;
    end else begin
        grp_post_process_unit_fu_294_data_in = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_1_reg_1067 == 1'd0))) begin
        inStream_a_TDATA_blk_n = inStream_a_TVALID;
    end else begin
        inStream_a_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_1_reg_1067 == 1'd0))) begin
        inStream_a_TREADY = 1'b1;
    end else begin
        inStream_a_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_1_reg_1067 == 1'd0))) begin
        inStream_b_TDATA_blk_n = inStream_b_TVALID;
    end else begin
        inStream_b_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_1_reg_1067 == 1'd0))) begin
        inStream_b_TREADY = 1'b1;
    end else begin
        inStream_b_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_bias_fp_V_address0 = zext_ln68_fu_869_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        kernel_bias_fp_V_address0 = zext_ln66_fu_401_p1;
    end else begin
        kernel_bias_fp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_bias_fp_V_address1 = zext_ln67_fu_859_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        kernel_bias_fp_V_address1 = zext_ln65_fu_390_p1;
    end else begin
        kernel_bias_fp_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        kernel_bias_fp_V_ce0 = 1'b1;
    end else begin
        kernel_bias_fp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        kernel_bias_fp_V_ce1 = 1'b1;
    end else begin
        kernel_bias_fp_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        outStream_TDATA_blk_n = outStream_TREADY;
    end else begin
        outStream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        outStream_TVALID = 1'b1;
    end else begin
        outStream_TVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to4 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1027_1_fu_335_p2 = (indvar_flatten15_fu_168 + 22'd1);

assign add_ln1027_fu_926_p2 = (indvar_flatten_load_reg_1071 + 13'd1);

assign add_ln42_fu_442_p2 = (row_idx_fu_164 + 9'd1);

assign add_ln48_fu_921_p2 = (select_ln45_reg_1091 + 4'd1);

assign and_ln76_fu_879_p2 = (select_ln42_1_fu_457_p3 & icmp_ln75_fu_874_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((inStream_b_TVALID == 1'b0) & (icmp_ln1027_1_reg_1067 == 1'd0)) | ((inStream_a_TVALID == 1'b0) & (icmp_ln1027_1_reg_1067 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp155 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((inStream_b_TVALID == 1'b0) & (icmp_ln1027_1_reg_1067 == 1'd0)) | ((inStream_a_TVALID == 1'b0) & (icmp_ln1027_1_reg_1067 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp156 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((inStream_b_TVALID == 1'b0) & (icmp_ln1027_1_reg_1067 == 1'd0)) | ((inStream_a_TVALID == 1'b0) & (icmp_ln1027_1_reg_1067 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((inStream_b_TVALID == 1'b0) & (icmp_ln1027_1_reg_1067 == 1'd0)) | ((inStream_a_TVALID == 1'b0) & (icmp_ln1027_1_reg_1067 == 1'd0))));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((outStream_TREADY == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((outStream_TREADY == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_ignoreCallOp151 = ((outStream_TREADY == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_ignoreCallOp152 = ((outStream_TREADY == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((outStream_TREADY == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_state10_pp0_stage1_iter4 = (outStream_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state10_pp0_stage1_iter4_ignore_call83 = (outStream_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state10_pp0_stage1_iter4_ignore_call88 = (outStream_TREADY == 1'b0);
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call83 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call88 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0_ignore_call83 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0_ignore_call88 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (((inStream_b_TVALID == 1'b0) & (icmp_ln1027_1_reg_1067 == 1'd0)) | ((inStream_a_TVALID == 1'b0) & (icmp_ln1027_1_reg_1067 == 1'd0)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1_ignore_call83 = (((inStream_b_TVALID == 1'b0) & (icmp_ln1027_1_reg_1067 == 1'd0)) | ((inStream_a_TVALID == 1'b0) & (icmp_ln1027_1_reg_1067 == 1'd0)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1_ignore_call88 = (((inStream_b_TVALID == 1'b0) & (icmp_ln1027_1_reg_1067 == 1'd0)) | ((inStream_a_TVALID == 1'b0) & (icmp_ln1027_1_reg_1067 == 1'd0)));
end

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1_ignore_call83 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1_ignore_call88 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2_ignore_call83 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2_ignore_call88 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2_ignore_call83 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2_ignore_call88 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3_ignore_call83 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3_ignore_call88 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3_ignore_call83 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3_ignore_call88 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4_ignore_call83 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4_ignore_call88 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign cmp_i_i31_fu_430_p2 = ((sub_i_i54 == col_idx_cast_fu_426_p1) ? 1'b1 : 1'b0);

assign cmp_i_i31_mid1_fu_487_p2 = ((sub_i_i54 == col_idx_cast_mid1_fu_483_p1) ? 1'b1 : 1'b0);

assign cmp_i_i_fu_421_p2 = ((sub_i_i == row_idx_cast_fu_417_p1) ? 1'b1 : 1'b0);

assign cmp_i_i_mid1_fu_452_p2 = ((sub_i_i == row_idx_cast_mid1_fu_448_p1) ? 1'b1 : 1'b0);

assign col_idx_3_fu_477_p2 = (select_ln42_fu_435_p3 + 9'd1);

assign col_idx_cast_fu_426_p1 = col_idx_fu_156;

assign col_idx_cast_mid1_fu_483_p1 = col_idx_3_fu_477_p2;

assign curr_input_a_data_sub_data_0_V_fu_506_p1 = inStream_a_TDATA[15:0];

assign curr_input_a_data_sub_data_1_V_fu_510_p4 = {{inStream_a_TDATA[31:16]}};

assign curr_input_a_data_sub_data_2_V_fu_520_p4 = {{inStream_a_TDATA[47:32]}};

assign curr_input_a_data_sub_data_3_V_fu_530_p4 = {{inStream_a_TDATA[63:48]}};

assign curr_input_b_data_sub_data_0_V_fu_540_p1 = inStream_b_TDATA[15:0];

assign curr_input_b_data_sub_data_1_V_fu_544_p4 = {{inStream_b_TDATA[31:16]}};

assign curr_input_b_data_sub_data_2_V_fu_554_p4 = {{inStream_b_TDATA[47:32]}};

assign curr_input_b_data_sub_data_3_V_fu_564_p4 = {{inStream_b_TDATA[63:48]}};

assign curr_output_last_V_fu_885_p2 = (select_ln45_1_fu_492_p3 & and_ln76_fu_879_p2);

assign icmp_ln1027_1_fu_330_p2 = ((indvar_flatten15_fu_168 == bound4) ? 1'b1 : 1'b0);

assign icmp_ln1027_2_fu_347_p2 = ((indvar_flatten_fu_160 == bound) ? 1'b1 : 1'b0);

assign icmp_ln1027_3_fu_352_p2 = ((input_ch_idx_fu_152 == fold_input_ch) ? 1'b1 : 1'b0);

assign icmp_ln75_fu_874_p2 = ((select_ln45_reg_1091 == 4'd7) ? 1'b1 : 1'b0);

assign or_ln45_fu_364_p2 = (select_ln42_3_fu_357_p3 | icmp_ln1027_2_fu_347_p2);

assign or_ln66_fu_395_p2 = (shl_ln_fu_382_p3 | 5'd1);

assign or_ln67_fu_854_p2 = (shl_ln_reg_1097 | 5'd2);

assign or_ln68_fu_864_p2 = (shl_ln_reg_1097 | 5'd3);

assign outStream_TDATA = tmp_6_fu_958_p12;

assign overflow_1_fu_686_p2 = (xor_ln895_1_fu_680_p2 & p_Result_3_fu_672_p3);

assign overflow_2_fu_756_p2 = (xor_ln895_2_fu_750_p2 & p_Result_5_fu_742_p3);

assign overflow_3_fu_826_p2 = (xor_ln895_3_fu_820_p2 & p_Result_7_fu_812_p3);

assign overflow_fu_616_p2 = (xor_ln895_fu_610_p2 & p_Result_1_fu_602_p3);

assign p_Result_1_fu_602_p3 = p_Val2_1_fu_596_p2[32'd15];

assign p_Result_2_fu_658_p3 = ret_V_1_fu_652_p2[32'd16];

assign p_Result_3_fu_672_p3 = p_Val2_3_fu_666_p2[32'd15];

assign p_Result_4_fu_728_p3 = ret_V_2_fu_722_p2[32'd16];

assign p_Result_5_fu_742_p3 = p_Val2_5_fu_736_p2[32'd15];

assign p_Result_6_fu_798_p3 = ret_V_3_fu_792_p2[32'd16];

assign p_Result_7_fu_812_p3 = p_Val2_7_fu_806_p2[32'd15];

assign p_Result_s_fu_588_p3 = ret_V_fu_582_p2[32'd16];

assign p_Val2_1_fu_596_p2 = ($signed(curr_input_b_data_sub_data_0_V_fu_540_p1) + $signed(curr_input_a_data_sub_data_0_V_fu_506_p1));

assign p_Val2_3_fu_666_p2 = ($signed(curr_input_b_data_sub_data_1_V_fu_544_p4) + $signed(curr_input_a_data_sub_data_1_V_fu_510_p4));

assign p_Val2_5_fu_736_p2 = ($signed(curr_input_b_data_sub_data_2_V_fu_554_p4) + $signed(curr_input_a_data_sub_data_2_V_fu_520_p4));

assign p_Val2_7_fu_806_p2 = ($signed(curr_input_b_data_sub_data_3_V_fu_564_p4) + $signed(curr_input_a_data_sub_data_3_V_fu_530_p4));

assign ret_V_1_fu_652_p2 = ($signed(sext_ln813_3_fu_648_p1) + $signed(sext_ln813_2_fu_644_p1));

assign ret_V_2_fu_722_p2 = ($signed(sext_ln813_5_fu_718_p1) + $signed(sext_ln813_4_fu_714_p1));

assign ret_V_3_fu_792_p2 = ($signed(sext_ln813_7_fu_788_p1) + $signed(sext_ln813_6_fu_784_p1));

assign ret_V_fu_582_p2 = ($signed(sext_ln813_1_fu_578_p1) + $signed(sext_ln813_fu_574_p1));

assign row_idx_cast_fu_417_p1 = row_idx_fu_164;

assign row_idx_cast_mid1_fu_448_p1 = add_ln42_fu_442_p2;

assign select_ln1027_1_fu_499_p3 = ((select_ln42_3_reg_1085[0:0] == 1'b1) ? col_idx_3_fu_477_p2 : select_ln42_fu_435_p3);

assign select_ln1027_2_fu_931_p3 = ((icmp_ln1027_2_reg_1076[0:0] == 1'b1) ? 13'd1 : add_ln1027_fu_926_p2);

assign select_ln1027_fu_470_p3 = ((icmp_ln1027_2_reg_1076[0:0] == 1'b1) ? add_ln42_fu_442_p2 : row_idx_fu_164);

assign select_ln302_1_fu_706_p3 = ((xor_ln302_1_fu_692_p2[0:0] == 1'b1) ? select_ln346_1_fu_698_p3 : p_Val2_3_fu_666_p2);

assign select_ln302_2_fu_776_p3 = ((xor_ln302_2_fu_762_p2[0:0] == 1'b1) ? select_ln346_2_fu_768_p3 : p_Val2_5_fu_736_p2);

assign select_ln302_3_fu_846_p3 = ((xor_ln302_3_fu_832_p2[0:0] == 1'b1) ? select_ln346_3_fu_838_p3 : p_Val2_7_fu_806_p2);

assign select_ln302_fu_636_p3 = ((xor_ln302_fu_622_p2[0:0] == 1'b1) ? select_ln346_fu_628_p3 : p_Val2_1_fu_596_p2);

assign select_ln346_1_fu_698_p3 = ((overflow_1_fu_686_p2[0:0] == 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln346_2_fu_768_p3 = ((overflow_2_fu_756_p2[0:0] == 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln346_3_fu_838_p3 = ((overflow_3_fu_826_p2[0:0] == 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln346_fu_628_p3 = ((overflow_fu_616_p2[0:0] == 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln42_1_fu_457_p3 = ((icmp_ln1027_2_reg_1076[0:0] == 1'b1) ? cmp_i_i_mid1_fu_452_p2 : cmp_i_i_fu_421_p2);

assign select_ln42_2_fu_464_p3 = ((icmp_ln1027_2_reg_1076[0:0] == 1'b1) ? cmp_i_i31_mid111 : cmp_i_i31_fu_430_p2);

assign select_ln42_3_fu_357_p3 = ((icmp_ln1027_2_fu_347_p2[0:0] == 1'b1) ? icmp_ln1027 : icmp_ln1027_3_fu_352_p2);

assign select_ln42_fu_435_p3 = ((icmp_ln1027_2_reg_1076[0:0] == 1'b1) ? 9'd0 : col_idx_fu_156);

assign select_ln45_1_fu_492_p3 = ((select_ln42_3_reg_1085[0:0] == 1'b1) ? cmp_i_i31_mid1_fu_487_p2 : select_ln42_2_fu_464_p3);

assign select_ln45_fu_370_p3 = ((or_ln45_fu_364_p2[0:0] == 1'b1) ? 4'd0 : input_ch_idx_fu_152);

assign sext_ln813_1_fu_578_p1 = curr_input_b_data_sub_data_0_V_fu_540_p1;

assign sext_ln813_2_fu_644_p1 = curr_input_a_data_sub_data_1_V_fu_510_p4;

assign sext_ln813_3_fu_648_p1 = curr_input_b_data_sub_data_1_V_fu_544_p4;

assign sext_ln813_4_fu_714_p1 = curr_input_a_data_sub_data_2_V_fu_520_p4;

assign sext_ln813_5_fu_718_p1 = curr_input_b_data_sub_data_2_V_fu_554_p4;

assign sext_ln813_6_fu_784_p1 = curr_input_a_data_sub_data_3_V_fu_530_p4;

assign sext_ln813_7_fu_788_p1 = curr_input_b_data_sub_data_3_V_fu_564_p4;

assign sext_ln813_fu_574_p1 = curr_input_a_data_sub_data_0_V_fu_506_p1;

assign shl_ln_fu_382_p3 = {{trunc_ln65_fu_378_p1}, {2'd0}};

assign tmp_6_fu_958_p12 = {{{{{{{{{{{tmp_s_reg_1158_pp0_iter4_reg}, {3'd0}}, {tmp_1_reg_1163_pp0_iter4_reg}}, {7'd0}}, {curr_output_last_V_reg_1153_pp0_iter4_reg}}, {6'd0}}, {tmp_4_reg_1168_pp0_iter4_reg}}, {grp_post_process_unit_fu_294_ap_return}}, {grp_post_process_unit_fu_286_ap_return}}, {curr_output_data_sub_data_1_V_reg_1188}}, {curr_output_data_sub_data_0_V_reg_1183}};

assign trunc_ln65_fu_378_p1 = select_ln45_fu_370_p3[2:0];

assign xor_ln302_1_fu_692_p2 = (p_Result_3_fu_672_p3 ^ p_Result_2_fu_658_p3);

assign xor_ln302_2_fu_762_p2 = (p_Result_5_fu_742_p3 ^ p_Result_4_fu_728_p3);

assign xor_ln302_3_fu_832_p2 = (p_Result_7_fu_812_p3 ^ p_Result_6_fu_798_p3);

assign xor_ln302_fu_622_p2 = (p_Result_s_fu_588_p3 ^ p_Result_1_fu_602_p3);

assign xor_ln895_1_fu_680_p2 = (p_Result_2_fu_658_p3 ^ 1'd1);

assign xor_ln895_2_fu_750_p2 = (p_Result_4_fu_728_p3 ^ 1'd1);

assign xor_ln895_3_fu_820_p2 = (p_Result_6_fu_798_p3 ^ 1'd1);

assign xor_ln895_fu_610_p2 = (p_Result_s_fu_588_p3 ^ 1'd1);

assign zext_ln65_fu_390_p1 = shl_ln_fu_382_p3;

assign zext_ln66_fu_401_p1 = or_ln66_fu_395_p2;

assign zext_ln67_fu_859_p1 = or_ln67_fu_854_p2;

assign zext_ln68_fu_869_p1 = or_ln68_fu_864_p2;

always @ (posedge ap_clk) begin
    shl_ln_reg_1097[1:0] <= 2'b00;
end

endmodule //yolo_acc_top_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4
