-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity yolo_acc_top is
generic (
    C_S_AXI_CTRL_BUS_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CTRL_BUS_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    inStream_a_TDATA : IN STD_LOGIC_VECTOR (111 downto 0);
    inStream_a_TVALID : IN STD_LOGIC;
    inStream_a_TREADY : OUT STD_LOGIC;
    inStream_b_TDATA : IN STD_LOGIC_VECTOR (111 downto 0);
    inStream_b_TVALID : IN STD_LOGIC;
    inStream_b_TREADY : OUT STD_LOGIC;
    outStream_TDATA : OUT STD_LOGIC_VECTOR (111 downto 0);
    outStream_TVALID : OUT STD_LOGIC;
    outStream_TREADY : IN STD_LOGIC;
    s_axi_CTRL_BUS_AWVALID : IN STD_LOGIC;
    s_axi_CTRL_BUS_AWREADY : OUT STD_LOGIC;
    s_axi_CTRL_BUS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_BUS_WVALID : IN STD_LOGIC;
    s_axi_CTRL_BUS_WREADY : OUT STD_LOGIC;
    s_axi_CTRL_BUS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_BUS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH/8-1 downto 0);
    s_axi_CTRL_BUS_ARVALID : IN STD_LOGIC;
    s_axi_CTRL_BUS_ARREADY : OUT STD_LOGIC;
    s_axi_CTRL_BUS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_BUS_RVALID : OUT STD_LOGIC;
    s_axi_CTRL_BUS_RREADY : IN STD_LOGIC;
    s_axi_CTRL_BUS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_BUS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CTRL_BUS_BVALID : OUT STD_LOGIC;
    s_axi_CTRL_BUS_BREADY : IN STD_LOGIC;
    s_axi_CTRL_BUS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of yolo_acc_top is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "yolo_acc_top_yolo_acc_top,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.648500,HLS_SYN_LAT=1384472,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1559,HLS_SYN_LUT=2108,HLS_VERSION=2022_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal input_h : STD_LOGIC_VECTOR (8 downto 0);
    signal input_w : STD_LOGIC_VECTOR (8 downto 0);
    signal fold_input_ch : STD_LOGIC_VECTOR (3 downto 0);
    signal leaky : STD_LOGIC_VECTOR (0 downto 0);
    signal bias_en : STD_LOGIC_VECTOR (0 downto 0);
    signal bias_en_read_reg_194 : STD_LOGIC_VECTOR (0 downto 0);
    signal leaky_read_reg_200 : STD_LOGIC_VECTOR (0 downto 0);
    signal fold_input_ch_read_reg_205 : STD_LOGIC_VECTOR (3 downto 0);
    signal input_w_read_reg_213 : STD_LOGIC_VECTOR (8 downto 0);
    signal input_h_read_reg_219 : STD_LOGIC_VECTOR (8 downto 0);
    signal bound_fu_141_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal bound_reg_225 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal sub_i_i54_fu_157_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_i_i54_reg_240 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal sub_i_i_fu_167_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_i_i_reg_245 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_187_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal bound4_reg_250 : STD_LOGIC_VECTOR (21 downto 0);
    signal cmp_i_i31_mid111_fu_174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i31_mid111_reg_255 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_fu_181_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_260 : STD_LOGIC_VECTOR (0 downto 0);
    signal kernel_bias_fp_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal kernel_bias_fp_V_ce0 : STD_LOGIC;
    signal kernel_bias_fp_V_we0 : STD_LOGIC;
    signal kernel_bias_fp_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_bias_fp_V_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal kernel_bias_fp_V_ce1 : STD_LOGIC;
    signal kernel_bias_fp_V_we1 : STD_LOGIC;
    signal kernel_bias_fp_V_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_ap_start : STD_LOGIC;
    signal grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_ap_done : STD_LOGIC;
    signal grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_ap_idle : STD_LOGIC;
    signal grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_ap_ready : STD_LOGIC;
    signal grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_kernel_bias_fp_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_kernel_bias_fp_V_ce0 : STD_LOGIC;
    signal grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_kernel_bias_fp_V_we0 : STD_LOGIC;
    signal grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_kernel_bias_fp_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_kernel_bias_fp_V_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_kernel_bias_fp_V_ce1 : STD_LOGIC;
    signal grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_kernel_bias_fp_V_we1 : STD_LOGIC;
    signal grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_kernel_bias_fp_V_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_inStream_b_TREADY : STD_LOGIC;
    signal grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_ap_start : STD_LOGIC;
    signal grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_ap_done : STD_LOGIC;
    signal grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_ap_idle : STD_LOGIC;
    signal grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_ap_ready : STD_LOGIC;
    signal grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_outStream_TREADY : STD_LOGIC;
    signal grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_inStream_a_TREADY : STD_LOGIC;
    signal grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_inStream_b_TREADY : STD_LOGIC;
    signal grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_kernel_bias_fp_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_kernel_bias_fp_V_ce0 : STD_LOGIC;
    signal grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_kernel_bias_fp_V_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_kernel_bias_fp_V_ce1 : STD_LOGIC;
    signal grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_outStream_TDATA : STD_LOGIC_VECTOR (111 downto 0);
    signal grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_outStream_TVALID : STD_LOGIC;
    signal grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal bound_fu_141_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal bound_fu_141_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal input_w_cast_fu_154_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal input_h_cast_fu_164_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_187_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_187_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_187_ce : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal regslice_both_outStream_U_apdone_blk : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal regslice_both_inStream_a_U_apdone_blk : STD_LOGIC;
    signal inStream_a_TDATA_int_regslice : STD_LOGIC_VECTOR (111 downto 0);
    signal inStream_a_TVALID_int_regslice : STD_LOGIC;
    signal inStream_a_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_inStream_a_U_ack_in : STD_LOGIC;
    signal regslice_both_inStream_b_U_apdone_blk : STD_LOGIC;
    signal inStream_b_TDATA_int_regslice : STD_LOGIC_VECTOR (111 downto 0);
    signal inStream_b_TVALID_int_regslice : STD_LOGIC;
    signal inStream_b_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_inStream_b_U_ack_in : STD_LOGIC;
    signal outStream_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_outStream_U_vld_out : STD_LOGIC;
    signal bound_fu_141_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal bound_fu_141_p10 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_187_p00 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_187_p10 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component yolo_acc_top_yolo_acc_top_Pipeline_VITIS_LOOP_25_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        inStream_b_TVALID : IN STD_LOGIC;
        fold_input_ch : IN STD_LOGIC_VECTOR (3 downto 0);
        kernel_bias_fp_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        kernel_bias_fp_V_ce0 : OUT STD_LOGIC;
        kernel_bias_fp_V_we0 : OUT STD_LOGIC;
        kernel_bias_fp_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        kernel_bias_fp_V_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        kernel_bias_fp_V_ce1 : OUT STD_LOGIC;
        kernel_bias_fp_V_we1 : OUT STD_LOGIC;
        kernel_bias_fp_V_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        bias_en : IN STD_LOGIC_VECTOR (0 downto 0);
        inStream_b_TDATA : IN STD_LOGIC_VECTOR (111 downto 0);
        inStream_b_TREADY : OUT STD_LOGIC );
    end component;


    component yolo_acc_top_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        outStream_TREADY : IN STD_LOGIC;
        sub_i_i : IN STD_LOGIC_VECTOR (9 downto 0);
        sub_i_i54 : IN STD_LOGIC_VECTOR (9 downto 0);
        bound4 : IN STD_LOGIC_VECTOR (21 downto 0);
        bound : IN STD_LOGIC_VECTOR (12 downto 0);
        cmp_i_i31_mid111 : IN STD_LOGIC_VECTOR (0 downto 0);
        fold_input_ch : IN STD_LOGIC_VECTOR (3 downto 0);
        icmp_ln1027 : IN STD_LOGIC_VECTOR (0 downto 0);
        inStream_a_TDATA : IN STD_LOGIC_VECTOR (111 downto 0);
        inStream_a_TVALID : IN STD_LOGIC;
        inStream_a_TREADY : OUT STD_LOGIC;
        inStream_b_TDATA : IN STD_LOGIC_VECTOR (111 downto 0);
        inStream_b_TVALID : IN STD_LOGIC;
        inStream_b_TREADY : OUT STD_LOGIC;
        kernel_bias_fp_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        kernel_bias_fp_V_ce0 : OUT STD_LOGIC;
        kernel_bias_fp_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_bias_fp_V_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        kernel_bias_fp_V_ce1 : OUT STD_LOGIC;
        kernel_bias_fp_V_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        bias_en : IN STD_LOGIC_VECTOR (0 downto 0);
        leaky : IN STD_LOGIC_VECTOR (0 downto 0);
        outStream_TDATA : OUT STD_LOGIC_VECTOR (111 downto 0);
        outStream_TVALID : OUT STD_LOGIC );
    end component;


    component yolo_acc_top_mul_9ns_4ns_13_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component yolo_acc_top_mul_mul_9ns_13ns_22_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component yolo_acc_top_kernel_bias_fp_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (15 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component yolo_acc_top_CTRL_BUS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        input_h : OUT STD_LOGIC_VECTOR (8 downto 0);
        input_w : OUT STD_LOGIC_VECTOR (8 downto 0);
        fold_input_ch : OUT STD_LOGIC_VECTOR (3 downto 0);
        leaky : OUT STD_LOGIC_VECTOR (0 downto 0);
        bias_en : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component yolo_acc_top_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    kernel_bias_fp_V_U : component yolo_acc_top_kernel_bias_fp_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => kernel_bias_fp_V_address0,
        ce0 => kernel_bias_fp_V_ce0,
        we0 => kernel_bias_fp_V_we0,
        d0 => grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_kernel_bias_fp_V_d0,
        q0 => kernel_bias_fp_V_q0,
        address1 => kernel_bias_fp_V_address1,
        ce1 => kernel_bias_fp_V_ce1,
        we1 => kernel_bias_fp_V_we1,
        d1 => grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_kernel_bias_fp_V_d1,
        q1 => kernel_bias_fp_V_q1);

    grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106 : component yolo_acc_top_yolo_acc_top_Pipeline_VITIS_LOOP_25_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_ap_start,
        ap_done => grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_ap_done,
        ap_idle => grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_ap_idle,
        ap_ready => grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_ap_ready,
        inStream_b_TVALID => inStream_b_TVALID_int_regslice,
        fold_input_ch => fold_input_ch_read_reg_205,
        kernel_bias_fp_V_address0 => grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_kernel_bias_fp_V_address0,
        kernel_bias_fp_V_ce0 => grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_kernel_bias_fp_V_ce0,
        kernel_bias_fp_V_we0 => grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_kernel_bias_fp_V_we0,
        kernel_bias_fp_V_d0 => grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_kernel_bias_fp_V_d0,
        kernel_bias_fp_V_address1 => grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_kernel_bias_fp_V_address1,
        kernel_bias_fp_V_ce1 => grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_kernel_bias_fp_V_ce1,
        kernel_bias_fp_V_we1 => grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_kernel_bias_fp_V_we1,
        kernel_bias_fp_V_d1 => grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_kernel_bias_fp_V_d1,
        bias_en => bias_en_read_reg_194,
        inStream_b_TDATA => inStream_b_TDATA_int_regslice,
        inStream_b_TREADY => grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_inStream_b_TREADY);

    grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115 : component yolo_acc_top_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_ap_start,
        ap_done => grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_ap_done,
        ap_idle => grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_ap_idle,
        ap_ready => grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_ap_ready,
        outStream_TREADY => grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_outStream_TREADY,
        sub_i_i => sub_i_i_reg_245,
        sub_i_i54 => sub_i_i54_reg_240,
        bound4 => bound4_reg_250,
        bound => bound_reg_225,
        cmp_i_i31_mid111 => cmp_i_i31_mid111_reg_255,
        fold_input_ch => fold_input_ch_read_reg_205,
        icmp_ln1027 => icmp_ln1027_reg_260,
        inStream_a_TDATA => inStream_a_TDATA_int_regslice,
        inStream_a_TVALID => inStream_a_TVALID_int_regslice,
        inStream_a_TREADY => grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_inStream_a_TREADY,
        inStream_b_TDATA => inStream_b_TDATA_int_regslice,
        inStream_b_TVALID => inStream_b_TVALID_int_regslice,
        inStream_b_TREADY => grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_inStream_b_TREADY,
        kernel_bias_fp_V_address0 => grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_kernel_bias_fp_V_address0,
        kernel_bias_fp_V_ce0 => grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_kernel_bias_fp_V_ce0,
        kernel_bias_fp_V_q0 => kernel_bias_fp_V_q0,
        kernel_bias_fp_V_address1 => grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_kernel_bias_fp_V_address1,
        kernel_bias_fp_V_ce1 => grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_kernel_bias_fp_V_ce1,
        kernel_bias_fp_V_q1 => kernel_bias_fp_V_q1,
        bias_en => bias_en_read_reg_194,
        leaky => leaky_read_reg_200,
        outStream_TDATA => grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_outStream_TDATA,
        outStream_TVALID => grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_outStream_TVALID);

    CTRL_BUS_s_axi_U : component yolo_acc_top_CTRL_BUS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_BUS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_BUS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CTRL_BUS_AWVALID,
        AWREADY => s_axi_CTRL_BUS_AWREADY,
        AWADDR => s_axi_CTRL_BUS_AWADDR,
        WVALID => s_axi_CTRL_BUS_WVALID,
        WREADY => s_axi_CTRL_BUS_WREADY,
        WDATA => s_axi_CTRL_BUS_WDATA,
        WSTRB => s_axi_CTRL_BUS_WSTRB,
        ARVALID => s_axi_CTRL_BUS_ARVALID,
        ARREADY => s_axi_CTRL_BUS_ARREADY,
        ARADDR => s_axi_CTRL_BUS_ARADDR,
        RVALID => s_axi_CTRL_BUS_RVALID,
        RREADY => s_axi_CTRL_BUS_RREADY,
        RDATA => s_axi_CTRL_BUS_RDATA,
        RRESP => s_axi_CTRL_BUS_RRESP,
        BVALID => s_axi_CTRL_BUS_BVALID,
        BREADY => s_axi_CTRL_BUS_BREADY,
        BRESP => s_axi_CTRL_BUS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        input_h => input_h,
        input_w => input_w,
        fold_input_ch => fold_input_ch,
        leaky => leaky,
        bias_en => bias_en,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    mul_9ns_4ns_13_1_1_U24 : component yolo_acc_top_mul_9ns_4ns_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 4,
        dout_WIDTH => 13)
    port map (
        din0 => bound_fu_141_p0,
        din1 => bound_fu_141_p1,
        dout => bound_fu_141_p2);

    mul_mul_9ns_13ns_22_4_1_U25 : component yolo_acc_top_mul_mul_9ns_13ns_22_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 9,
        din1_WIDTH => 13,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_187_p0,
        din1 => grp_fu_187_p1,
        ce => grp_fu_187_ce,
        dout => grp_fu_187_p2);

    regslice_both_inStream_a_U : component yolo_acc_top_regslice_both
    generic map (
        DataWidth => 112)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => inStream_a_TDATA,
        vld_in => inStream_a_TVALID,
        ack_in => regslice_both_inStream_a_U_ack_in,
        data_out => inStream_a_TDATA_int_regslice,
        vld_out => inStream_a_TVALID_int_regslice,
        ack_out => inStream_a_TREADY_int_regslice,
        apdone_blk => regslice_both_inStream_a_U_apdone_blk);

    regslice_both_inStream_b_U : component yolo_acc_top_regslice_both
    generic map (
        DataWidth => 112)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => inStream_b_TDATA,
        vld_in => inStream_b_TVALID,
        ack_in => regslice_both_inStream_b_U_ack_in,
        data_out => inStream_b_TDATA_int_regslice,
        vld_out => inStream_b_TVALID_int_regslice,
        ack_out => inStream_b_TREADY_int_regslice,
        apdone_blk => regslice_both_inStream_b_U_apdone_blk);

    regslice_both_outStream_U : component yolo_acc_top_regslice_both
    generic map (
        DataWidth => 112)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_outStream_TDATA,
        vld_in => grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_outStream_TVALID,
        ack_in => outStream_TREADY_int_regslice,
        data_out => outStream_TDATA,
        vld_out => regslice_both_outStream_U_vld_out,
        ack_out => outStream_TREADY,
        apdone_blk => regslice_both_outStream_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_ap_ready = ap_const_logic_1)) then 
                    grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_ap_ready = ap_const_logic_1)) then 
                    grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                bias_en_read_reg_194 <= bias_en;
                fold_input_ch_read_reg_205 <= fold_input_ch;
                input_h_read_reg_219 <= input_h;
                input_w_read_reg_213 <= input_w;
                leaky_read_reg_200 <= leaky;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                bound4_reg_250 <= grp_fu_187_p2;
                cmp_i_i31_mid111_reg_255 <= cmp_i_i31_mid111_fu_174_p2;
                icmp_ln1027_reg_260 <= icmp_ln1027_fu_181_p2;
                sub_i_i54_reg_240 <= sub_i_i54_fu_157_p2;
                sub_i_i_reg_245 <= sub_i_i_fu_167_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                bound_reg_225 <= bound_fu_141_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_ap_done, grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_ap_done, ap_CS_fsm_state3, ap_CS_fsm_state6, ap_CS_fsm_state7, regslice_both_outStream_U_apdone_blk)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((regslice_both_outStream_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_ap_done)
    begin
        if ((grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_ap_done)
    begin
        if ((grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state7_blk_assign_proc : process(regslice_both_outStream_U_apdone_blk)
    begin
        if ((regslice_both_outStream_U_apdone_blk = ap_const_logic_1)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state7, regslice_both_outStream_U_apdone_blk)
    begin
        if (((regslice_both_outStream_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state7, regslice_both_outStream_U_apdone_blk)
    begin
        if (((regslice_both_outStream_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    bound_fu_141_p0 <= bound_fu_141_p00(9 - 1 downto 0);
    bound_fu_141_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_w_read_reg_213),13));
    bound_fu_141_p1 <= bound_fu_141_p10(4 - 1 downto 0);
    bound_fu_141_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(fold_input_ch_read_reg_205),13));
    cmp_i_i31_mid111_fu_174_p2 <= "1" when (sub_i_i54_fu_157_p2 = ap_const_lv10_0) else "0";

    grp_fu_187_ce_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5, grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_ap_done, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state4) or ((grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            grp_fu_187_ce <= ap_const_logic_1;
        else 
            grp_fu_187_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_187_p0 <= grp_fu_187_p00(9 - 1 downto 0);
    grp_fu_187_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_h_read_reg_219),22));
    grp_fu_187_p1 <= grp_fu_187_p10(13 - 1 downto 0);
    grp_fu_187_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bound_fu_141_p2),22));
    grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_ap_start <= grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_ap_start_reg;
    grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_ap_start <= grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_ap_start_reg;
    grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_outStream_TREADY <= (outStream_TREADY_int_regslice and ap_CS_fsm_state6);
    icmp_ln1027_fu_181_p2 <= "1" when (fold_input_ch_read_reg_205 = ap_const_lv4_0) else "0";
    inStream_a_TREADY <= regslice_both_inStream_a_U_ack_in;

    inStream_a_TREADY_int_regslice_assign_proc : process(grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_inStream_a_TREADY, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            inStream_a_TREADY_int_regslice <= grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_inStream_a_TREADY;
        else 
            inStream_a_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    inStream_b_TREADY <= regslice_both_inStream_b_U_ack_in;

    inStream_b_TREADY_int_regslice_assign_proc : process(grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_inStream_b_TREADY, grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_inStream_b_TREADY, ap_CS_fsm_state3, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            inStream_b_TREADY_int_regslice <= grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_inStream_b_TREADY;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            inStream_b_TREADY_int_regslice <= grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_inStream_b_TREADY;
        else 
            inStream_b_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    input_h_cast_fu_164_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_h_read_reg_219),10));
    input_w_cast_fu_154_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_w_read_reg_213),10));

    kernel_bias_fp_V_address0_assign_proc : process(grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_kernel_bias_fp_V_address0, grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_kernel_bias_fp_V_address0, ap_CS_fsm_state3, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            kernel_bias_fp_V_address0 <= grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_kernel_bias_fp_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            kernel_bias_fp_V_address0 <= grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_kernel_bias_fp_V_address0;
        else 
            kernel_bias_fp_V_address0 <= "XXXXX";
        end if; 
    end process;


    kernel_bias_fp_V_address1_assign_proc : process(grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_kernel_bias_fp_V_address1, grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_kernel_bias_fp_V_address1, ap_CS_fsm_state3, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            kernel_bias_fp_V_address1 <= grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_kernel_bias_fp_V_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            kernel_bias_fp_V_address1 <= grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_kernel_bias_fp_V_address1;
        else 
            kernel_bias_fp_V_address1 <= "XXXXX";
        end if; 
    end process;


    kernel_bias_fp_V_ce0_assign_proc : process(grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_kernel_bias_fp_V_ce0, grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_kernel_bias_fp_V_ce0, ap_CS_fsm_state3, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            kernel_bias_fp_V_ce0 <= grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_kernel_bias_fp_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            kernel_bias_fp_V_ce0 <= grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_kernel_bias_fp_V_ce0;
        else 
            kernel_bias_fp_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kernel_bias_fp_V_ce1_assign_proc : process(grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_kernel_bias_fp_V_ce1, grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_kernel_bias_fp_V_ce1, ap_CS_fsm_state3, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            kernel_bias_fp_V_ce1 <= grp_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4_fu_115_kernel_bias_fp_V_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            kernel_bias_fp_V_ce1 <= grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_kernel_bias_fp_V_ce1;
        else 
            kernel_bias_fp_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    kernel_bias_fp_V_we0_assign_proc : process(grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_kernel_bias_fp_V_we0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            kernel_bias_fp_V_we0 <= grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_kernel_bias_fp_V_we0;
        else 
            kernel_bias_fp_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    kernel_bias_fp_V_we1_assign_proc : process(grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_kernel_bias_fp_V_we1, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            kernel_bias_fp_V_we1 <= grp_yolo_acc_top_Pipeline_VITIS_LOOP_25_1_fu_106_kernel_bias_fp_V_we1;
        else 
            kernel_bias_fp_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    outStream_TVALID <= regslice_both_outStream_U_vld_out;
    sub_i_i54_fu_157_p2 <= std_logic_vector(unsigned(input_w_cast_fu_154_p1) + unsigned(ap_const_lv10_3FF));
    sub_i_i_fu_167_p2 <= std_logic_vector(unsigned(input_h_cast_fu_164_p1) + unsigned(ap_const_lv10_3FF));
end behav;
