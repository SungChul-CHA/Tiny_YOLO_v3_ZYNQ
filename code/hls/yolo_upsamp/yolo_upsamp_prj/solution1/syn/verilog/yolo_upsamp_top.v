// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="yolo_upsamp_top_yolo_upsamp_top,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.260000,HLS_SYN_LAT=5416,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=798,HLS_SYN_LUT=783,HLS_VERSION=2022_2}" *)

module yolo_upsamp_top (
        ap_clk,
        ap_rst_n,
        inStream_TVALID,
        outStream_TREADY,
        inStream_TDATA,
        inStream_TREADY,
        inStream_TKEEP,
        inStream_TSTRB,
        inStream_TUSER,
        inStream_TLAST,
        inStream_TID,
        inStream_TDEST,
        outStream_TDATA,
        outStream_TVALID,
        outStream_TKEEP,
        outStream_TSTRB,
        outStream_TUSER,
        outStream_TLAST,
        outStream_TID,
        outStream_TDEST,
        s_axi_CTRL_BUS_AWVALID,
        s_axi_CTRL_BUS_AWREADY,
        s_axi_CTRL_BUS_AWADDR,
        s_axi_CTRL_BUS_WVALID,
        s_axi_CTRL_BUS_WREADY,
        s_axi_CTRL_BUS_WDATA,
        s_axi_CTRL_BUS_WSTRB,
        s_axi_CTRL_BUS_ARVALID,
        s_axi_CTRL_BUS_ARREADY,
        s_axi_CTRL_BUS_ARADDR,
        s_axi_CTRL_BUS_RVALID,
        s_axi_CTRL_BUS_RREADY,
        s_axi_CTRL_BUS_RDATA,
        s_axi_CTRL_BUS_RRESP,
        s_axi_CTRL_BUS_BVALID,
        s_axi_CTRL_BUS_BREADY,
        s_axi_CTRL_BUS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;
parameter    C_S_AXI_CTRL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_BUS_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CTRL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   inStream_TVALID;
input   outStream_TREADY;
input  [63:0] inStream_TDATA;
output   inStream_TREADY;
input  [7:0] inStream_TKEEP;
input  [7:0] inStream_TSTRB;
input  [1:0] inStream_TUSER;
input  [0:0] inStream_TLAST;
input  [4:0] inStream_TID;
input  [5:0] inStream_TDEST;
output  [63:0] outStream_TDATA;
output   outStream_TVALID;
output  [7:0] outStream_TKEEP;
output  [7:0] outStream_TSTRB;
output  [1:0] outStream_TUSER;
output  [0:0] outStream_TLAST;
output  [4:0] outStream_TID;
output  [5:0] outStream_TDEST;
input   s_axi_CTRL_BUS_AWVALID;
output   s_axi_CTRL_BUS_AWREADY;
input  [C_S_AXI_CTRL_BUS_ADDR_WIDTH - 1:0] s_axi_CTRL_BUS_AWADDR;
input   s_axi_CTRL_BUS_WVALID;
output   s_axi_CTRL_BUS_WREADY;
input  [C_S_AXI_CTRL_BUS_DATA_WIDTH - 1:0] s_axi_CTRL_BUS_WDATA;
input  [C_S_AXI_CTRL_BUS_WSTRB_WIDTH - 1:0] s_axi_CTRL_BUS_WSTRB;
input   s_axi_CTRL_BUS_ARVALID;
output   s_axi_CTRL_BUS_ARREADY;
input  [C_S_AXI_CTRL_BUS_ADDR_WIDTH - 1:0] s_axi_CTRL_BUS_ARADDR;
output   s_axi_CTRL_BUS_RVALID;
input   s_axi_CTRL_BUS_RREADY;
output  [C_S_AXI_CTRL_BUS_DATA_WIDTH - 1:0] s_axi_CTRL_BUS_RDATA;
output  [1:0] s_axi_CTRL_BUS_RRESP;
output   s_axi_CTRL_BUS_BVALID;
input   s_axi_CTRL_BUS_BREADY;
output  [1:0] s_axi_CTRL_BUS_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_idle_pp0;
wire    ap_ready;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
reg   [0:0] icmp_ln15_reg_1436;
reg   [0:0] icmp_ln15_reg_1436_pp0_iter4_reg;
reg   [0:0] select_ln21_1_reg_1517;
reg   [0:0] select_ln21_1_reg_1517_pp0_iter4_reg;
reg    ap_predicate_op237_read_state6;
reg    ap_block_state6_pp0_stage0_iter5;
wire    regslice_both_outStream_V_data_V_U_apdone_blk;
reg    ap_block_state7_pp0_stage0_iter6;
reg    ap_block_state8_pp0_stage0_iter7;
wire    ap_loop_exit_ready;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln15_fu_665_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
reg    ap_ready_int;
reg    inStream_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    outStream_TDATA_blk_n;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln15_reg_1436_pp0_iter1_reg;
reg   [0:0] icmp_ln15_reg_1436_pp0_iter2_reg;
reg   [0:0] icmp_ln15_reg_1436_pp0_iter3_reg;
reg   [0:0] icmp_ln15_reg_1436_pp0_iter5_reg;
wire   [0:0] icmp_ln17_fu_677_p2;
reg   [0:0] icmp_ln17_reg_1440;
reg   [0:0] icmp_ln17_reg_1440_pp0_iter1_reg;
wire   [0:0] xor_ln14_fu_683_p2;
reg   [0:0] xor_ln14_reg_1452;
reg   [0:0] xor_ln14_reg_1452_pp0_iter1_reg;
wire   [0:0] icmp_ln19_fu_689_p2;
reg   [0:0] icmp_ln19_reg_1460;
wire   [0:0] and_ln14_4_fu_695_p2;
reg   [0:0] and_ln14_4_reg_1465;
reg   [0:0] and_ln14_4_reg_1465_pp0_iter1_reg;
wire   [0:0] or_ln17_fu_701_p2;
reg   [0:0] or_ln17_reg_1476;
reg   [0:0] or_ln17_reg_1476_pp0_iter1_reg;
wire   [0:0] cmp96_not_fu_756_p2;
reg   [0:0] cmp96_not_reg_1482;
wire   [0:0] or_ln17_3_fu_780_p2;
reg   [0:0] or_ln17_3_reg_1488;
wire   [0:0] and_ln17_1_fu_790_p2;
reg   [0:0] and_ln17_1_reg_1493;
wire   [3:0] add_ln19_fu_796_p2;
reg   [3:0] add_ln19_reg_1502;
wire   [0:0] or_ln19_2_fu_807_p2;
reg   [0:0] or_ln19_2_reg_1507;
wire   [3:0] select_ln19_1_fu_812_p3;
reg   [3:0] select_ln19_1_reg_1512;
reg   [3:0] select_ln19_1_reg_1512_pp0_iter2_reg;
reg   [3:0] select_ln19_1_reg_1512_pp0_iter3_reg;
wire   [0:0] select_ln21_1_fu_1114_p3;
reg   [0:0] select_ln21_1_reg_1517_pp0_iter3_reg;
reg   [0:0] select_ln21_1_reg_1517_pp0_iter5_reg;
wire   [0:0] curr_output_last_V_fu_1172_p2;
reg   [0:0] curr_output_last_V_reg_1526;
reg   [0:0] curr_output_last_V_reg_1526_pp0_iter3_reg;
reg   [0:0] curr_output_last_V_reg_1526_pp0_iter4_reg;
reg   [0:0] curr_output_last_V_reg_1526_pp0_iter5_reg;
wire   [15:0] tmp_data_sub_data_0_V_1_fu_1238_p1;
reg    ap_condition_exit_pp0_iter2_stage0;
wire   [6:0] line_buff_group_0_val_V_address0;
reg    line_buff_group_0_val_V_ce0;
wire   [15:0] line_buff_group_0_val_V_q0;
wire   [6:0] line_buff_group_0_val_V_address1;
reg    line_buff_group_0_val_V_ce1;
reg    line_buff_group_0_val_V_we1;
wire   [15:0] line_buff_group_0_val_V_d1;
wire   [6:0] line_buff_group_1_val_V_address0;
reg    line_buff_group_1_val_V_ce0;
wire   [15:0] line_buff_group_1_val_V_q0;
wire   [6:0] line_buff_group_1_val_V_address1;
reg    line_buff_group_1_val_V_ce1;
reg    line_buff_group_1_val_V_we1;
wire   [15:0] line_buff_group_1_val_V_d1;
wire   [6:0] line_buff_group_2_val_V_address0;
reg    line_buff_group_2_val_V_ce0;
wire   [15:0] line_buff_group_2_val_V_q0;
wire   [6:0] line_buff_group_2_val_V_address1;
reg    line_buff_group_2_val_V_ce1;
reg    line_buff_group_2_val_V_we1;
wire   [15:0] line_buff_group_2_val_V_d1;
wire   [6:0] line_buff_group_3_val_V_address0;
reg    line_buff_group_3_val_V_ce0;
wire   [15:0] line_buff_group_3_val_V_q0;
wire   [6:0] line_buff_group_3_val_V_address1;
reg    line_buff_group_3_val_V_ce1;
reg    line_buff_group_3_val_V_we1;
wire   [15:0] line_buff_group_3_val_V_d1;
reg   [15:0] ap_phi_mux_curr_output_data_sub_data_0_V_phi_fu_574_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_curr_output_data_sub_data_0_V_reg_571;
reg   [15:0] ap_phi_reg_pp0_iter1_curr_output_data_sub_data_0_V_reg_571;
reg   [15:0] ap_phi_reg_pp0_iter2_curr_output_data_sub_data_0_V_reg_571;
reg   [15:0] ap_phi_reg_pp0_iter3_curr_output_data_sub_data_0_V_reg_571;
reg   [15:0] ap_phi_reg_pp0_iter4_curr_output_data_sub_data_0_V_reg_571;
reg   [15:0] ap_phi_reg_pp0_iter5_curr_output_data_sub_data_0_V_reg_571;
reg   [15:0] ap_phi_reg_pp0_iter6_curr_output_data_sub_data_0_V_reg_571;
reg   [15:0] ap_phi_mux_curr_output_data_sub_data_1_V_phi_fu_584_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_curr_output_data_sub_data_1_V_reg_581;
reg   [15:0] ap_phi_reg_pp0_iter1_curr_output_data_sub_data_1_V_reg_581;
reg   [15:0] ap_phi_reg_pp0_iter2_curr_output_data_sub_data_1_V_reg_581;
reg   [15:0] ap_phi_reg_pp0_iter3_curr_output_data_sub_data_1_V_reg_581;
reg   [15:0] ap_phi_reg_pp0_iter4_curr_output_data_sub_data_1_V_reg_581;
reg   [15:0] ap_phi_reg_pp0_iter5_curr_output_data_sub_data_1_V_reg_581;
reg   [15:0] ap_phi_reg_pp0_iter6_curr_output_data_sub_data_1_V_reg_581;
reg   [15:0] ap_phi_mux_curr_output_data_sub_data_2_V_phi_fu_594_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_curr_output_data_sub_data_2_V_reg_591;
reg   [15:0] ap_phi_reg_pp0_iter1_curr_output_data_sub_data_2_V_reg_591;
reg   [15:0] ap_phi_reg_pp0_iter2_curr_output_data_sub_data_2_V_reg_591;
reg   [15:0] ap_phi_reg_pp0_iter3_curr_output_data_sub_data_2_V_reg_591;
reg   [15:0] ap_phi_reg_pp0_iter4_curr_output_data_sub_data_2_V_reg_591;
reg   [15:0] ap_phi_reg_pp0_iter5_curr_output_data_sub_data_2_V_reg_591;
reg   [15:0] ap_phi_reg_pp0_iter6_curr_output_data_sub_data_2_V_reg_591;
reg   [15:0] ap_phi_mux_curr_output_data_sub_data_3_V_phi_fu_604_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_curr_output_data_sub_data_3_V_reg_601;
reg   [15:0] ap_phi_reg_pp0_iter1_curr_output_data_sub_data_3_V_reg_601;
reg   [15:0] ap_phi_reg_pp0_iter2_curr_output_data_sub_data_3_V_reg_601;
reg   [15:0] ap_phi_reg_pp0_iter3_curr_output_data_sub_data_3_V_reg_601;
reg   [15:0] ap_phi_reg_pp0_iter4_curr_output_data_sub_data_3_V_reg_601;
reg   [15:0] ap_phi_reg_pp0_iter5_curr_output_data_sub_data_3_V_reg_601;
reg   [15:0] ap_phi_reg_pp0_iter6_curr_output_data_sub_data_3_V_reg_601;
wire   [63:0] zext_ln908_1_fu_1207_p1;
reg   [3:0] input_ch_idx_fu_164;
wire   [3:0] add_ln23_fu_1178_p2;
wire    ap_loop_init;
reg   [1:0] col_stride_fu_168;
wire   [1:0] select_ln21_3_fu_1154_p3;
reg   [5:0] indvar_flatten_fu_172;
wire   [5:0] select_ln21_4_fu_826_p3;
reg   [3:0] col_idx_fu_176;
reg   [8:0] indvar_flatten33_fu_180;
wire   [8:0] select_ln19_4_fu_713_p3;
reg   [8:0] ap_sig_allocacmp_indvar_flatten33_load;
reg   [1:0] row_stride_fu_184;
wire   [1:0] select_ln17_4_fu_1031_p3;
reg   [9:0] indvar_flatten84_fu_188;
wire   [9:0] select_ln17_5_fu_727_p3;
reg   [9:0] ap_sig_allocacmp_indvar_flatten84_load;
reg   [3:0] row_idx_fu_192;
wire   [3:0] select_ln15_fu_966_p3;
reg   [12:0] indvar_flatten154_fu_196;
wire   [12:0] add_ln15_fu_671_p2;
reg   [12:0] ap_sig_allocacmp_indvar_flatten154_load;
reg   [5:0] curr_input_dest_V_fu_200;
reg   [4:0] curr_input_id_V_fu_204;
reg   [1:0] curr_input_user_V_fu_208;
reg   [7:0] curr_input_strb_V_fu_212;
reg   [7:0] curr_input_keep_V_fu_216;
reg    ap_block_pp0_stage0_01001;
wire   [8:0] add_ln19_1_fu_707_p2;
wire   [9:0] add_ln17_1_fu_721_p2;
wire   [0:0] xor_ln17_fu_775_p2;
wire   [0:0] icmp_ln21_fu_762_p2;
wire   [0:0] and_ln14_3_fu_785_p2;
wire   [3:0] select_ln17_fu_768_p3;
wire   [0:0] or_ln19_fu_802_p2;
wire   [5:0] add_ln21_1_fu_820_p2;
wire   [0:0] cmp92_not_fu_853_p2;
wire   [0:0] cmp94_not_fu_863_p2;
wire   [0:0] trunc_ln21_fu_875_p1;
wire   [0:0] trunc_ln17_fu_859_p1;
wire   [0:0] cmp98_not_fu_885_p2;
wire   [0:0] tmp1_fu_891_p2;
wire   [0:0] tmp_fu_869_p2;
wire   [3:0] row_idx_3_fu_905_p2;
wire   [0:0] cmp92_not_mid1_fu_918_p2;
wire   [0:0] empty_fu_879_p2;
wire   [0:0] brmerge489_fu_896_p2;
wire   [0:0] icmp_ln23_fu_955_p2;
wire   [1:0] select_ln14_fu_911_p3;
wire   [1:0] row_stride_3_fu_973_p2;
wire   [0:0] trunc_ln17_1_fu_979_p1;
wire   [0:0] and_ln14_fu_931_p2;
wire   [0:0] select_ln14_1_fu_924_p3;
wire   [0:0] cmp94_not_mid1_fu_990_p2;
wire   [0:0] tmp_mid1_fu_996_p2;
wire   [0:0] or_ln14_fu_936_p2;
wire   [0:0] or_ln14_1_fu_941_p2;
wire   [0:0] and_ln14_1_fu_945_p2;
wire   [0:0] or_ln14_2_fu_950_p2;
wire   [0:0] and_ln14_2_fu_961_p2;
wire   [0:0] cmp96_not_mid1_fu_1045_p2;
wire   [0:0] or_ln17_1_fu_1009_p2;
wire   [0:0] select_ln17_1_fu_983_p3;
wire   [0:0] select_ln17_3_fu_1014_p3;
wire   [0:0] or_ln17_2_fu_1021_p2;
wire   [0:0] and_ln17_fu_1026_p2;
wire   [0:0] xor_ln19_fu_1069_p2;
wire   [1:0] select_ln19_fu_1038_p3;
wire   [0:0] and_ln19_fu_1074_p2;
wire   [0:0] or_ln21_fu_1086_p2;
wire   [0:0] or_ln21_1_fu_1091_p2;
wire   [1:0] col_stride_3_fu_1080_p2;
wire   [0:0] trunc_ln21_1_fu_1104_p1;
wire   [0:0] p_mid1_fu_1108_p2;
wire   [0:0] select_ln19_3_fu_1057_p3;
wire   [0:0] select_ln19_2_fu_1050_p3;
wire   [0:0] cmp98_not_mid1_fu_1122_p2;
wire   [0:0] tmp1_mid1_fu_1128_p2;
wire   [0:0] select_ln17_2_fu_1002_p3;
wire   [0:0] brmerge489_mid1_fu_1134_p2;
wire   [0:0] or_ln19_1_fu_1064_p2;
wire   [0:0] select_ln21_2_fu_1140_p3;
wire   [3:0] select_ln21_fu_1096_p3;
wire   [0:0] icmp_ln52_fu_1166_p2;
wire   [0:0] xor_ln21_fu_1148_p2;
wire   [6:0] grp_fu_1334_p3;
wire   [3:0] grp_fu_1334_p0;
wire   [3:0] grp_fu_1334_p1;
wire   [3:0] grp_fu_1334_p2;
reg    grp_fu_1334_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg   [0:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_predicate_op248_store_state6;
reg    ap_enable_operation_248;
reg    ap_enable_state6_pp0_iter5_stage0;
reg    ap_predicate_op258_load_state6;
reg    ap_enable_operation_258;
reg    ap_predicate_op262_load_state7;
reg    ap_enable_operation_262;
reg    ap_enable_state7_pp0_iter6_stage0;
reg    ap_predicate_op249_store_state6;
reg    ap_enable_operation_249;
reg    ap_predicate_op259_load_state6;
reg    ap_enable_operation_259;
reg    ap_predicate_op263_load_state7;
reg    ap_enable_operation_263;
reg    ap_predicate_op250_store_state6;
reg    ap_enable_operation_250;
reg    ap_predicate_op260_load_state6;
reg    ap_enable_operation_260;
reg    ap_predicate_op264_load_state7;
reg    ap_enable_operation_264;
reg    ap_predicate_op251_store_state6;
reg    ap_enable_operation_251;
reg    ap_predicate_op261_load_state6;
reg    ap_enable_operation_261;
reg    ap_predicate_op265_load_state7;
reg    ap_enable_operation_265;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    regslice_both_inStream_V_data_V_U_apdone_blk;
wire   [63:0] inStream_TDATA_int_regslice;
wire    inStream_TVALID_int_regslice;
reg    inStream_TREADY_int_regslice;
wire    regslice_both_inStream_V_data_V_U_ack_in;
wire    regslice_both_inStream_V_keep_V_U_apdone_blk;
wire   [7:0] inStream_TKEEP_int_regslice;
wire    regslice_both_inStream_V_keep_V_U_vld_out;
wire    regslice_both_inStream_V_keep_V_U_ack_in;
wire    regslice_both_inStream_V_strb_V_U_apdone_blk;
wire   [7:0] inStream_TSTRB_int_regslice;
wire    regslice_both_inStream_V_strb_V_U_vld_out;
wire    regslice_both_inStream_V_strb_V_U_ack_in;
wire    regslice_both_inStream_V_user_V_U_apdone_blk;
wire   [1:0] inStream_TUSER_int_regslice;
wire    regslice_both_inStream_V_user_V_U_vld_out;
wire    regslice_both_inStream_V_user_V_U_ack_in;
wire    regslice_both_inStream_V_last_V_U_apdone_blk;
wire   [0:0] inStream_TLAST_int_regslice;
wire    regslice_both_inStream_V_last_V_U_vld_out;
wire    regslice_both_inStream_V_last_V_U_ack_in;
wire    regslice_both_inStream_V_id_V_U_apdone_blk;
wire   [4:0] inStream_TID_int_regslice;
wire    regslice_both_inStream_V_id_V_U_vld_out;
wire    regslice_both_inStream_V_id_V_U_ack_in;
wire    regslice_both_inStream_V_dest_V_U_apdone_blk;
wire   [5:0] inStream_TDEST_int_regslice;
wire    regslice_both_inStream_V_dest_V_U_vld_out;
wire    regslice_both_inStream_V_dest_V_U_ack_in;
wire   [63:0] outStream_TDATA_int_regslice;
reg    outStream_TVALID_int_regslice;
wire    outStream_TREADY_int_regslice;
wire    regslice_both_outStream_V_data_V_U_vld_out;
wire    regslice_both_outStream_V_keep_V_U_apdone_blk;
wire    regslice_both_outStream_V_keep_V_U_ack_in_dummy;
wire    regslice_both_outStream_V_keep_V_U_vld_out;
wire    regslice_both_outStream_V_strb_V_U_apdone_blk;
wire    regslice_both_outStream_V_strb_V_U_ack_in_dummy;
wire    regslice_both_outStream_V_strb_V_U_vld_out;
wire    regslice_both_outStream_V_user_V_U_apdone_blk;
wire    regslice_both_outStream_V_user_V_U_ack_in_dummy;
wire    regslice_both_outStream_V_user_V_U_vld_out;
wire    regslice_both_outStream_V_last_V_U_apdone_blk;
wire    regslice_both_outStream_V_last_V_U_ack_in_dummy;
wire    regslice_both_outStream_V_last_V_U_vld_out;
wire    regslice_both_outStream_V_id_V_U_apdone_blk;
wire    regslice_both_outStream_V_id_V_U_ack_in_dummy;
wire    regslice_both_outStream_V_id_V_U_vld_out;
wire    regslice_both_outStream_V_dest_V_U_apdone_blk;
wire    regslice_both_outStream_V_dest_V_U_ack_in_dummy;
wire    regslice_both_outStream_V_dest_V_U_vld_out;
wire   [6:0] grp_fu_1334_p00;
wire   [6:0] grp_fu_1334_p20;
reg    ap_condition_463;
reg    ap_condition_370;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_done_reg = 1'b0;
end

yolo_upsamp_top_line_buff_group_0_val_V_RAM_S2P_BRAM_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 104 ),
    .AddressWidth( 7 ))
line_buff_group_0_val_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(line_buff_group_0_val_V_address0),
    .ce0(line_buff_group_0_val_V_ce0),
    .q0(line_buff_group_0_val_V_q0),
    .address1(line_buff_group_0_val_V_address1),
    .ce1(line_buff_group_0_val_V_ce1),
    .we1(line_buff_group_0_val_V_we1),
    .d1(line_buff_group_0_val_V_d1)
);

yolo_upsamp_top_line_buff_group_0_val_V_RAM_S2P_BRAM_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 104 ),
    .AddressWidth( 7 ))
line_buff_group_1_val_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(line_buff_group_1_val_V_address0),
    .ce0(line_buff_group_1_val_V_ce0),
    .q0(line_buff_group_1_val_V_q0),
    .address1(line_buff_group_1_val_V_address1),
    .ce1(line_buff_group_1_val_V_ce1),
    .we1(line_buff_group_1_val_V_we1),
    .d1(line_buff_group_1_val_V_d1)
);

yolo_upsamp_top_line_buff_group_0_val_V_RAM_S2P_BRAM_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 104 ),
    .AddressWidth( 7 ))
line_buff_group_2_val_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(line_buff_group_2_val_V_address0),
    .ce0(line_buff_group_2_val_V_ce0),
    .q0(line_buff_group_2_val_V_q0),
    .address1(line_buff_group_2_val_V_address1),
    .ce1(line_buff_group_2_val_V_ce1),
    .we1(line_buff_group_2_val_V_we1),
    .d1(line_buff_group_2_val_V_d1)
);

yolo_upsamp_top_line_buff_group_0_val_V_RAM_S2P_BRAM_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 104 ),
    .AddressWidth( 7 ))
line_buff_group_3_val_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(line_buff_group_3_val_V_address0),
    .ce0(line_buff_group_3_val_V_ce0),
    .q0(line_buff_group_3_val_V_q0),
    .address1(line_buff_group_3_val_V_address1),
    .ce1(line_buff_group_3_val_V_ce1),
    .we1(line_buff_group_3_val_V_we1),
    .d1(line_buff_group_3_val_V_d1)
);

yolo_upsamp_top_CTRL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_BUS_DATA_WIDTH ))
CTRL_BUS_s_axi_U(
    .AWVALID(s_axi_CTRL_BUS_AWVALID),
    .AWREADY(s_axi_CTRL_BUS_AWREADY),
    .AWADDR(s_axi_CTRL_BUS_AWADDR),
    .WVALID(s_axi_CTRL_BUS_WVALID),
    .WREADY(s_axi_CTRL_BUS_WREADY),
    .WDATA(s_axi_CTRL_BUS_WDATA),
    .WSTRB(s_axi_CTRL_BUS_WSTRB),
    .ARVALID(s_axi_CTRL_BUS_ARVALID),
    .ARREADY(s_axi_CTRL_BUS_ARREADY),
    .ARADDR(s_axi_CTRL_BUS_ARADDR),
    .RVALID(s_axi_CTRL_BUS_RVALID),
    .RREADY(s_axi_CTRL_BUS_RREADY),
    .RDATA(s_axi_CTRL_BUS_RDATA),
    .RRESP(s_axi_CTRL_BUS_RRESP),
    .BVALID(s_axi_CTRL_BUS_BVALID),
    .BREADY(s_axi_CTRL_BUS_BREADY),
    .BRESP(s_axi_CTRL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

yolo_upsamp_top_mac_muladd_4ns_4ns_4ns_7_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .dout_WIDTH( 7 ))
mac_muladd_4ns_4ns_4ns_7_4_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1334_p0),
    .din1(grp_fu_1334_p1),
    .din2(grp_fu_1334_p2),
    .ce(grp_fu_1334_ce),
    .dout(grp_fu_1334_p3)
);

yolo_upsamp_top_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(1'b1)
);

yolo_upsamp_top_regslice_both #(
    .DataWidth( 64 ))
regslice_both_inStream_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(inStream_TDATA),
    .vld_in(inStream_TVALID),
    .ack_in(regslice_both_inStream_V_data_V_U_ack_in),
    .data_out(inStream_TDATA_int_regslice),
    .vld_out(inStream_TVALID_int_regslice),
    .ack_out(inStream_TREADY_int_regslice),
    .apdone_blk(regslice_both_inStream_V_data_V_U_apdone_blk)
);

yolo_upsamp_top_regslice_both #(
    .DataWidth( 8 ))
regslice_both_inStream_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(inStream_TKEEP),
    .vld_in(inStream_TVALID),
    .ack_in(regslice_both_inStream_V_keep_V_U_ack_in),
    .data_out(inStream_TKEEP_int_regslice),
    .vld_out(regslice_both_inStream_V_keep_V_U_vld_out),
    .ack_out(inStream_TREADY_int_regslice),
    .apdone_blk(regslice_both_inStream_V_keep_V_U_apdone_blk)
);

yolo_upsamp_top_regslice_both #(
    .DataWidth( 8 ))
regslice_both_inStream_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(inStream_TSTRB),
    .vld_in(inStream_TVALID),
    .ack_in(regslice_both_inStream_V_strb_V_U_ack_in),
    .data_out(inStream_TSTRB_int_regslice),
    .vld_out(regslice_both_inStream_V_strb_V_U_vld_out),
    .ack_out(inStream_TREADY_int_regslice),
    .apdone_blk(regslice_both_inStream_V_strb_V_U_apdone_blk)
);

yolo_upsamp_top_regslice_both #(
    .DataWidth( 2 ))
regslice_both_inStream_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(inStream_TUSER),
    .vld_in(inStream_TVALID),
    .ack_in(regslice_both_inStream_V_user_V_U_ack_in),
    .data_out(inStream_TUSER_int_regslice),
    .vld_out(regslice_both_inStream_V_user_V_U_vld_out),
    .ack_out(inStream_TREADY_int_regslice),
    .apdone_blk(regslice_both_inStream_V_user_V_U_apdone_blk)
);

yolo_upsamp_top_regslice_both #(
    .DataWidth( 1 ))
regslice_both_inStream_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(inStream_TLAST),
    .vld_in(inStream_TVALID),
    .ack_in(regslice_both_inStream_V_last_V_U_ack_in),
    .data_out(inStream_TLAST_int_regslice),
    .vld_out(regslice_both_inStream_V_last_V_U_vld_out),
    .ack_out(inStream_TREADY_int_regslice),
    .apdone_blk(regslice_both_inStream_V_last_V_U_apdone_blk)
);

yolo_upsamp_top_regslice_both #(
    .DataWidth( 5 ))
regslice_both_inStream_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(inStream_TID),
    .vld_in(inStream_TVALID),
    .ack_in(regslice_both_inStream_V_id_V_U_ack_in),
    .data_out(inStream_TID_int_regslice),
    .vld_out(regslice_both_inStream_V_id_V_U_vld_out),
    .ack_out(inStream_TREADY_int_regslice),
    .apdone_blk(regslice_both_inStream_V_id_V_U_apdone_blk)
);

yolo_upsamp_top_regslice_both #(
    .DataWidth( 6 ))
regslice_both_inStream_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(inStream_TDEST),
    .vld_in(inStream_TVALID),
    .ack_in(regslice_both_inStream_V_dest_V_U_ack_in),
    .data_out(inStream_TDEST_int_regslice),
    .vld_out(regslice_both_inStream_V_dest_V_U_vld_out),
    .ack_out(inStream_TREADY_int_regslice),
    .apdone_blk(regslice_both_inStream_V_dest_V_U_apdone_blk)
);

yolo_upsamp_top_regslice_both #(
    .DataWidth( 64 ))
regslice_both_outStream_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(outStream_TDATA_int_regslice),
    .vld_in(outStream_TVALID_int_regslice),
    .ack_in(outStream_TREADY_int_regslice),
    .data_out(outStream_TDATA),
    .vld_out(regslice_both_outStream_V_data_V_U_vld_out),
    .ack_out(outStream_TREADY),
    .apdone_blk(regslice_both_outStream_V_data_V_U_apdone_blk)
);

yolo_upsamp_top_regslice_both #(
    .DataWidth( 8 ))
regslice_both_outStream_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(curr_input_keep_V_fu_216),
    .vld_in(outStream_TVALID_int_regslice),
    .ack_in(regslice_both_outStream_V_keep_V_U_ack_in_dummy),
    .data_out(outStream_TKEEP),
    .vld_out(regslice_both_outStream_V_keep_V_U_vld_out),
    .ack_out(outStream_TREADY),
    .apdone_blk(regslice_both_outStream_V_keep_V_U_apdone_blk)
);

yolo_upsamp_top_regslice_both #(
    .DataWidth( 8 ))
regslice_both_outStream_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(curr_input_strb_V_fu_212),
    .vld_in(outStream_TVALID_int_regslice),
    .ack_in(regslice_both_outStream_V_strb_V_U_ack_in_dummy),
    .data_out(outStream_TSTRB),
    .vld_out(regslice_both_outStream_V_strb_V_U_vld_out),
    .ack_out(outStream_TREADY),
    .apdone_blk(regslice_both_outStream_V_strb_V_U_apdone_blk)
);

yolo_upsamp_top_regslice_both #(
    .DataWidth( 2 ))
regslice_both_outStream_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(curr_input_user_V_fu_208),
    .vld_in(outStream_TVALID_int_regslice),
    .ack_in(regslice_both_outStream_V_user_V_U_ack_in_dummy),
    .data_out(outStream_TUSER),
    .vld_out(regslice_both_outStream_V_user_V_U_vld_out),
    .ack_out(outStream_TREADY),
    .apdone_blk(regslice_both_outStream_V_user_V_U_apdone_blk)
);

yolo_upsamp_top_regslice_both #(
    .DataWidth( 1 ))
regslice_both_outStream_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(curr_output_last_V_reg_1526_pp0_iter5_reg),
    .vld_in(outStream_TVALID_int_regslice),
    .ack_in(regslice_both_outStream_V_last_V_U_ack_in_dummy),
    .data_out(outStream_TLAST),
    .vld_out(regslice_both_outStream_V_last_V_U_vld_out),
    .ack_out(outStream_TREADY),
    .apdone_blk(regslice_both_outStream_V_last_V_U_apdone_blk)
);

yolo_upsamp_top_regslice_both #(
    .DataWidth( 5 ))
regslice_both_outStream_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(curr_input_id_V_fu_204),
    .vld_in(outStream_TVALID_int_regslice),
    .ack_in(regslice_both_outStream_V_id_V_U_ack_in_dummy),
    .data_out(outStream_TID),
    .vld_out(regslice_both_outStream_V_id_V_U_vld_out),
    .ack_out(outStream_TREADY),
    .apdone_blk(regslice_both_outStream_V_id_V_U_apdone_blk)
);

yolo_upsamp_top_regslice_both #(
    .DataWidth( 6 ))
regslice_both_outStream_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(curr_input_dest_V_fu_200),
    .vld_in(outStream_TVALID_int_regslice),
    .ack_in(regslice_both_outStream_V_dest_V_U_ack_in_dummy),
    .data_out(outStream_TDEST),
    .vld_out(regslice_both_outStream_V_dest_V_U_vld_out),
    .ack_out(outStream_TREADY),
    .apdone_blk(regslice_both_outStream_V_dest_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter2_stage0)) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        if (((select_ln21_1_reg_1517_pp0_iter4_reg == 1'd0) & (icmp_ln15_reg_1436_pp0_iter4_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter6_curr_output_data_sub_data_0_V_reg_571 <= tmp_data_sub_data_0_V_1_fu_1238_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter6_curr_output_data_sub_data_0_V_reg_571 <= ap_phi_reg_pp0_iter5_curr_output_data_sub_data_0_V_reg_571;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        if (((select_ln21_1_reg_1517_pp0_iter4_reg == 1'd0) & (icmp_ln15_reg_1436_pp0_iter4_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter6_curr_output_data_sub_data_1_V_reg_581 <= {{inStream_TDATA_int_regslice[31:16]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter6_curr_output_data_sub_data_1_V_reg_581 <= ap_phi_reg_pp0_iter5_curr_output_data_sub_data_1_V_reg_581;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        if (((select_ln21_1_reg_1517_pp0_iter4_reg == 1'd0) & (icmp_ln15_reg_1436_pp0_iter4_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter6_curr_output_data_sub_data_2_V_reg_591 <= {{inStream_TDATA_int_regslice[47:32]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter6_curr_output_data_sub_data_2_V_reg_591 <= ap_phi_reg_pp0_iter5_curr_output_data_sub_data_2_V_reg_591;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        if (((select_ln21_1_reg_1517_pp0_iter4_reg == 1'd0) & (icmp_ln15_reg_1436_pp0_iter4_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter6_curr_output_data_sub_data_3_V_reg_601 <= {{inStream_TDATA_int_regslice[63:48]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter6_curr_output_data_sub_data_3_V_reg_601 <= ap_phi_reg_pp0_iter5_curr_output_data_sub_data_3_V_reg_601;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_loop_init == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            col_idx_fu_176 <= 4'd0;
        end else if (((icmp_ln15_reg_1436 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            col_idx_fu_176 <= select_ln19_1_fu_812_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if ((1'b1 == ap_condition_463)) begin
            col_stride_fu_168 <= 2'd0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln15_reg_1436_pp0_iter1_reg == 1'd0))) begin
            col_stride_fu_168 <= select_ln21_3_fu_1154_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_370)) begin
        if ((icmp_ln15_fu_665_p2 == 1'd0)) begin
            indvar_flatten154_fu_196 <= add_ln15_fu_671_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten154_fu_196 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_370)) begin
        if ((icmp_ln15_fu_665_p2 == 1'd0)) begin
            indvar_flatten33_fu_180 <= select_ln19_4_fu_713_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten33_fu_180 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_370)) begin
        if ((icmp_ln15_fu_665_p2 == 1'd0)) begin
            indvar_flatten84_fu_188 <= select_ln17_5_fu_727_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten84_fu_188 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_loop_init == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_172 <= 6'd0;
        end else if (((icmp_ln15_reg_1436 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten_fu_172 <= select_ln21_4_fu_826_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if ((1'b1 == ap_condition_463)) begin
            input_ch_idx_fu_164 <= 4'd0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln15_reg_1436_pp0_iter1_reg == 1'd0))) begin
            input_ch_idx_fu_164 <= add_ln23_fu_1178_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if ((1'b1 == ap_condition_463)) begin
            row_idx_fu_192 <= 4'd0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln15_reg_1436_pp0_iter1_reg == 1'd0))) begin
            row_idx_fu_192 <= select_ln15_fu_966_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if ((1'b1 == ap_condition_463)) begin
            row_stride_fu_184 <= 2'd0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln15_reg_1436_pp0_iter1_reg == 1'd0))) begin
            row_stride_fu_184 <= select_ln17_4_fu_1031_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln15_reg_1436 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln19_reg_1502 <= add_ln19_fu_796_p2;
        and_ln17_1_reg_1493 <= and_ln17_1_fu_790_p2;
        or_ln17_3_reg_1488 <= or_ln17_3_fu_780_p2;
        or_ln19_2_reg_1507 <= or_ln19_2_fu_807_p2;
        select_ln19_1_reg_1512 <= select_ln19_1_fu_812_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_fu_665_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln14_4_reg_1465 <= and_ln14_4_fu_695_p2;
        icmp_ln17_reg_1440 <= icmp_ln17_fu_677_p2;
        icmp_ln19_reg_1460 <= icmp_ln19_fu_689_p2;
        or_ln17_reg_1476 <= or_ln17_fu_701_p2;
        xor_ln14_reg_1452 <= xor_ln14_fu_683_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln14_4_reg_1465_pp0_iter1_reg <= and_ln14_4_reg_1465;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        cmp96_not_reg_1482 <= cmp96_not_fu_756_p2;
        icmp_ln15_reg_1436 <= icmp_ln15_fu_665_p2;
        icmp_ln15_reg_1436_pp0_iter1_reg <= icmp_ln15_reg_1436;
        icmp_ln17_reg_1440_pp0_iter1_reg <= icmp_ln17_reg_1440;
        or_ln17_reg_1476_pp0_iter1_reg <= or_ln17_reg_1476;
        xor_ln14_reg_1452_pp0_iter1_reg <= xor_ln14_reg_1452;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        curr_output_last_V_reg_1526_pp0_iter3_reg <= curr_output_last_V_reg_1526;
        curr_output_last_V_reg_1526_pp0_iter4_reg <= curr_output_last_V_reg_1526_pp0_iter3_reg;
        curr_output_last_V_reg_1526_pp0_iter5_reg <= curr_output_last_V_reg_1526_pp0_iter4_reg;
        icmp_ln15_reg_1436_pp0_iter2_reg <= icmp_ln15_reg_1436_pp0_iter1_reg;
        icmp_ln15_reg_1436_pp0_iter3_reg <= icmp_ln15_reg_1436_pp0_iter2_reg;
        icmp_ln15_reg_1436_pp0_iter4_reg <= icmp_ln15_reg_1436_pp0_iter3_reg;
        icmp_ln15_reg_1436_pp0_iter5_reg <= icmp_ln15_reg_1436_pp0_iter4_reg;
        select_ln19_1_reg_1512_pp0_iter2_reg <= select_ln19_1_reg_1512;
        select_ln19_1_reg_1512_pp0_iter3_reg <= select_ln19_1_reg_1512_pp0_iter2_reg;
        select_ln21_1_reg_1517_pp0_iter3_reg <= select_ln21_1_reg_1517;
        select_ln21_1_reg_1517_pp0_iter4_reg <= select_ln21_1_reg_1517_pp0_iter3_reg;
        select_ln21_1_reg_1517_pp0_iter5_reg <= select_ln21_1_reg_1517_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_curr_output_data_sub_data_0_V_reg_571 <= ap_phi_reg_pp0_iter0_curr_output_data_sub_data_0_V_reg_571;
        ap_phi_reg_pp0_iter1_curr_output_data_sub_data_1_V_reg_581 <= ap_phi_reg_pp0_iter0_curr_output_data_sub_data_1_V_reg_581;
        ap_phi_reg_pp0_iter1_curr_output_data_sub_data_2_V_reg_591 <= ap_phi_reg_pp0_iter0_curr_output_data_sub_data_2_V_reg_591;
        ap_phi_reg_pp0_iter1_curr_output_data_sub_data_3_V_reg_601 <= ap_phi_reg_pp0_iter0_curr_output_data_sub_data_3_V_reg_601;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter2_curr_output_data_sub_data_0_V_reg_571 <= ap_phi_reg_pp0_iter1_curr_output_data_sub_data_0_V_reg_571;
        ap_phi_reg_pp0_iter2_curr_output_data_sub_data_1_V_reg_581 <= ap_phi_reg_pp0_iter1_curr_output_data_sub_data_1_V_reg_581;
        ap_phi_reg_pp0_iter2_curr_output_data_sub_data_2_V_reg_591 <= ap_phi_reg_pp0_iter1_curr_output_data_sub_data_2_V_reg_591;
        ap_phi_reg_pp0_iter2_curr_output_data_sub_data_3_V_reg_601 <= ap_phi_reg_pp0_iter1_curr_output_data_sub_data_3_V_reg_601;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_reg_pp0_iter3_curr_output_data_sub_data_0_V_reg_571 <= ap_phi_reg_pp0_iter2_curr_output_data_sub_data_0_V_reg_571;
        ap_phi_reg_pp0_iter3_curr_output_data_sub_data_1_V_reg_581 <= ap_phi_reg_pp0_iter2_curr_output_data_sub_data_1_V_reg_581;
        ap_phi_reg_pp0_iter3_curr_output_data_sub_data_2_V_reg_591 <= ap_phi_reg_pp0_iter2_curr_output_data_sub_data_2_V_reg_591;
        ap_phi_reg_pp0_iter3_curr_output_data_sub_data_3_V_reg_601 <= ap_phi_reg_pp0_iter2_curr_output_data_sub_data_3_V_reg_601;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_phi_reg_pp0_iter4_curr_output_data_sub_data_0_V_reg_571 <= ap_phi_reg_pp0_iter3_curr_output_data_sub_data_0_V_reg_571;
        ap_phi_reg_pp0_iter4_curr_output_data_sub_data_1_V_reg_581 <= ap_phi_reg_pp0_iter3_curr_output_data_sub_data_1_V_reg_581;
        ap_phi_reg_pp0_iter4_curr_output_data_sub_data_2_V_reg_591 <= ap_phi_reg_pp0_iter3_curr_output_data_sub_data_2_V_reg_591;
        ap_phi_reg_pp0_iter4_curr_output_data_sub_data_3_V_reg_601 <= ap_phi_reg_pp0_iter3_curr_output_data_sub_data_3_V_reg_601;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_phi_reg_pp0_iter5_curr_output_data_sub_data_0_V_reg_571 <= ap_phi_reg_pp0_iter4_curr_output_data_sub_data_0_V_reg_571;
        ap_phi_reg_pp0_iter5_curr_output_data_sub_data_1_V_reg_581 <= ap_phi_reg_pp0_iter4_curr_output_data_sub_data_1_V_reg_581;
        ap_phi_reg_pp0_iter5_curr_output_data_sub_data_2_V_reg_591 <= ap_phi_reg_pp0_iter4_curr_output_data_sub_data_2_V_reg_591;
        ap_phi_reg_pp0_iter5_curr_output_data_sub_data_3_V_reg_601 <= ap_phi_reg_pp0_iter4_curr_output_data_sub_data_3_V_reg_601;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln21_1_reg_1517_pp0_iter4_reg == 1'd0) & (icmp_ln15_reg_1436_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        curr_input_dest_V_fu_200 <= inStream_TDEST_int_regslice;
        curr_input_id_V_fu_204 <= inStream_TID_int_regslice;
        curr_input_keep_V_fu_216 <= inStream_TKEEP_int_regslice;
        curr_input_strb_V_fu_212 <= inStream_TSTRB_int_regslice;
        curr_input_user_V_fu_208 <= inStream_TUSER_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln15_reg_1436_pp0_iter1_reg == 1'd0))) begin
        curr_output_last_V_reg_1526 <= curr_output_last_V_fu_1172_p2;
        select_ln21_1_reg_1517 <= select_ln21_1_fu_1114_p3;
    end
end

always @ (*) begin
    if (((icmp_ln15_fu_665_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln15_reg_1436_pp0_iter1_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln21_1_reg_1517_pp0_iter5_reg == 1'd1) & (icmp_ln15_reg_1436_pp0_iter5_reg == 1'd0))) begin
        ap_phi_mux_curr_output_data_sub_data_0_V_phi_fu_574_p4 = line_buff_group_0_val_V_q0;
    end else begin
        ap_phi_mux_curr_output_data_sub_data_0_V_phi_fu_574_p4 = ap_phi_reg_pp0_iter6_curr_output_data_sub_data_0_V_reg_571;
    end
end

always @ (*) begin
    if (((select_ln21_1_reg_1517_pp0_iter5_reg == 1'd1) & (icmp_ln15_reg_1436_pp0_iter5_reg == 1'd0))) begin
        ap_phi_mux_curr_output_data_sub_data_1_V_phi_fu_584_p4 = line_buff_group_1_val_V_q0;
    end else begin
        ap_phi_mux_curr_output_data_sub_data_1_V_phi_fu_584_p4 = ap_phi_reg_pp0_iter6_curr_output_data_sub_data_1_V_reg_581;
    end
end

always @ (*) begin
    if (((select_ln21_1_reg_1517_pp0_iter5_reg == 1'd1) & (icmp_ln15_reg_1436_pp0_iter5_reg == 1'd0))) begin
        ap_phi_mux_curr_output_data_sub_data_2_V_phi_fu_594_p4 = line_buff_group_2_val_V_q0;
    end else begin
        ap_phi_mux_curr_output_data_sub_data_2_V_phi_fu_594_p4 = ap_phi_reg_pp0_iter6_curr_output_data_sub_data_2_V_reg_591;
    end
end

always @ (*) begin
    if (((select_ln21_1_reg_1517_pp0_iter5_reg == 1'd1) & (icmp_ln15_reg_1436_pp0_iter5_reg == 1'd0))) begin
        ap_phi_mux_curr_output_data_sub_data_3_V_phi_fu_604_p4 = line_buff_group_3_val_V_q0;
    end else begin
        ap_phi_mux_curr_output_data_sub_data_3_V_phi_fu_604_p4 = ap_phi_reg_pp0_iter6_curr_output_data_sub_data_3_V_reg_601;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten154_load = 13'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten154_load = indvar_flatten154_fu_196;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten33_load = 9'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten33_load = indvar_flatten33_fu_180;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten84_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten84_load = indvar_flatten84_fu_188;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1334_ce = 1'b1;
    end else begin
        grp_fu_1334_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op237_read_state6 == 1'b1) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        inStream_TDATA_blk_n = inStream_TVALID_int_regslice;
    end else begin
        inStream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op237_read_state6 == 1'b1) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        inStream_TREADY_int_regslice = 1'b1;
    end else begin
        inStream_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        line_buff_group_0_val_V_ce0 = 1'b1;
    end else begin
        line_buff_group_0_val_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        line_buff_group_0_val_V_ce1 = 1'b1;
    end else begin
        line_buff_group_0_val_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln21_1_reg_1517_pp0_iter4_reg == 1'd0) & (icmp_ln15_reg_1436_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        line_buff_group_0_val_V_we1 = 1'b1;
    end else begin
        line_buff_group_0_val_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        line_buff_group_1_val_V_ce0 = 1'b1;
    end else begin
        line_buff_group_1_val_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        line_buff_group_1_val_V_ce1 = 1'b1;
    end else begin
        line_buff_group_1_val_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln21_1_reg_1517_pp0_iter4_reg == 1'd0) & (icmp_ln15_reg_1436_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        line_buff_group_1_val_V_we1 = 1'b1;
    end else begin
        line_buff_group_1_val_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        line_buff_group_2_val_V_ce0 = 1'b1;
    end else begin
        line_buff_group_2_val_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        line_buff_group_2_val_V_ce1 = 1'b1;
    end else begin
        line_buff_group_2_val_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln21_1_reg_1517_pp0_iter4_reg == 1'd0) & (icmp_ln15_reg_1436_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        line_buff_group_2_val_V_we1 = 1'b1;
    end else begin
        line_buff_group_2_val_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        line_buff_group_3_val_V_ce0 = 1'b1;
    end else begin
        line_buff_group_3_val_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        line_buff_group_3_val_V_ce1 = 1'b1;
    end else begin
        line_buff_group_3_val_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln21_1_reg_1517_pp0_iter4_reg == 1'd0) & (icmp_ln15_reg_1436_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        line_buff_group_3_val_V_we1 = 1'b1;
    end else begin
        line_buff_group_3_val_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1)))) begin
        outStream_TDATA_blk_n = outStream_TREADY_int_regslice;
    end else begin
        outStream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        outStream_TVALID_int_regslice = 1'b1;
    end else begin
        outStream_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln15_fu_671_p2 = (ap_sig_allocacmp_indvar_flatten154_load + 13'd1);

assign add_ln17_1_fu_721_p2 = (ap_sig_allocacmp_indvar_flatten84_load + 10'd1);

assign add_ln19_1_fu_707_p2 = (ap_sig_allocacmp_indvar_flatten33_load + 9'd1);

assign add_ln19_fu_796_p2 = (select_ln17_fu_768_p3 + 4'd1);

assign add_ln21_1_fu_820_p2 = (indvar_flatten_fu_172 + 6'd1);

assign add_ln23_fu_1178_p2 = (select_ln21_fu_1096_p3 + 4'd1);

assign and_ln14_1_fu_945_p2 = (xor_ln14_reg_1452_pp0_iter1_reg & empty_fu_879_p2);

assign and_ln14_2_fu_961_p2 = (xor_ln14_reg_1452_pp0_iter1_reg & icmp_ln23_fu_955_p2);

assign and_ln14_3_fu_785_p2 = (xor_ln14_reg_1452 & icmp_ln21_fu_762_p2);

assign and_ln14_4_fu_695_p2 = (xor_ln14_fu_683_p2 & icmp_ln19_fu_689_p2);

assign and_ln14_fu_931_p2 = (xor_ln14_reg_1452_pp0_iter1_reg & trunc_ln17_fu_859_p1);

assign and_ln17_1_fu_790_p2 = (or_ln17_3_fu_780_p2 & and_ln14_3_fu_785_p2);

assign and_ln17_fu_1026_p2 = (or_ln17_3_reg_1488 & and_ln14_2_fu_961_p2);

assign and_ln19_fu_1074_p2 = (xor_ln19_fu_1069_p2 & and_ln17_fu_1026_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_loop_exit_ready_pp0_iter6_reg == 1'b1) & (regslice_both_outStream_V_data_V_U_apdone_blk == 1'b1)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (outStream_TREADY_int_regslice == 1'b0)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & ((regslice_both_outStream_V_data_V_U_apdone_blk == 1'b1) | (outStream_TREADY_int_regslice == 1'b0))) | ((ap_predicate_op237_read_state6 == 1'b1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (inStream_TVALID_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_loop_exit_ready_pp0_iter6_reg == 1'b1) & (regslice_both_outStream_V_data_V_U_apdone_blk == 1'b1)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (outStream_TREADY_int_regslice == 1'b0)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & ((regslice_both_outStream_V_data_V_U_apdone_blk == 1'b1) | (outStream_TREADY_int_regslice == 1'b0))) | ((ap_predicate_op237_read_state6 == 1'b1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (inStream_TVALID_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_loop_exit_ready_pp0_iter6_reg == 1'b1) & (regslice_both_outStream_V_data_V_U_apdone_blk == 1'b1)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (outStream_TREADY_int_regslice == 1'b0)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & ((regslice_both_outStream_V_data_V_U_apdone_blk == 1'b1) | (outStream_TREADY_int_regslice == 1'b0))) | ((ap_predicate_op237_read_state6 == 1'b1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (inStream_TVALID_int_regslice == 1'b0)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter5 = ((ap_predicate_op237_read_state6 == 1'b1) & (inStream_TVALID_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state7_pp0_stage0_iter6 = ((regslice_both_outStream_V_data_V_U_apdone_blk == 1'b1) | (outStream_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state8_pp0_stage0_iter7 = (outStream_TREADY_int_regslice == 1'b0);
end

always @ (*) begin
    ap_condition_370 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_463 = ((ap_loop_init == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_operation_248 = (ap_predicate_op248_store_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_249 = (ap_predicate_op249_store_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_250 = (ap_predicate_op250_store_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_251 = (ap_predicate_op251_store_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_258 = (ap_predicate_op258_load_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_259 = (ap_predicate_op259_load_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_260 = (ap_predicate_op260_load_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_261 = (ap_predicate_op261_load_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_262 = (ap_predicate_op262_load_state7 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_263 = (ap_predicate_op263_load_state7 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_264 = (ap_predicate_op264_load_state7 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_265 = (ap_predicate_op265_load_state7 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ (*) begin
    ap_enable_state6_pp0_iter5_stage0 = ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state7_pp0_iter6_stage0 = ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_curr_output_data_sub_data_0_V_reg_571 = 'bx;

assign ap_phi_reg_pp0_iter0_curr_output_data_sub_data_1_V_reg_581 = 'bx;

assign ap_phi_reg_pp0_iter0_curr_output_data_sub_data_2_V_reg_591 = 'bx;

assign ap_phi_reg_pp0_iter0_curr_output_data_sub_data_3_V_reg_601 = 'bx;

always @ (*) begin
    ap_predicate_op237_read_state6 = ((select_ln21_1_reg_1517_pp0_iter4_reg == 1'd0) & (icmp_ln15_reg_1436_pp0_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op248_store_state6 = ((select_ln21_1_reg_1517_pp0_iter4_reg == 1'd0) & (icmp_ln15_reg_1436_pp0_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op249_store_state6 = ((select_ln21_1_reg_1517_pp0_iter4_reg == 1'd0) & (icmp_ln15_reg_1436_pp0_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op250_store_state6 = ((select_ln21_1_reg_1517_pp0_iter4_reg == 1'd0) & (icmp_ln15_reg_1436_pp0_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op251_store_state6 = ((select_ln21_1_reg_1517_pp0_iter4_reg == 1'd0) & (icmp_ln15_reg_1436_pp0_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op258_load_state6 = ((select_ln21_1_reg_1517_pp0_iter4_reg == 1'd1) & (icmp_ln15_reg_1436_pp0_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op259_load_state6 = ((select_ln21_1_reg_1517_pp0_iter4_reg == 1'd1) & (icmp_ln15_reg_1436_pp0_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op260_load_state6 = ((select_ln21_1_reg_1517_pp0_iter4_reg == 1'd1) & (icmp_ln15_reg_1436_pp0_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op261_load_state6 = ((select_ln21_1_reg_1517_pp0_iter4_reg == 1'd1) & (icmp_ln15_reg_1436_pp0_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op262_load_state7 = ((select_ln21_1_reg_1517_pp0_iter5_reg == 1'd1) & (icmp_ln15_reg_1436_pp0_iter5_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op263_load_state7 = ((select_ln21_1_reg_1517_pp0_iter5_reg == 1'd1) & (icmp_ln15_reg_1436_pp0_iter5_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op264_load_state7 = ((select_ln21_1_reg_1517_pp0_iter5_reg == 1'd1) & (icmp_ln15_reg_1436_pp0_iter5_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op265_load_state7 = ((select_ln21_1_reg_1517_pp0_iter5_reg == 1'd1) & (icmp_ln15_reg_1436_pp0_iter5_reg == 1'd0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign brmerge489_fu_896_p2 = (tmp_fu_869_p2 | tmp1_fu_891_p2);

assign brmerge489_mid1_fu_1134_p2 = (tmp1_mid1_fu_1128_p2 | select_ln17_2_fu_1002_p3);

assign cmp92_not_fu_853_p2 = ((row_idx_fu_192 != 4'd12) ? 1'b1 : 1'b0);

assign cmp92_not_mid1_fu_918_p2 = ((row_idx_3_fu_905_p2 != 4'd12) ? 1'b1 : 1'b0);

assign cmp94_not_fu_863_p2 = ((row_stride_fu_184 != 2'd1) ? 1'b1 : 1'b0);

assign cmp94_not_mid1_fu_990_p2 = ((select_ln14_fu_911_p3 != 2'd0) ? 1'b1 : 1'b0);

assign cmp96_not_fu_756_p2 = ((col_idx_fu_176 != 4'd12) ? 1'b1 : 1'b0);

assign cmp96_not_mid1_fu_1045_p2 = ((add_ln19_reg_1502 != 4'd12) ? 1'b1 : 1'b0);

assign cmp98_not_fu_885_p2 = ((col_stride_fu_168 != 2'd1) ? 1'b1 : 1'b0);

assign cmp98_not_mid1_fu_1122_p2 = ((select_ln19_fu_1038_p3 != 2'd0) ? 1'b1 : 1'b0);

assign col_stride_3_fu_1080_p2 = (select_ln19_fu_1038_p3 + 2'd1);

assign curr_output_last_V_fu_1172_p2 = (xor_ln21_fu_1148_p2 & icmp_ln52_fu_1166_p2);

assign empty_fu_879_p2 = (trunc_ln21_fu_875_p1 | trunc_ln17_fu_859_p1);

assign grp_fu_1334_p0 = grp_fu_1334_p00;

assign grp_fu_1334_p00 = select_ln21_fu_1096_p3;

assign grp_fu_1334_p1 = 7'd13;

assign grp_fu_1334_p2 = grp_fu_1334_p20;

assign grp_fu_1334_p20 = select_ln19_1_reg_1512_pp0_iter3_reg;

assign icmp_ln15_fu_665_p2 = ((ap_sig_allocacmp_indvar_flatten154_load == 13'd5408) ? 1'b1 : 1'b0);

assign icmp_ln17_fu_677_p2 = ((ap_sig_allocacmp_indvar_flatten84_load == 10'd416) ? 1'b1 : 1'b0);

assign icmp_ln19_fu_689_p2 = ((ap_sig_allocacmp_indvar_flatten33_load == 9'd208) ? 1'b1 : 1'b0);

assign icmp_ln21_fu_762_p2 = ((indvar_flatten_fu_172 == 6'd16) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_955_p2 = ((input_ch_idx_fu_164 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln52_fu_1166_p2 = ((select_ln21_fu_1096_p3 == 4'd7) ? 1'b1 : 1'b0);

assign inStream_TREADY = regslice_both_inStream_V_data_V_U_ack_in;

assign line_buff_group_0_val_V_address0 = zext_ln908_1_fu_1207_p1;

assign line_buff_group_0_val_V_address1 = zext_ln908_1_fu_1207_p1;

assign line_buff_group_0_val_V_d1 = inStream_TDATA_int_regslice[15:0];

assign line_buff_group_1_val_V_address0 = zext_ln908_1_fu_1207_p1;

assign line_buff_group_1_val_V_address1 = zext_ln908_1_fu_1207_p1;

assign line_buff_group_1_val_V_d1 = {{inStream_TDATA_int_regslice[31:16]}};

assign line_buff_group_2_val_V_address0 = zext_ln908_1_fu_1207_p1;

assign line_buff_group_2_val_V_address1 = zext_ln908_1_fu_1207_p1;

assign line_buff_group_2_val_V_d1 = {{inStream_TDATA_int_regslice[47:32]}};

assign line_buff_group_3_val_V_address0 = zext_ln908_1_fu_1207_p1;

assign line_buff_group_3_val_V_address1 = zext_ln908_1_fu_1207_p1;

assign line_buff_group_3_val_V_d1 = {{inStream_TDATA_int_regslice[63:48]}};

assign or_ln14_1_fu_941_p2 = (icmp_ln17_reg_1440_pp0_iter1_reg | cmp96_not_reg_1482);

assign or_ln14_2_fu_950_p2 = (icmp_ln17_reg_1440_pp0_iter1_reg | brmerge489_fu_896_p2);

assign or_ln14_fu_936_p2 = (tmp_fu_869_p2 | icmp_ln17_reg_1440_pp0_iter1_reg);

assign or_ln17_1_fu_1009_p2 = (or_ln14_1_fu_941_p2 | and_ln14_4_reg_1465_pp0_iter1_reg);

assign or_ln17_2_fu_1021_p2 = (or_ln14_2_fu_950_p2 | and_ln14_4_reg_1465_pp0_iter1_reg);

assign or_ln17_3_fu_780_p2 = (xor_ln17_fu_775_p2 | icmp_ln17_reg_1440);

assign or_ln17_fu_701_p2 = (icmp_ln17_fu_677_p2 | and_ln14_4_fu_695_p2);

assign or_ln19_1_fu_1064_p2 = (or_ln17_2_fu_1021_p2 | and_ln17_1_reg_1493);

assign or_ln19_2_fu_807_p2 = (or_ln19_fu_802_p2 | icmp_ln17_reg_1440);

assign or_ln19_fu_802_p2 = (and_ln17_1_fu_790_p2 | and_ln14_4_reg_1465);

assign or_ln21_1_fu_1091_p2 = (or_ln21_fu_1086_p2 | or_ln17_reg_1476_pp0_iter1_reg);

assign or_ln21_fu_1086_p2 = (and_ln19_fu_1074_p2 | and_ln17_1_reg_1493);

assign outStream_TDATA_int_regslice = {{{{ap_phi_mux_curr_output_data_sub_data_3_V_phi_fu_604_p4}, {ap_phi_mux_curr_output_data_sub_data_2_V_phi_fu_594_p4}}, {ap_phi_mux_curr_output_data_sub_data_1_V_phi_fu_584_p4}}, {ap_phi_mux_curr_output_data_sub_data_0_V_phi_fu_574_p4}};

assign outStream_TVALID = regslice_both_outStream_V_data_V_U_vld_out;

assign p_mid1_fu_1108_p2 = (trunc_ln21_1_fu_1104_p1 | select_ln17_1_fu_983_p3);

assign row_idx_3_fu_905_p2 = (row_idx_fu_192 + 4'd1);

assign row_stride_3_fu_973_p2 = (select_ln14_fu_911_p3 + 2'd1);

assign select_ln14_1_fu_924_p3 = ((icmp_ln17_reg_1440_pp0_iter1_reg[0:0] == 1'b1) ? cmp92_not_mid1_fu_918_p2 : cmp92_not_fu_853_p2);

assign select_ln14_fu_911_p3 = ((icmp_ln17_reg_1440_pp0_iter1_reg[0:0] == 1'b1) ? 2'd0 : row_stride_fu_184);

assign select_ln15_fu_966_p3 = ((icmp_ln17_reg_1440_pp0_iter1_reg[0:0] == 1'b1) ? row_idx_3_fu_905_p2 : row_idx_fu_192);

assign select_ln17_1_fu_983_p3 = ((and_ln14_4_reg_1465_pp0_iter1_reg[0:0] == 1'b1) ? trunc_ln17_1_fu_979_p1 : and_ln14_fu_931_p2);

assign select_ln17_2_fu_1002_p3 = ((and_ln14_4_reg_1465_pp0_iter1_reg[0:0] == 1'b1) ? tmp_mid1_fu_996_p2 : or_ln14_fu_936_p2);

assign select_ln17_3_fu_1014_p3 = ((and_ln14_4_reg_1465_pp0_iter1_reg[0:0] == 1'b1) ? trunc_ln17_1_fu_979_p1 : and_ln14_1_fu_945_p2);

assign select_ln17_4_fu_1031_p3 = ((and_ln14_4_reg_1465_pp0_iter1_reg[0:0] == 1'b1) ? row_stride_3_fu_973_p2 : select_ln14_fu_911_p3);

assign select_ln17_5_fu_727_p3 = ((icmp_ln17_fu_677_p2[0:0] == 1'b1) ? 10'd1 : add_ln17_1_fu_721_p2);

assign select_ln17_fu_768_p3 = ((or_ln17_reg_1476[0:0] == 1'b1) ? 4'd0 : col_idx_fu_176);

assign select_ln19_1_fu_812_p3 = ((and_ln17_1_fu_790_p2[0:0] == 1'b1) ? add_ln19_fu_796_p2 : select_ln17_fu_768_p3);

assign select_ln19_2_fu_1050_p3 = ((and_ln17_1_reg_1493[0:0] == 1'b1) ? cmp96_not_mid1_fu_1045_p2 : or_ln17_1_fu_1009_p2);

assign select_ln19_3_fu_1057_p3 = ((and_ln17_1_reg_1493[0:0] == 1'b1) ? select_ln17_1_fu_983_p3 : select_ln17_3_fu_1014_p3);

assign select_ln19_4_fu_713_p3 = ((or_ln17_fu_701_p2[0:0] == 1'b1) ? 9'd1 : add_ln19_1_fu_707_p2);

assign select_ln19_fu_1038_p3 = ((or_ln19_2_reg_1507[0:0] == 1'b1) ? 2'd0 : col_stride_fu_168);

assign select_ln21_1_fu_1114_p3 = ((and_ln19_fu_1074_p2[0:0] == 1'b1) ? p_mid1_fu_1108_p2 : select_ln19_3_fu_1057_p3);

assign select_ln21_2_fu_1140_p3 = ((and_ln19_fu_1074_p2[0:0] == 1'b1) ? brmerge489_mid1_fu_1134_p2 : or_ln19_1_fu_1064_p2);

assign select_ln21_3_fu_1154_p3 = ((and_ln19_fu_1074_p2[0:0] == 1'b1) ? col_stride_3_fu_1080_p2 : select_ln19_fu_1038_p3);

assign select_ln21_4_fu_826_p3 = ((or_ln19_2_fu_807_p2[0:0] == 1'b1) ? 6'd1 : add_ln21_1_fu_820_p2);

assign select_ln21_fu_1096_p3 = ((or_ln21_1_fu_1091_p2[0:0] == 1'b1) ? 4'd0 : input_ch_idx_fu_164);

assign tmp1_fu_891_p2 = (cmp98_not_fu_885_p2 | cmp96_not_reg_1482);

assign tmp1_mid1_fu_1128_p2 = (select_ln19_2_fu_1050_p3 | cmp98_not_mid1_fu_1122_p2);

assign tmp_data_sub_data_0_V_1_fu_1238_p1 = inStream_TDATA_int_regslice[15:0];

assign tmp_fu_869_p2 = (cmp94_not_fu_863_p2 | cmp92_not_fu_853_p2);

assign tmp_mid1_fu_996_p2 = (select_ln14_1_fu_924_p3 | cmp94_not_mid1_fu_990_p2);

assign trunc_ln17_1_fu_979_p1 = row_stride_3_fu_973_p2[0:0];

assign trunc_ln17_fu_859_p1 = row_stride_fu_184[0:0];

assign trunc_ln21_1_fu_1104_p1 = col_stride_3_fu_1080_p2[0:0];

assign trunc_ln21_fu_875_p1 = col_stride_fu_168[0:0];

assign xor_ln14_fu_683_p2 = (icmp_ln17_fu_677_p2 ^ 1'd1);

assign xor_ln17_fu_775_p2 = (icmp_ln19_reg_1460 ^ 1'd1);

assign xor_ln19_fu_1069_p2 = (1'd1 ^ and_ln17_1_reg_1493);

assign xor_ln21_fu_1148_p2 = (select_ln21_2_fu_1140_p3 ^ 1'd1);

assign zext_ln908_1_fu_1207_p1 = grp_fu_1334_p3;

endmodule //yolo_upsamp_top
