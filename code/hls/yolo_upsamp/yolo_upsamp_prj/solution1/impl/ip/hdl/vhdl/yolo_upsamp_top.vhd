-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity yolo_upsamp_top is
generic (
    C_S_AXI_CTRL_BUS_ADDR_WIDTH : INTEGER := 4;
    C_S_AXI_CTRL_BUS_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    inStream_TVALID : IN STD_LOGIC;
    outStream_TREADY : IN STD_LOGIC;
    inStream_TDATA : IN STD_LOGIC_VECTOR (111 downto 0);
    inStream_TREADY : OUT STD_LOGIC;
    outStream_TDATA : OUT STD_LOGIC_VECTOR (111 downto 0);
    outStream_TVALID : OUT STD_LOGIC;
    s_axi_CTRL_BUS_AWVALID : IN STD_LOGIC;
    s_axi_CTRL_BUS_AWREADY : OUT STD_LOGIC;
    s_axi_CTRL_BUS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_BUS_WVALID : IN STD_LOGIC;
    s_axi_CTRL_BUS_WREADY : OUT STD_LOGIC;
    s_axi_CTRL_BUS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_BUS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH/8-1 downto 0);
    s_axi_CTRL_BUS_ARVALID : IN STD_LOGIC;
    s_axi_CTRL_BUS_ARREADY : OUT STD_LOGIC;
    s_axi_CTRL_BUS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_BUS_RVALID : OUT STD_LOGIC;
    s_axi_CTRL_BUS_RREADY : IN STD_LOGIC;
    s_axi_CTRL_BUS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_BUS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CTRL_BUS_BVALID : OUT STD_LOGIC;
    s_axi_CTRL_BUS_BREADY : IN STD_LOGIC;
    s_axi_CTRL_BUS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of yolo_upsamp_top is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "yolo_upsamp_top_yolo_upsamp_top,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.260000,HLS_SYN_LAT=5416,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=798,HLS_SYN_LUT=783,HLS_VERSION=2022_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv13_1520 : STD_LOGIC_VECTOR (12 downto 0) := "1010100100000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv10_1A0 : STD_LOGIC_VECTOR (9 downto 0) := "0110100000";
    constant ap_const_lv9_D0 : STD_LOGIC_VECTOR (8 downto 0) := "011010000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010001";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_64 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100100";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_6D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101101";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv7_D : STD_LOGIC_VECTOR (6 downto 0) := "0001101";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_ready : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal icmp_ln15_reg_1450 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln15_reg_1450_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln21_1_reg_1531 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln21_1_reg_1531_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op223_read_state6 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal regslice_both_outStream_U_apdone_blk : STD_LOGIC;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln15_fu_637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal inStream_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal outStream_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln15_reg_1450_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln15_reg_1450_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln15_reg_1450_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln15_reg_1450_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln17_fu_649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln17_reg_1454 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln17_reg_1454_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln14_fu_655_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln14_reg_1466 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln14_reg_1466_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln19_fu_661_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln19_reg_1474 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln14_4_fu_667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln14_4_reg_1479 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln14_4_reg_1479_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln17_fu_673_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln17_reg_1490 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln17_reg_1490_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp96_not_fu_728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp96_not_reg_1496 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln17_3_fu_752_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln17_3_reg_1502 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln17_1_fu_762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln17_1_reg_1507 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln19_fu_768_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln19_reg_1516 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln19_2_fu_779_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln19_2_reg_1521 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln19_1_fu_784_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln19_1_reg_1526 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln19_1_reg_1526_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln19_1_reg_1526_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln21_1_fu_1086_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln21_1_reg_1531_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln21_1_reg_1531_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal curr_output_last_V_fu_1144_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal curr_output_last_V_reg_1540 : STD_LOGIC_VECTOR (0 downto 0);
    signal curr_output_last_V_reg_1540_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal curr_output_last_V_reg_1540_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal curr_output_last_V_reg_1540_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal curr_input_data_sub_data_0_V_fu_1186_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_condition_exit_pp0_iter2_stage0 : STD_LOGIC;
    signal line_buff_group_0_val_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal line_buff_group_0_val_V_ce0 : STD_LOGIC;
    signal line_buff_group_0_val_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buff_group_0_val_V_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal line_buff_group_0_val_V_ce1 : STD_LOGIC;
    signal line_buff_group_0_val_V_we1 : STD_LOGIC;
    signal line_buff_group_0_val_V_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buff_group_1_val_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal line_buff_group_1_val_V_ce0 : STD_LOGIC;
    signal line_buff_group_1_val_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buff_group_1_val_V_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal line_buff_group_1_val_V_ce1 : STD_LOGIC;
    signal line_buff_group_1_val_V_we1 : STD_LOGIC;
    signal line_buff_group_1_val_V_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buff_group_2_val_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal line_buff_group_2_val_V_ce0 : STD_LOGIC;
    signal line_buff_group_2_val_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buff_group_2_val_V_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal line_buff_group_2_val_V_ce1 : STD_LOGIC;
    signal line_buff_group_2_val_V_we1 : STD_LOGIC;
    signal line_buff_group_2_val_V_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buff_group_3_val_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal line_buff_group_3_val_V_ce0 : STD_LOGIC;
    signal line_buff_group_3_val_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buff_group_3_val_V_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal line_buff_group_3_val_V_ce1 : STD_LOGIC;
    signal line_buff_group_3_val_V_we1 : STD_LOGIC;
    signal line_buff_group_3_val_V_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_curr_output_data_sub_data_0_V_2_phi_fu_546_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_curr_output_data_sub_data_0_V_2_reg_543 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_curr_output_data_sub_data_0_V_2_reg_543 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_curr_output_data_sub_data_0_V_2_reg_543 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_curr_output_data_sub_data_0_V_2_reg_543 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_curr_output_data_sub_data_0_V_2_reg_543 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter5_curr_output_data_sub_data_0_V_2_reg_543 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter6_curr_output_data_sub_data_0_V_2_reg_543 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_curr_output_data_sub_data_1_V_2_phi_fu_556_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_curr_output_data_sub_data_1_V_2_reg_553 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_curr_output_data_sub_data_1_V_2_reg_553 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_curr_output_data_sub_data_1_V_2_reg_553 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_curr_output_data_sub_data_1_V_2_reg_553 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_curr_output_data_sub_data_1_V_2_reg_553 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter5_curr_output_data_sub_data_1_V_2_reg_553 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter6_curr_output_data_sub_data_1_V_2_reg_553 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_curr_output_data_sub_data_2_V_2_phi_fu_566_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_curr_output_data_sub_data_2_V_2_reg_563 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_curr_output_data_sub_data_2_V_2_reg_563 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_curr_output_data_sub_data_2_V_2_reg_563 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_curr_output_data_sub_data_2_V_2_reg_563 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_curr_output_data_sub_data_2_V_2_reg_563 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter5_curr_output_data_sub_data_2_V_2_reg_563 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter6_curr_output_data_sub_data_2_V_2_reg_563 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_curr_output_data_sub_data_3_V_2_phi_fu_576_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_curr_output_data_sub_data_3_V_2_reg_573 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_curr_output_data_sub_data_3_V_2_reg_573 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_curr_output_data_sub_data_3_V_2_reg_573 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_curr_output_data_sub_data_3_V_2_reg_573 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_curr_output_data_sub_data_3_V_2_reg_573 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter5_curr_output_data_sub_data_3_V_2_reg_573 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter6_curr_output_data_sub_data_3_V_2_reg_573 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln908_1_fu_1179_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal input_ch_idx_fu_166 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln23_fu_1150_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal col_stride_fu_170 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln21_3_fu_1126_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten_fu_174 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln21_4_fu_798_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal col_idx_fu_178 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten33_fu_182 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln19_4_fu_685_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_allocacmp_indvar_flatten33_load : STD_LOGIC_VECTOR (8 downto 0);
    signal row_stride_fu_186 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln17_4_fu_1003_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten84_fu_190 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln17_5_fu_699_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_allocacmp_indvar_flatten84_load : STD_LOGIC_VECTOR (9 downto 0);
    signal row_idx_fu_194 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln15_fu_938_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten154_fu_198 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln15_fu_643_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_sig_allocacmp_indvar_flatten154_load : STD_LOGIC_VECTOR (12 downto 0);
    signal curr_input_dest_V_fu_202 : STD_LOGIC_VECTOR (5 downto 0);
    signal curr_input_id_V_fu_206 : STD_LOGIC_VECTOR (4 downto 0);
    signal curr_input_user_V_fu_210 : STD_LOGIC_VECTOR (1 downto 0);
    signal curr_input_strb_V_fu_214 : STD_LOGIC_VECTOR (7 downto 0);
    signal curr_input_keep_V_fu_218 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal add_ln19_1_fu_679_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln17_1_fu_693_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln17_fu_747_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln21_fu_734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln14_3_fu_757_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln17_fu_740_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln19_fu_774_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln21_1_fu_792_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal cmp92_not_fu_825_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp94_not_fu_835_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln21_fu_847_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln17_fu_831_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp98_not_fu_857_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_fu_863_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_841_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_idx_3_fu_877_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal cmp92_not_mid1_fu_890_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_fu_851_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge456_fu_868_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln23_fu_927_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln14_fu_883_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_stride_3_fu_945_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln17_1_fu_951_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln14_fu_903_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln14_1_fu_896_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp94_not_mid1_fu_962_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_mid1_fu_968_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln14_fu_908_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln14_1_fu_913_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln14_1_fu_917_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln14_2_fu_922_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln14_2_fu_933_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp96_not_mid1_fu_1017_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln17_1_fu_981_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln17_1_fu_955_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln17_3_fu_986_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln17_2_fu_993_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln17_fu_998_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln19_fu_1041_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln19_fu_1010_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln19_fu_1046_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln21_fu_1058_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln21_1_fu_1063_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_stride_3_fu_1052_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln21_1_fu_1076_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mid1_fu_1080_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln19_3_fu_1029_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln19_2_fu_1022_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp98_not_mid1_fu_1094_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_mid1_fu_1100_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln17_2_fu_974_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge456_mid1_fu_1106_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln19_1_fu_1036_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln21_2_fu_1112_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln21_fu_1068_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln52_fu_1138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln21_fu_1120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1348_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_2_fu_1314_p14 : STD_LOGIC_VECTOR (109 downto 0);
    signal grp_fu_1348_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1348_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1348_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1348_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_predicate_op233_store_state6 : BOOLEAN;
    signal ap_enable_operation_233 : BOOLEAN;
    signal ap_enable_state6_pp0_iter5_stage0 : BOOLEAN;
    signal ap_predicate_op243_load_state6 : BOOLEAN;
    signal ap_enable_operation_243 : BOOLEAN;
    signal ap_predicate_op247_load_state7 : BOOLEAN;
    signal ap_enable_operation_247 : BOOLEAN;
    signal ap_enable_state7_pp0_iter6_stage0 : BOOLEAN;
    signal ap_predicate_op234_store_state6 : BOOLEAN;
    signal ap_enable_operation_234 : BOOLEAN;
    signal ap_predicate_op244_load_state6 : BOOLEAN;
    signal ap_enable_operation_244 : BOOLEAN;
    signal ap_predicate_op248_load_state7 : BOOLEAN;
    signal ap_enable_operation_248 : BOOLEAN;
    signal ap_predicate_op235_store_state6 : BOOLEAN;
    signal ap_enable_operation_235 : BOOLEAN;
    signal ap_predicate_op245_load_state6 : BOOLEAN;
    signal ap_enable_operation_245 : BOOLEAN;
    signal ap_predicate_op249_load_state7 : BOOLEAN;
    signal ap_enable_operation_249 : BOOLEAN;
    signal ap_predicate_op236_store_state6 : BOOLEAN;
    signal ap_enable_operation_236 : BOOLEAN;
    signal ap_predicate_op246_load_state6 : BOOLEAN;
    signal ap_enable_operation_246 : BOOLEAN;
    signal ap_predicate_op250_load_state7 : BOOLEAN;
    signal ap_enable_operation_250 : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal regslice_both_inStream_U_apdone_blk : STD_LOGIC;
    signal inStream_TDATA_int_regslice : STD_LOGIC_VECTOR (111 downto 0);
    signal inStream_TVALID_int_regslice : STD_LOGIC;
    signal inStream_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_inStream_U_ack_in : STD_LOGIC;
    signal outStream_TDATA_int_regslice : STD_LOGIC_VECTOR (111 downto 0);
    signal outStream_TVALID_int_regslice : STD_LOGIC;
    signal outStream_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_outStream_U_vld_out : STD_LOGIC;
    signal grp_fu_1348_p00 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1348_p20 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_condition_440 : BOOLEAN;
    signal ap_condition_347 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component yolo_upsamp_top_mac_muladd_4ns_4ns_4ns_7_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        din2 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component yolo_upsamp_top_line_buff_group_0_val_V_RAM_S2P_BRAM_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component yolo_upsamp_top_CTRL_BUS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component yolo_upsamp_top_flow_control_loop_pipe IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component yolo_upsamp_top_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    line_buff_group_0_val_V_U : component yolo_upsamp_top_line_buff_group_0_val_V_RAM_S2P_BRAM_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buff_group_0_val_V_address0,
        ce0 => line_buff_group_0_val_V_ce0,
        q0 => line_buff_group_0_val_V_q0,
        address1 => line_buff_group_0_val_V_address1,
        ce1 => line_buff_group_0_val_V_ce1,
        we1 => line_buff_group_0_val_V_we1,
        d1 => line_buff_group_0_val_V_d1);

    line_buff_group_1_val_V_U : component yolo_upsamp_top_line_buff_group_0_val_V_RAM_S2P_BRAM_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buff_group_1_val_V_address0,
        ce0 => line_buff_group_1_val_V_ce0,
        q0 => line_buff_group_1_val_V_q0,
        address1 => line_buff_group_1_val_V_address1,
        ce1 => line_buff_group_1_val_V_ce1,
        we1 => line_buff_group_1_val_V_we1,
        d1 => line_buff_group_1_val_V_d1);

    line_buff_group_2_val_V_U : component yolo_upsamp_top_line_buff_group_0_val_V_RAM_S2P_BRAM_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buff_group_2_val_V_address0,
        ce0 => line_buff_group_2_val_V_ce0,
        q0 => line_buff_group_2_val_V_q0,
        address1 => line_buff_group_2_val_V_address1,
        ce1 => line_buff_group_2_val_V_ce1,
        we1 => line_buff_group_2_val_V_we1,
        d1 => line_buff_group_2_val_V_d1);

    line_buff_group_3_val_V_U : component yolo_upsamp_top_line_buff_group_0_val_V_RAM_S2P_BRAM_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buff_group_3_val_V_address0,
        ce0 => line_buff_group_3_val_V_ce0,
        q0 => line_buff_group_3_val_V_q0,
        address1 => line_buff_group_3_val_V_address1,
        ce1 => line_buff_group_3_val_V_ce1,
        we1 => line_buff_group_3_val_V_we1,
        d1 => line_buff_group_3_val_V_d1);

    CTRL_BUS_s_axi_U : component yolo_upsamp_top_CTRL_BUS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_BUS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_BUS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CTRL_BUS_AWVALID,
        AWREADY => s_axi_CTRL_BUS_AWREADY,
        AWADDR => s_axi_CTRL_BUS_AWADDR,
        WVALID => s_axi_CTRL_BUS_WVALID,
        WREADY => s_axi_CTRL_BUS_WREADY,
        WDATA => s_axi_CTRL_BUS_WDATA,
        WSTRB => s_axi_CTRL_BUS_WSTRB,
        ARVALID => s_axi_CTRL_BUS_ARVALID,
        ARREADY => s_axi_CTRL_BUS_ARREADY,
        ARADDR => s_axi_CTRL_BUS_ARADDR,
        RVALID => s_axi_CTRL_BUS_RVALID,
        RREADY => s_axi_CTRL_BUS_RREADY,
        RDATA => s_axi_CTRL_BUS_RDATA,
        RRESP => s_axi_CTRL_BUS_RRESP,
        BVALID => s_axi_CTRL_BUS_BVALID,
        BREADY => s_axi_CTRL_BUS_BREADY,
        BRESP => s_axi_CTRL_BUS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    mac_muladd_4ns_4ns_4ns_7_4_1_U1 : component yolo_upsamp_top_mac_muladd_4ns_4ns_4ns_7_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 4,
        din1_WIDTH => 4,
        din2_WIDTH => 4,
        dout_WIDTH => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1348_p0,
        din1 => grp_fu_1348_p1,
        din2 => grp_fu_1348_p2,
        ce => grp_fu_1348_ce,
        dout => grp_fu_1348_p3);

    flow_control_loop_pipe_U : component yolo_upsamp_top_flow_control_loop_pipe
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int,
        ap_continue => ap_const_logic_1);

    regslice_both_inStream_U : component yolo_upsamp_top_regslice_both
    generic map (
        DataWidth => 112)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => inStream_TDATA,
        vld_in => inStream_TVALID,
        ack_in => regslice_both_inStream_U_ack_in,
        data_out => inStream_TDATA_int_regslice,
        vld_out => inStream_TVALID_int_regslice,
        ack_out => inStream_TREADY_int_regslice,
        apdone_blk => regslice_both_inStream_U_apdone_blk);

    regslice_both_outStream_U : component yolo_upsamp_top_regslice_both
    generic map (
        DataWidth => 112)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => outStream_TDATA_int_regslice,
        vld_in => outStream_TVALID_int_regslice,
        ack_in => outStream_TREADY_int_regslice,
        data_out => outStream_TDATA,
        vld_out => regslice_both_outStream_U_vld_out,
        ack_out => outStream_TREADY,
        apdone_blk => regslice_both_outStream_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter2_stage0)) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter6_curr_output_data_sub_data_0_V_2_reg_543_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
                if (((select_ln21_1_reg_1531_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln15_reg_1450_pp0_iter4_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter6_curr_output_data_sub_data_0_V_2_reg_543 <= curr_input_data_sub_data_0_V_fu_1186_p1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter6_curr_output_data_sub_data_0_V_2_reg_543 <= ap_phi_reg_pp0_iter5_curr_output_data_sub_data_0_V_2_reg_543;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter6_curr_output_data_sub_data_1_V_2_reg_553_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
                if (((select_ln21_1_reg_1531_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln15_reg_1450_pp0_iter4_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter6_curr_output_data_sub_data_1_V_2_reg_553 <= inStream_TDATA_int_regslice(31 downto 16);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter6_curr_output_data_sub_data_1_V_2_reg_553 <= ap_phi_reg_pp0_iter5_curr_output_data_sub_data_1_V_2_reg_553;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter6_curr_output_data_sub_data_2_V_2_reg_563_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
                if (((select_ln21_1_reg_1531_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln15_reg_1450_pp0_iter4_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter6_curr_output_data_sub_data_2_V_2_reg_563 <= inStream_TDATA_int_regslice(47 downto 32);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter6_curr_output_data_sub_data_2_V_2_reg_563 <= ap_phi_reg_pp0_iter5_curr_output_data_sub_data_2_V_2_reg_563;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter6_curr_output_data_sub_data_3_V_2_reg_573_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
                if (((select_ln21_1_reg_1531_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln15_reg_1450_pp0_iter4_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter6_curr_output_data_sub_data_3_V_2_reg_573 <= inStream_TDATA_int_regslice(63 downto 48);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter6_curr_output_data_sub_data_3_V_2_reg_573 <= ap_phi_reg_pp0_iter5_curr_output_data_sub_data_3_V_2_reg_573;
                end if;
            end if; 
        end if;
    end process;

    col_idx_fu_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    col_idx_fu_178 <= ap_const_lv4_0;
                elsif (((icmp_ln15_reg_1450 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    col_idx_fu_178 <= select_ln19_1_fu_784_p3;
                end if;
            end if; 
        end if;
    end process;

    col_stride_fu_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if ((ap_const_boolean_1 = ap_condition_440)) then 
                    col_stride_fu_170 <= ap_const_lv2_0;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln15_reg_1450_pp0_iter1_reg = ap_const_lv1_0))) then 
                    col_stride_fu_170 <= select_ln21_3_fu_1126_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten154_fu_198_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_347)) then
                if ((icmp_ln15_fu_637_p2 = ap_const_lv1_0)) then 
                    indvar_flatten154_fu_198 <= add_ln15_fu_643_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten154_fu_198 <= ap_const_lv13_0;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten33_fu_182_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_347)) then
                if ((icmp_ln15_fu_637_p2 = ap_const_lv1_0)) then 
                    indvar_flatten33_fu_182 <= select_ln19_4_fu_685_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten33_fu_182 <= ap_const_lv9_0;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten84_fu_190_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_347)) then
                if ((icmp_ln15_fu_637_p2 = ap_const_lv1_0)) then 
                    indvar_flatten84_fu_190 <= select_ln17_5_fu_699_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten84_fu_190 <= ap_const_lv10_0;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    indvar_flatten_fu_174 <= ap_const_lv6_0;
                elsif (((icmp_ln15_reg_1450 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    indvar_flatten_fu_174 <= select_ln21_4_fu_798_p3;
                end if;
            end if; 
        end if;
    end process;

    input_ch_idx_fu_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if ((ap_const_boolean_1 = ap_condition_440)) then 
                    input_ch_idx_fu_166 <= ap_const_lv4_0;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln15_reg_1450_pp0_iter1_reg = ap_const_lv1_0))) then 
                    input_ch_idx_fu_166 <= add_ln23_fu_1150_p2;
                end if;
            end if; 
        end if;
    end process;

    row_idx_fu_194_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if ((ap_const_boolean_1 = ap_condition_440)) then 
                    row_idx_fu_194 <= ap_const_lv4_0;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln15_reg_1450_pp0_iter1_reg = ap_const_lv1_0))) then 
                    row_idx_fu_194 <= select_ln15_fu_938_p3;
                end if;
            end if; 
        end if;
    end process;

    row_stride_fu_186_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if ((ap_const_boolean_1 = ap_condition_440)) then 
                    row_stride_fu_186 <= ap_const_lv2_0;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln15_reg_1450_pp0_iter1_reg = ap_const_lv1_0))) then 
                    row_stride_fu_186 <= select_ln17_4_fu_1003_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln15_reg_1450 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln19_reg_1516 <= add_ln19_fu_768_p2;
                and_ln17_1_reg_1507 <= and_ln17_1_fu_762_p2;
                or_ln17_3_reg_1502 <= or_ln17_3_fu_752_p2;
                or_ln19_2_reg_1521 <= or_ln19_2_fu_779_p2;
                select_ln19_1_reg_1526 <= select_ln19_1_fu_784_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln15_fu_637_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln14_4_reg_1479 <= and_ln14_4_fu_667_p2;
                icmp_ln17_reg_1454 <= icmp_ln17_fu_649_p2;
                icmp_ln19_reg_1474 <= icmp_ln19_fu_661_p2;
                or_ln17_reg_1490 <= or_ln17_fu_673_p2;
                xor_ln14_reg_1466 <= xor_ln14_fu_655_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln14_4_reg_1479_pp0_iter1_reg <= and_ln14_4_reg_1479;
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                cmp96_not_reg_1496 <= cmp96_not_fu_728_p2;
                icmp_ln15_reg_1450 <= icmp_ln15_fu_637_p2;
                icmp_ln15_reg_1450_pp0_iter1_reg <= icmp_ln15_reg_1450;
                icmp_ln17_reg_1454_pp0_iter1_reg <= icmp_ln17_reg_1454;
                or_ln17_reg_1490_pp0_iter1_reg <= or_ln17_reg_1490;
                xor_ln14_reg_1466_pp0_iter1_reg <= xor_ln14_reg_1466;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                curr_output_last_V_reg_1540_pp0_iter3_reg <= curr_output_last_V_reg_1540;
                curr_output_last_V_reg_1540_pp0_iter4_reg <= curr_output_last_V_reg_1540_pp0_iter3_reg;
                curr_output_last_V_reg_1540_pp0_iter5_reg <= curr_output_last_V_reg_1540_pp0_iter4_reg;
                icmp_ln15_reg_1450_pp0_iter2_reg <= icmp_ln15_reg_1450_pp0_iter1_reg;
                icmp_ln15_reg_1450_pp0_iter3_reg <= icmp_ln15_reg_1450_pp0_iter2_reg;
                icmp_ln15_reg_1450_pp0_iter4_reg <= icmp_ln15_reg_1450_pp0_iter3_reg;
                icmp_ln15_reg_1450_pp0_iter5_reg <= icmp_ln15_reg_1450_pp0_iter4_reg;
                select_ln19_1_reg_1526_pp0_iter2_reg <= select_ln19_1_reg_1526;
                select_ln19_1_reg_1526_pp0_iter3_reg <= select_ln19_1_reg_1526_pp0_iter2_reg;
                select_ln21_1_reg_1531_pp0_iter3_reg <= select_ln21_1_reg_1531;
                select_ln21_1_reg_1531_pp0_iter4_reg <= select_ln21_1_reg_1531_pp0_iter3_reg;
                select_ln21_1_reg_1531_pp0_iter5_reg <= select_ln21_1_reg_1531_pp0_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter1_curr_output_data_sub_data_0_V_2_reg_543 <= ap_phi_reg_pp0_iter0_curr_output_data_sub_data_0_V_2_reg_543;
                ap_phi_reg_pp0_iter1_curr_output_data_sub_data_1_V_2_reg_553 <= ap_phi_reg_pp0_iter0_curr_output_data_sub_data_1_V_2_reg_553;
                ap_phi_reg_pp0_iter1_curr_output_data_sub_data_2_V_2_reg_563 <= ap_phi_reg_pp0_iter0_curr_output_data_sub_data_2_V_2_reg_563;
                ap_phi_reg_pp0_iter1_curr_output_data_sub_data_3_V_2_reg_573 <= ap_phi_reg_pp0_iter0_curr_output_data_sub_data_3_V_2_reg_573;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter2_curr_output_data_sub_data_0_V_2_reg_543 <= ap_phi_reg_pp0_iter1_curr_output_data_sub_data_0_V_2_reg_543;
                ap_phi_reg_pp0_iter2_curr_output_data_sub_data_1_V_2_reg_553 <= ap_phi_reg_pp0_iter1_curr_output_data_sub_data_1_V_2_reg_553;
                ap_phi_reg_pp0_iter2_curr_output_data_sub_data_2_V_2_reg_563 <= ap_phi_reg_pp0_iter1_curr_output_data_sub_data_2_V_2_reg_563;
                ap_phi_reg_pp0_iter2_curr_output_data_sub_data_3_V_2_reg_573 <= ap_phi_reg_pp0_iter1_curr_output_data_sub_data_3_V_2_reg_573;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter3_curr_output_data_sub_data_0_V_2_reg_543 <= ap_phi_reg_pp0_iter2_curr_output_data_sub_data_0_V_2_reg_543;
                ap_phi_reg_pp0_iter3_curr_output_data_sub_data_1_V_2_reg_553 <= ap_phi_reg_pp0_iter2_curr_output_data_sub_data_1_V_2_reg_553;
                ap_phi_reg_pp0_iter3_curr_output_data_sub_data_2_V_2_reg_563 <= ap_phi_reg_pp0_iter2_curr_output_data_sub_data_2_V_2_reg_563;
                ap_phi_reg_pp0_iter3_curr_output_data_sub_data_3_V_2_reg_573 <= ap_phi_reg_pp0_iter2_curr_output_data_sub_data_3_V_2_reg_573;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter4_curr_output_data_sub_data_0_V_2_reg_543 <= ap_phi_reg_pp0_iter3_curr_output_data_sub_data_0_V_2_reg_543;
                ap_phi_reg_pp0_iter4_curr_output_data_sub_data_1_V_2_reg_553 <= ap_phi_reg_pp0_iter3_curr_output_data_sub_data_1_V_2_reg_553;
                ap_phi_reg_pp0_iter4_curr_output_data_sub_data_2_V_2_reg_563 <= ap_phi_reg_pp0_iter3_curr_output_data_sub_data_2_V_2_reg_563;
                ap_phi_reg_pp0_iter4_curr_output_data_sub_data_3_V_2_reg_573 <= ap_phi_reg_pp0_iter3_curr_output_data_sub_data_3_V_2_reg_573;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter5_curr_output_data_sub_data_0_V_2_reg_543 <= ap_phi_reg_pp0_iter4_curr_output_data_sub_data_0_V_2_reg_543;
                ap_phi_reg_pp0_iter5_curr_output_data_sub_data_1_V_2_reg_553 <= ap_phi_reg_pp0_iter4_curr_output_data_sub_data_1_V_2_reg_553;
                ap_phi_reg_pp0_iter5_curr_output_data_sub_data_2_V_2_reg_563 <= ap_phi_reg_pp0_iter4_curr_output_data_sub_data_2_V_2_reg_563;
                ap_phi_reg_pp0_iter5_curr_output_data_sub_data_3_V_2_reg_573 <= ap_phi_reg_pp0_iter4_curr_output_data_sub_data_3_V_2_reg_573;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln21_1_reg_1531_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln15_reg_1450_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
                curr_input_dest_V_fu_202 <= inStream_TDATA_int_regslice(109 downto 104);
                curr_input_id_V_fu_206 <= inStream_TDATA_int_regslice(100 downto 96);
                curr_input_keep_V_fu_218 <= inStream_TDATA_int_regslice(71 downto 64);
                curr_input_strb_V_fu_214 <= inStream_TDATA_int_regslice(79 downto 72);
                curr_input_user_V_fu_210 <= inStream_TDATA_int_regslice(81 downto 80);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln15_reg_1450_pp0_iter1_reg = ap_const_lv1_0))) then
                curr_output_last_V_reg_1540 <= curr_output_last_V_fu_1144_p2;
                select_ln21_1_reg_1531 <= select_ln21_1_fu_1086_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln15_fu_643_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten154_load) + unsigned(ap_const_lv13_1));
    add_ln17_1_fu_693_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten84_load) + unsigned(ap_const_lv10_1));
    add_ln19_1_fu_679_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten33_load) + unsigned(ap_const_lv9_1));
    add_ln19_fu_768_p2 <= std_logic_vector(unsigned(select_ln17_fu_740_p3) + unsigned(ap_const_lv4_1));
    add_ln21_1_fu_792_p2 <= std_logic_vector(unsigned(indvar_flatten_fu_174) + unsigned(ap_const_lv6_1));
    add_ln23_fu_1150_p2 <= std_logic_vector(unsigned(select_ln21_fu_1068_p3) + unsigned(ap_const_lv4_1));
    and_ln14_1_fu_917_p2 <= (xor_ln14_reg_1466_pp0_iter1_reg and empty_fu_851_p2);
    and_ln14_2_fu_933_p2 <= (xor_ln14_reg_1466_pp0_iter1_reg and icmp_ln23_fu_927_p2);
    and_ln14_3_fu_757_p2 <= (xor_ln14_reg_1466 and icmp_ln21_fu_734_p2);
    and_ln14_4_fu_667_p2 <= (xor_ln14_fu_655_p2 and icmp_ln19_fu_661_p2);
    and_ln14_fu_903_p2 <= (xor_ln14_reg_1466_pp0_iter1_reg and trunc_ln17_fu_831_p1);
    and_ln17_1_fu_762_p2 <= (or_ln17_3_fu_752_p2 and and_ln14_3_fu_757_p2);
    and_ln17_fu_998_p2 <= (or_ln17_3_reg_1502 and and_ln14_2_fu_933_p2);
    and_ln19_fu_1046_p2 <= (xor_ln19_fu_1041_p2 and and_ln17_fu_998_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_predicate_op223_read_state6, regslice_both_outStream_U_apdone_blk, ap_loop_exit_ready_pp0_iter6_reg, inStream_TVALID_int_regslice, outStream_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_1) and (regslice_both_outStream_U_apdone_blk = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (outStream_TREADY_int_regslice = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and ((regslice_both_outStream_U_apdone_blk = ap_const_logic_1) or (outStream_TREADY_int_regslice = ap_const_logic_0))) or ((ap_predicate_op223_read_state6 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (inStream_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_predicate_op223_read_state6, regslice_both_outStream_U_apdone_blk, ap_loop_exit_ready_pp0_iter6_reg, inStream_TVALID_int_regslice, outStream_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_1) and (regslice_both_outStream_U_apdone_blk = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (outStream_TREADY_int_regslice = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and ((regslice_both_outStream_U_apdone_blk = ap_const_logic_1) or (outStream_TREADY_int_regslice = ap_const_logic_0))) or ((ap_predicate_op223_read_state6 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (inStream_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_predicate_op223_read_state6, regslice_both_outStream_U_apdone_blk, ap_loop_exit_ready_pp0_iter6_reg, inStream_TVALID_int_regslice, outStream_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_1) and (regslice_both_outStream_U_apdone_blk = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (outStream_TREADY_int_regslice = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and ((regslice_both_outStream_U_apdone_blk = ap_const_logic_1) or (outStream_TREADY_int_regslice = ap_const_logic_0))) or ((ap_predicate_op223_read_state6 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (inStream_TVALID_int_regslice = ap_const_logic_0)));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage0_iter5_assign_proc : process(ap_predicate_op223_read_state6, inStream_TVALID_int_regslice)
    begin
                ap_block_state6_pp0_stage0_iter5 <= ((ap_predicate_op223_read_state6 = ap_const_boolean_1) and (inStream_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state7_pp0_stage0_iter6_assign_proc : process(regslice_both_outStream_U_apdone_blk, outStream_TREADY_int_regslice)
    begin
                ap_block_state7_pp0_stage0_iter6 <= ((regslice_both_outStream_U_apdone_blk = ap_const_logic_1) or (outStream_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state8_pp0_stage0_iter7_assign_proc : process(outStream_TREADY_int_regslice)
    begin
                ap_block_state8_pp0_stage0_iter7 <= (outStream_TREADY_int_regslice = ap_const_logic_0);
    end process;


    ap_condition_347_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_347 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_440_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_loop_init)
    begin
                ap_condition_440 <= ((ap_loop_init = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln15_fu_637_p2)
    begin
        if (((icmp_ln15_fu_637_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter2_stage0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_subdone, icmp_ln15_reg_1450_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln15_reg_1450_pp0_iter1_reg = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter2_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter2_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_loop_exit_ready_pp0_iter6_reg, ap_block_pp0_stage0_subdone, ap_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_enable_operation_233_assign_proc : process(ap_predicate_op233_store_state6)
    begin
                ap_enable_operation_233 <= (ap_predicate_op233_store_state6 = ap_const_boolean_1);
    end process;


    ap_enable_operation_234_assign_proc : process(ap_predicate_op234_store_state6)
    begin
                ap_enable_operation_234 <= (ap_predicate_op234_store_state6 = ap_const_boolean_1);
    end process;


    ap_enable_operation_235_assign_proc : process(ap_predicate_op235_store_state6)
    begin
                ap_enable_operation_235 <= (ap_predicate_op235_store_state6 = ap_const_boolean_1);
    end process;


    ap_enable_operation_236_assign_proc : process(ap_predicate_op236_store_state6)
    begin
                ap_enable_operation_236 <= (ap_predicate_op236_store_state6 = ap_const_boolean_1);
    end process;


    ap_enable_operation_243_assign_proc : process(ap_predicate_op243_load_state6)
    begin
                ap_enable_operation_243 <= (ap_predicate_op243_load_state6 = ap_const_boolean_1);
    end process;


    ap_enable_operation_244_assign_proc : process(ap_predicate_op244_load_state6)
    begin
                ap_enable_operation_244 <= (ap_predicate_op244_load_state6 = ap_const_boolean_1);
    end process;


    ap_enable_operation_245_assign_proc : process(ap_predicate_op245_load_state6)
    begin
                ap_enable_operation_245 <= (ap_predicate_op245_load_state6 = ap_const_boolean_1);
    end process;


    ap_enable_operation_246_assign_proc : process(ap_predicate_op246_load_state6)
    begin
                ap_enable_operation_246 <= (ap_predicate_op246_load_state6 = ap_const_boolean_1);
    end process;


    ap_enable_operation_247_assign_proc : process(ap_predicate_op247_load_state7)
    begin
                ap_enable_operation_247 <= (ap_predicate_op247_load_state7 = ap_const_boolean_1);
    end process;


    ap_enable_operation_248_assign_proc : process(ap_predicate_op248_load_state7)
    begin
                ap_enable_operation_248 <= (ap_predicate_op248_load_state7 = ap_const_boolean_1);
    end process;


    ap_enable_operation_249_assign_proc : process(ap_predicate_op249_load_state7)
    begin
                ap_enable_operation_249 <= (ap_predicate_op249_load_state7 = ap_const_boolean_1);
    end process;


    ap_enable_operation_250_assign_proc : process(ap_predicate_op250_load_state7)
    begin
                ap_enable_operation_250 <= (ap_predicate_op250_load_state7 = ap_const_boolean_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_enable_state6_pp0_iter5_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5)
    begin
                ap_enable_state6_pp0_iter5_stage0 <= ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state7_pp0_iter6_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter6)
    begin
                ap_enable_state7_pp0_iter6_stage0 <= ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_phi_mux_curr_output_data_sub_data_0_V_2_phi_fu_546_p4_assign_proc : process(icmp_ln15_reg_1450_pp0_iter5_reg, select_ln21_1_reg_1531_pp0_iter5_reg, line_buff_group_0_val_V_q0, ap_phi_reg_pp0_iter6_curr_output_data_sub_data_0_V_2_reg_543)
    begin
        if (((select_ln21_1_reg_1531_pp0_iter5_reg = ap_const_lv1_1) and (icmp_ln15_reg_1450_pp0_iter5_reg = ap_const_lv1_0))) then 
            ap_phi_mux_curr_output_data_sub_data_0_V_2_phi_fu_546_p4 <= line_buff_group_0_val_V_q0;
        else 
            ap_phi_mux_curr_output_data_sub_data_0_V_2_phi_fu_546_p4 <= ap_phi_reg_pp0_iter6_curr_output_data_sub_data_0_V_2_reg_543;
        end if; 
    end process;


    ap_phi_mux_curr_output_data_sub_data_1_V_2_phi_fu_556_p4_assign_proc : process(icmp_ln15_reg_1450_pp0_iter5_reg, select_ln21_1_reg_1531_pp0_iter5_reg, line_buff_group_1_val_V_q0, ap_phi_reg_pp0_iter6_curr_output_data_sub_data_1_V_2_reg_553)
    begin
        if (((select_ln21_1_reg_1531_pp0_iter5_reg = ap_const_lv1_1) and (icmp_ln15_reg_1450_pp0_iter5_reg = ap_const_lv1_0))) then 
            ap_phi_mux_curr_output_data_sub_data_1_V_2_phi_fu_556_p4 <= line_buff_group_1_val_V_q0;
        else 
            ap_phi_mux_curr_output_data_sub_data_1_V_2_phi_fu_556_p4 <= ap_phi_reg_pp0_iter6_curr_output_data_sub_data_1_V_2_reg_553;
        end if; 
    end process;


    ap_phi_mux_curr_output_data_sub_data_2_V_2_phi_fu_566_p4_assign_proc : process(icmp_ln15_reg_1450_pp0_iter5_reg, select_ln21_1_reg_1531_pp0_iter5_reg, line_buff_group_2_val_V_q0, ap_phi_reg_pp0_iter6_curr_output_data_sub_data_2_V_2_reg_563)
    begin
        if (((select_ln21_1_reg_1531_pp0_iter5_reg = ap_const_lv1_1) and (icmp_ln15_reg_1450_pp0_iter5_reg = ap_const_lv1_0))) then 
            ap_phi_mux_curr_output_data_sub_data_2_V_2_phi_fu_566_p4 <= line_buff_group_2_val_V_q0;
        else 
            ap_phi_mux_curr_output_data_sub_data_2_V_2_phi_fu_566_p4 <= ap_phi_reg_pp0_iter6_curr_output_data_sub_data_2_V_2_reg_563;
        end if; 
    end process;


    ap_phi_mux_curr_output_data_sub_data_3_V_2_phi_fu_576_p4_assign_proc : process(icmp_ln15_reg_1450_pp0_iter5_reg, select_ln21_1_reg_1531_pp0_iter5_reg, line_buff_group_3_val_V_q0, ap_phi_reg_pp0_iter6_curr_output_data_sub_data_3_V_2_reg_573)
    begin
        if (((select_ln21_1_reg_1531_pp0_iter5_reg = ap_const_lv1_1) and (icmp_ln15_reg_1450_pp0_iter5_reg = ap_const_lv1_0))) then 
            ap_phi_mux_curr_output_data_sub_data_3_V_2_phi_fu_576_p4 <= line_buff_group_3_val_V_q0;
        else 
            ap_phi_mux_curr_output_data_sub_data_3_V_2_phi_fu_576_p4 <= ap_phi_reg_pp0_iter6_curr_output_data_sub_data_3_V_2_reg_573;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_curr_output_data_sub_data_0_V_2_reg_543 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_curr_output_data_sub_data_1_V_2_reg_553 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_curr_output_data_sub_data_2_V_2_reg_563 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_curr_output_data_sub_data_3_V_2_reg_573 <= "XXXXXXXXXXXXXXXX";

    ap_predicate_op223_read_state6_assign_proc : process(icmp_ln15_reg_1450_pp0_iter4_reg, select_ln21_1_reg_1531_pp0_iter4_reg)
    begin
                ap_predicate_op223_read_state6 <= ((select_ln21_1_reg_1531_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln15_reg_1450_pp0_iter4_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op233_store_state6_assign_proc : process(icmp_ln15_reg_1450_pp0_iter4_reg, select_ln21_1_reg_1531_pp0_iter4_reg)
    begin
                ap_predicate_op233_store_state6 <= ((select_ln21_1_reg_1531_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln15_reg_1450_pp0_iter4_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op234_store_state6_assign_proc : process(icmp_ln15_reg_1450_pp0_iter4_reg, select_ln21_1_reg_1531_pp0_iter4_reg)
    begin
                ap_predicate_op234_store_state6 <= ((select_ln21_1_reg_1531_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln15_reg_1450_pp0_iter4_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op235_store_state6_assign_proc : process(icmp_ln15_reg_1450_pp0_iter4_reg, select_ln21_1_reg_1531_pp0_iter4_reg)
    begin
                ap_predicate_op235_store_state6 <= ((select_ln21_1_reg_1531_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln15_reg_1450_pp0_iter4_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op236_store_state6_assign_proc : process(icmp_ln15_reg_1450_pp0_iter4_reg, select_ln21_1_reg_1531_pp0_iter4_reg)
    begin
                ap_predicate_op236_store_state6 <= ((select_ln21_1_reg_1531_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln15_reg_1450_pp0_iter4_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op243_load_state6_assign_proc : process(icmp_ln15_reg_1450_pp0_iter4_reg, select_ln21_1_reg_1531_pp0_iter4_reg)
    begin
                ap_predicate_op243_load_state6 <= ((select_ln21_1_reg_1531_pp0_iter4_reg = ap_const_lv1_1) and (icmp_ln15_reg_1450_pp0_iter4_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op244_load_state6_assign_proc : process(icmp_ln15_reg_1450_pp0_iter4_reg, select_ln21_1_reg_1531_pp0_iter4_reg)
    begin
                ap_predicate_op244_load_state6 <= ((select_ln21_1_reg_1531_pp0_iter4_reg = ap_const_lv1_1) and (icmp_ln15_reg_1450_pp0_iter4_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op245_load_state6_assign_proc : process(icmp_ln15_reg_1450_pp0_iter4_reg, select_ln21_1_reg_1531_pp0_iter4_reg)
    begin
                ap_predicate_op245_load_state6 <= ((select_ln21_1_reg_1531_pp0_iter4_reg = ap_const_lv1_1) and (icmp_ln15_reg_1450_pp0_iter4_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op246_load_state6_assign_proc : process(icmp_ln15_reg_1450_pp0_iter4_reg, select_ln21_1_reg_1531_pp0_iter4_reg)
    begin
                ap_predicate_op246_load_state6 <= ((select_ln21_1_reg_1531_pp0_iter4_reg = ap_const_lv1_1) and (icmp_ln15_reg_1450_pp0_iter4_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op247_load_state7_assign_proc : process(icmp_ln15_reg_1450_pp0_iter5_reg, select_ln21_1_reg_1531_pp0_iter5_reg)
    begin
                ap_predicate_op247_load_state7 <= ((select_ln21_1_reg_1531_pp0_iter5_reg = ap_const_lv1_1) and (icmp_ln15_reg_1450_pp0_iter5_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op248_load_state7_assign_proc : process(icmp_ln15_reg_1450_pp0_iter5_reg, select_ln21_1_reg_1531_pp0_iter5_reg)
    begin
                ap_predicate_op248_load_state7 <= ((select_ln21_1_reg_1531_pp0_iter5_reg = ap_const_lv1_1) and (icmp_ln15_reg_1450_pp0_iter5_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op249_load_state7_assign_proc : process(icmp_ln15_reg_1450_pp0_iter5_reg, select_ln21_1_reg_1531_pp0_iter5_reg)
    begin
                ap_predicate_op249_load_state7 <= ((select_ln21_1_reg_1531_pp0_iter5_reg = ap_const_lv1_1) and (icmp_ln15_reg_1450_pp0_iter5_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op250_load_state7_assign_proc : process(icmp_ln15_reg_1450_pp0_iter5_reg, select_ln21_1_reg_1531_pp0_iter5_reg)
    begin
                ap_predicate_op250_load_state7 <= ((select_ln21_1_reg_1531_pp0_iter5_reg = ap_const_lv1_1) and (icmp_ln15_reg_1450_pp0_iter5_reg = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_allocacmp_indvar_flatten154_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten154_fu_198)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten154_load <= ap_const_lv13_0;
        else 
            ap_sig_allocacmp_indvar_flatten154_load <= indvar_flatten154_fu_198;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten33_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten33_fu_182)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten33_load <= ap_const_lv9_0;
        else 
            ap_sig_allocacmp_indvar_flatten33_load <= indvar_flatten33_fu_182;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten84_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten84_fu_190)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten84_load <= ap_const_lv10_0;
        else 
            ap_sig_allocacmp_indvar_flatten84_load <= indvar_flatten84_fu_190;
        end if; 
    end process;

    brmerge456_fu_868_p2 <= (tmp2_fu_863_p2 or tmp1_fu_841_p2);
    brmerge456_mid1_fu_1106_p2 <= (tmp2_mid1_fu_1100_p2 or select_ln17_2_fu_974_p3);
    cmp92_not_fu_825_p2 <= "0" when (row_idx_fu_194 = ap_const_lv4_C) else "1";
    cmp92_not_mid1_fu_890_p2 <= "0" when (row_idx_3_fu_877_p2 = ap_const_lv4_C) else "1";
    cmp94_not_fu_835_p2 <= "0" when (row_stride_fu_186 = ap_const_lv2_1) else "1";
    cmp94_not_mid1_fu_962_p2 <= "0" when (select_ln14_fu_883_p3 = ap_const_lv2_0) else "1";
    cmp96_not_fu_728_p2 <= "0" when (col_idx_fu_178 = ap_const_lv4_C) else "1";
    cmp96_not_mid1_fu_1017_p2 <= "0" when (add_ln19_reg_1516 = ap_const_lv4_C) else "1";
    cmp98_not_fu_857_p2 <= "0" when (col_stride_fu_170 = ap_const_lv2_1) else "1";
    cmp98_not_mid1_fu_1094_p2 <= "0" when (select_ln19_fu_1010_p3 = ap_const_lv2_0) else "1";
    col_stride_3_fu_1052_p2 <= std_logic_vector(unsigned(select_ln19_fu_1010_p3) + unsigned(ap_const_lv2_1));
    curr_input_data_sub_data_0_V_fu_1186_p1 <= inStream_TDATA_int_regslice(16 - 1 downto 0);
    curr_output_last_V_fu_1144_p2 <= (xor_ln21_fu_1120_p2 and icmp_ln52_fu_1138_p2);
    empty_fu_851_p2 <= (trunc_ln21_fu_847_p1 or trunc_ln17_fu_831_p1);

    grp_fu_1348_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1348_ce <= ap_const_logic_1;
        else 
            grp_fu_1348_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1348_p0 <= grp_fu_1348_p00(4 - 1 downto 0);
    grp_fu_1348_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln21_fu_1068_p3),7));
    grp_fu_1348_p1 <= ap_const_lv7_D(4 - 1 downto 0);
    grp_fu_1348_p2 <= grp_fu_1348_p20(4 - 1 downto 0);
    grp_fu_1348_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln19_1_reg_1526_pp0_iter3_reg),7));
    icmp_ln15_fu_637_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten154_load = ap_const_lv13_1520) else "0";
    icmp_ln17_fu_649_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten84_load = ap_const_lv10_1A0) else "0";
    icmp_ln19_fu_661_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten33_load = ap_const_lv9_D0) else "0";
    icmp_ln21_fu_734_p2 <= "1" when (indvar_flatten_fu_174 = ap_const_lv6_10) else "0";
    icmp_ln23_fu_927_p2 <= "1" when (input_ch_idx_fu_166 = ap_const_lv4_8) else "0";
    icmp_ln52_fu_1138_p2 <= "1" when (select_ln21_fu_1068_p3 = ap_const_lv4_7) else "0";

    inStream_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter5, ap_predicate_op223_read_state6, ap_block_pp0_stage0, inStream_TVALID_int_regslice)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op223_read_state6 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            inStream_TDATA_blk_n <= inStream_TVALID_int_regslice;
        else 
            inStream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    inStream_TREADY <= regslice_both_inStream_U_ack_in;

    inStream_TREADY_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter5, ap_predicate_op223_read_state6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op223_read_state6 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            inStream_TREADY_int_regslice <= ap_const_logic_1;
        else 
            inStream_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    line_buff_group_0_val_V_address0 <= zext_ln908_1_fu_1179_p1(7 - 1 downto 0);
    line_buff_group_0_val_V_address1 <= zext_ln908_1_fu_1179_p1(7 - 1 downto 0);

    line_buff_group_0_val_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            line_buff_group_0_val_V_ce0 <= ap_const_logic_1;
        else 
            line_buff_group_0_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buff_group_0_val_V_ce1_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            line_buff_group_0_val_V_ce1 <= ap_const_logic_1;
        else 
            line_buff_group_0_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buff_group_0_val_V_d1 <= inStream_TDATA_int_regslice(16 - 1 downto 0);

    line_buff_group_0_val_V_we1_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln15_reg_1450_pp0_iter4_reg, select_ln21_1_reg_1531_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln21_1_reg_1531_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln15_reg_1450_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            line_buff_group_0_val_V_we1 <= ap_const_logic_1;
        else 
            line_buff_group_0_val_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buff_group_1_val_V_address0 <= zext_ln908_1_fu_1179_p1(7 - 1 downto 0);
    line_buff_group_1_val_V_address1 <= zext_ln908_1_fu_1179_p1(7 - 1 downto 0);

    line_buff_group_1_val_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            line_buff_group_1_val_V_ce0 <= ap_const_logic_1;
        else 
            line_buff_group_1_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buff_group_1_val_V_ce1_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            line_buff_group_1_val_V_ce1 <= ap_const_logic_1;
        else 
            line_buff_group_1_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buff_group_1_val_V_d1 <= inStream_TDATA_int_regslice(31 downto 16);

    line_buff_group_1_val_V_we1_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln15_reg_1450_pp0_iter4_reg, select_ln21_1_reg_1531_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln21_1_reg_1531_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln15_reg_1450_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            line_buff_group_1_val_V_we1 <= ap_const_logic_1;
        else 
            line_buff_group_1_val_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buff_group_2_val_V_address0 <= zext_ln908_1_fu_1179_p1(7 - 1 downto 0);
    line_buff_group_2_val_V_address1 <= zext_ln908_1_fu_1179_p1(7 - 1 downto 0);

    line_buff_group_2_val_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            line_buff_group_2_val_V_ce0 <= ap_const_logic_1;
        else 
            line_buff_group_2_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buff_group_2_val_V_ce1_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            line_buff_group_2_val_V_ce1 <= ap_const_logic_1;
        else 
            line_buff_group_2_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buff_group_2_val_V_d1 <= inStream_TDATA_int_regslice(47 downto 32);

    line_buff_group_2_val_V_we1_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln15_reg_1450_pp0_iter4_reg, select_ln21_1_reg_1531_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln21_1_reg_1531_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln15_reg_1450_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            line_buff_group_2_val_V_we1 <= ap_const_logic_1;
        else 
            line_buff_group_2_val_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buff_group_3_val_V_address0 <= zext_ln908_1_fu_1179_p1(7 - 1 downto 0);
    line_buff_group_3_val_V_address1 <= zext_ln908_1_fu_1179_p1(7 - 1 downto 0);

    line_buff_group_3_val_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            line_buff_group_3_val_V_ce0 <= ap_const_logic_1;
        else 
            line_buff_group_3_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buff_group_3_val_V_ce1_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            line_buff_group_3_val_V_ce1 <= ap_const_logic_1;
        else 
            line_buff_group_3_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buff_group_3_val_V_d1 <= inStream_TDATA_int_regslice(63 downto 48);

    line_buff_group_3_val_V_we1_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln15_reg_1450_pp0_iter4_reg, select_ln21_1_reg_1531_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln21_1_reg_1531_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln15_reg_1450_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            line_buff_group_3_val_V_we1 <= ap_const_logic_1;
        else 
            line_buff_group_3_val_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln14_1_fu_913_p2 <= (icmp_ln17_reg_1454_pp0_iter1_reg or cmp96_not_reg_1496);
    or_ln14_2_fu_922_p2 <= (icmp_ln17_reg_1454_pp0_iter1_reg or brmerge456_fu_868_p2);
    or_ln14_fu_908_p2 <= (tmp1_fu_841_p2 or icmp_ln17_reg_1454_pp0_iter1_reg);
    or_ln17_1_fu_981_p2 <= (or_ln14_1_fu_913_p2 or and_ln14_4_reg_1479_pp0_iter1_reg);
    or_ln17_2_fu_993_p2 <= (or_ln14_2_fu_922_p2 or and_ln14_4_reg_1479_pp0_iter1_reg);
    or_ln17_3_fu_752_p2 <= (xor_ln17_fu_747_p2 or icmp_ln17_reg_1454);
    or_ln17_fu_673_p2 <= (icmp_ln17_fu_649_p2 or and_ln14_4_fu_667_p2);
    or_ln19_1_fu_1036_p2 <= (or_ln17_2_fu_993_p2 or and_ln17_1_reg_1507);
    or_ln19_2_fu_779_p2 <= (or_ln19_fu_774_p2 or icmp_ln17_reg_1454);
    or_ln19_fu_774_p2 <= (and_ln17_1_fu_762_p2 or and_ln14_4_reg_1479);
    or_ln21_1_fu_1063_p2 <= (or_ln21_fu_1058_p2 or or_ln17_reg_1490_pp0_iter1_reg);
    or_ln21_fu_1058_p2 <= (and_ln19_fu_1046_p2 or and_ln17_1_reg_1507);

    outStream_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_block_pp0_stage0, outStream_TREADY_int_regslice)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)))) then 
            outStream_TDATA_blk_n <= outStream_TREADY_int_regslice;
        else 
            outStream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    outStream_TDATA_int_regslice <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_1314_p14),112));
    outStream_TVALID <= regslice_both_outStream_U_vld_out;

    outStream_TVALID_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            outStream_TVALID_int_regslice <= ap_const_logic_1;
        else 
            outStream_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    p_mid1_fu_1080_p2 <= (trunc_ln21_1_fu_1076_p1 or select_ln17_1_fu_955_p3);
    row_idx_3_fu_877_p2 <= std_logic_vector(unsigned(row_idx_fu_194) + unsigned(ap_const_lv4_1));
    row_stride_3_fu_945_p2 <= std_logic_vector(unsigned(select_ln14_fu_883_p3) + unsigned(ap_const_lv2_1));
    select_ln14_1_fu_896_p3 <= 
        cmp92_not_mid1_fu_890_p2 when (icmp_ln17_reg_1454_pp0_iter1_reg(0) = '1') else 
        cmp92_not_fu_825_p2;
    select_ln14_fu_883_p3 <= 
        ap_const_lv2_0 when (icmp_ln17_reg_1454_pp0_iter1_reg(0) = '1') else 
        row_stride_fu_186;
    select_ln15_fu_938_p3 <= 
        row_idx_3_fu_877_p2 when (icmp_ln17_reg_1454_pp0_iter1_reg(0) = '1') else 
        row_idx_fu_194;
    select_ln17_1_fu_955_p3 <= 
        trunc_ln17_1_fu_951_p1 when (and_ln14_4_reg_1479_pp0_iter1_reg(0) = '1') else 
        and_ln14_fu_903_p2;
    select_ln17_2_fu_974_p3 <= 
        tmp1_mid1_fu_968_p2 when (and_ln14_4_reg_1479_pp0_iter1_reg(0) = '1') else 
        or_ln14_fu_908_p2;
    select_ln17_3_fu_986_p3 <= 
        trunc_ln17_1_fu_951_p1 when (and_ln14_4_reg_1479_pp0_iter1_reg(0) = '1') else 
        and_ln14_1_fu_917_p2;
    select_ln17_4_fu_1003_p3 <= 
        row_stride_3_fu_945_p2 when (and_ln14_4_reg_1479_pp0_iter1_reg(0) = '1') else 
        select_ln14_fu_883_p3;
    select_ln17_5_fu_699_p3 <= 
        ap_const_lv10_1 when (icmp_ln17_fu_649_p2(0) = '1') else 
        add_ln17_1_fu_693_p2;
    select_ln17_fu_740_p3 <= 
        ap_const_lv4_0 when (or_ln17_reg_1490(0) = '1') else 
        col_idx_fu_178;
    select_ln19_1_fu_784_p3 <= 
        add_ln19_fu_768_p2 when (and_ln17_1_fu_762_p2(0) = '1') else 
        select_ln17_fu_740_p3;
    select_ln19_2_fu_1022_p3 <= 
        cmp96_not_mid1_fu_1017_p2 when (and_ln17_1_reg_1507(0) = '1') else 
        or_ln17_1_fu_981_p2;
    select_ln19_3_fu_1029_p3 <= 
        select_ln17_1_fu_955_p3 when (and_ln17_1_reg_1507(0) = '1') else 
        select_ln17_3_fu_986_p3;
    select_ln19_4_fu_685_p3 <= 
        ap_const_lv9_1 when (or_ln17_fu_673_p2(0) = '1') else 
        add_ln19_1_fu_679_p2;
    select_ln19_fu_1010_p3 <= 
        ap_const_lv2_0 when (or_ln19_2_reg_1521(0) = '1') else 
        col_stride_fu_170;
    select_ln21_1_fu_1086_p3 <= 
        p_mid1_fu_1080_p2 when (and_ln19_fu_1046_p2(0) = '1') else 
        select_ln19_3_fu_1029_p3;
    select_ln21_2_fu_1112_p3 <= 
        brmerge456_mid1_fu_1106_p2 when (and_ln19_fu_1046_p2(0) = '1') else 
        or_ln19_1_fu_1036_p2;
    select_ln21_3_fu_1126_p3 <= 
        col_stride_3_fu_1052_p2 when (and_ln19_fu_1046_p2(0) = '1') else 
        select_ln19_fu_1010_p3;
    select_ln21_4_fu_798_p3 <= 
        ap_const_lv6_1 when (or_ln19_2_fu_779_p2(0) = '1') else 
        add_ln21_1_fu_792_p2;
    select_ln21_fu_1068_p3 <= 
        ap_const_lv4_0 when (or_ln21_1_fu_1063_p2(0) = '1') else 
        input_ch_idx_fu_166;
    tmp1_fu_841_p2 <= (cmp94_not_fu_835_p2 or cmp92_not_fu_825_p2);
    tmp1_mid1_fu_968_p2 <= (select_ln14_1_fu_896_p3 or cmp94_not_mid1_fu_962_p2);
    tmp2_fu_863_p2 <= (cmp98_not_fu_857_p2 or cmp96_not_reg_1496);
    tmp2_mid1_fu_1100_p2 <= (select_ln19_2_fu_1022_p3 or cmp98_not_mid1_fu_1094_p2);
    tmp_2_fu_1314_p14 <= ((((((((((((curr_input_dest_V_fu_202 & ap_const_lv3_0) & curr_input_id_V_fu_206) & ap_const_lv7_0) & curr_output_last_V_reg_1540_pp0_iter5_reg) & ap_const_lv6_0) & curr_input_user_V_fu_210) & curr_input_strb_V_fu_214) & curr_input_keep_V_fu_218) & ap_phi_mux_curr_output_data_sub_data_3_V_2_phi_fu_576_p4) & ap_phi_mux_curr_output_data_sub_data_2_V_2_phi_fu_566_p4) & ap_phi_mux_curr_output_data_sub_data_1_V_2_phi_fu_556_p4) & ap_phi_mux_curr_output_data_sub_data_0_V_2_phi_fu_546_p4);
    trunc_ln17_1_fu_951_p1 <= row_stride_3_fu_945_p2(1 - 1 downto 0);
    trunc_ln17_fu_831_p1 <= row_stride_fu_186(1 - 1 downto 0);
    trunc_ln21_1_fu_1076_p1 <= col_stride_3_fu_1052_p2(1 - 1 downto 0);
    trunc_ln21_fu_847_p1 <= col_stride_fu_170(1 - 1 downto 0);
    xor_ln14_fu_655_p2 <= (icmp_ln17_fu_649_p2 xor ap_const_lv1_1);
    xor_ln17_fu_747_p2 <= (icmp_ln19_reg_1474 xor ap_const_lv1_1);
    xor_ln19_fu_1041_p2 <= (ap_const_lv1_1 xor and_ln17_1_reg_1507);
    xor_ln21_fu_1120_p2 <= (select_ln21_2_fu_1112_p3 xor ap_const_lv1_1);
    zext_ln908_1_fu_1179_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1348_p3),64));
end behav;
