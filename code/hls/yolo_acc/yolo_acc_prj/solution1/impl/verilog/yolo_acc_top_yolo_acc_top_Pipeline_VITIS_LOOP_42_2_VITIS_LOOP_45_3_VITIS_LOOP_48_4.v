// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module yolo_acc_top_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        outStream_TREADY,
        sub_i_i,
        sub_i_i55,
        bound4,
        bound,
        cmp_i_i32_mid111,
        fold_input_ch,
        icmp_ln1027,
        inStream_a_TDATA,
        inStream_a_TVALID,
        inStream_a_TREADY,
        inStream_a_TKEEP,
        inStream_a_TSTRB,
        inStream_a_TUSER,
        inStream_a_TLAST,
        inStream_a_TID,
        inStream_a_TDEST,
        inStream_b_TDATA,
        inStream_b_TVALID,
        inStream_b_TREADY,
        inStream_b_TKEEP,
        inStream_b_TSTRB,
        inStream_b_TUSER,
        inStream_b_TLAST,
        inStream_b_TID,
        inStream_b_TDEST,
        kernel_bias_fp_V_address0,
        kernel_bias_fp_V_ce0,
        kernel_bias_fp_V_q0,
        kernel_bias_fp_V_address1,
        kernel_bias_fp_V_ce1,
        kernel_bias_fp_V_q1,
        bias_en,
        leaky,
        outStream_TDATA,
        outStream_TVALID,
        outStream_TKEEP,
        outStream_TSTRB,
        outStream_TUSER,
        outStream_TLAST,
        outStream_TID,
        outStream_TDEST
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   outStream_TREADY;
input  [9:0] sub_i_i;
input  [9:0] sub_i_i55;
input  [21:0] bound4;
input  [12:0] bound;
input  [0:0] cmp_i_i32_mid111;
input  [3:0] fold_input_ch;
input  [0:0] icmp_ln1027;
input  [63:0] inStream_a_TDATA;
input   inStream_a_TVALID;
output   inStream_a_TREADY;
input  [7:0] inStream_a_TKEEP;
input  [7:0] inStream_a_TSTRB;
input  [1:0] inStream_a_TUSER;
input  [0:0] inStream_a_TLAST;
input  [4:0] inStream_a_TID;
input  [5:0] inStream_a_TDEST;
input  [63:0] inStream_b_TDATA;
input   inStream_b_TVALID;
output   inStream_b_TREADY;
input  [7:0] inStream_b_TKEEP;
input  [7:0] inStream_b_TSTRB;
input  [1:0] inStream_b_TUSER;
input  [0:0] inStream_b_TLAST;
input  [4:0] inStream_b_TID;
input  [5:0] inStream_b_TDEST;
output  [4:0] kernel_bias_fp_V_address0;
output   kernel_bias_fp_V_ce0;
input  [15:0] kernel_bias_fp_V_q0;
output  [4:0] kernel_bias_fp_V_address1;
output   kernel_bias_fp_V_ce1;
input  [15:0] kernel_bias_fp_V_q1;
input  [0:0] bias_en;
input  [0:0] leaky;
output  [63:0] outStream_TDATA;
output   outStream_TVALID;
output  [7:0] outStream_TKEEP;
output  [7:0] outStream_TSTRB;
output  [1:0] outStream_TUSER;
output  [0:0] outStream_TLAST;
output  [4:0] outStream_TID;
output  [5:0] outStream_TDEST;

reg ap_idle;
reg inStream_a_TREADY;
reg inStream_b_TREADY;
reg[4:0] kernel_bias_fp_V_address0;
reg kernel_bias_fp_V_ce0;
reg[4:0] kernel_bias_fp_V_address1;
reg kernel_bias_fp_V_ce1;
reg outStream_TVALID;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_state6_pp0_stage1_iter2;
wire    ap_block_state8_pp0_stage1_iter3;
reg    ap_block_state10_pp0_stage1_iter4;
reg    ap_block_pp0_stage1_subdone;
wire   [0:0] icmp_ln1027_1_fu_392_p2;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    inStream_a_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln1027_1_reg_1113;
reg    inStream_b_TDATA_blk_n;
reg    outStream_TDATA_blk_n;
wire    ap_block_pp0_stage1;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state9_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
reg    ap_block_pp0_stage1_11001;
reg   [12:0] indvar_flatten_load_reg_1117;
wire   [0:0] icmp_ln1027_2_fu_409_p2;
reg   [0:0] icmp_ln1027_2_reg_1122;
wire   [0:0] select_ln42_3_fu_419_p3;
reg   [0:0] select_ln42_3_reg_1131;
wire   [3:0] select_ln45_fu_432_p3;
reg   [3:0] select_ln45_reg_1137;
wire   [4:0] shl_ln_fu_444_p3;
reg   [4:0] shl_ln_reg_1143;
reg   [7:0] tmp_keep_V_reg_1159;
reg   [7:0] tmp_keep_V_reg_1159_pp0_iter2_reg;
reg   [7:0] tmp_keep_V_reg_1159_pp0_iter3_reg;
reg   [7:0] tmp_keep_V_reg_1159_pp0_iter4_reg;
reg   [7:0] tmp_strb_V_reg_1164;
reg   [7:0] tmp_strb_V_reg_1164_pp0_iter2_reg;
reg   [7:0] tmp_strb_V_reg_1164_pp0_iter3_reg;
reg   [7:0] tmp_strb_V_reg_1164_pp0_iter4_reg;
reg   [1:0] tmp_user_V_reg_1169;
reg   [1:0] tmp_user_V_reg_1169_pp0_iter2_reg;
reg   [1:0] tmp_user_V_reg_1169_pp0_iter3_reg;
reg   [1:0] tmp_user_V_reg_1169_pp0_iter4_reg;
reg   [4:0] tmp_id_V_reg_1174;
reg   [4:0] tmp_id_V_reg_1174_pp0_iter2_reg;
reg   [4:0] tmp_id_V_reg_1174_pp0_iter3_reg;
reg   [4:0] tmp_id_V_reg_1174_pp0_iter4_reg;
reg   [5:0] tmp_dest_V_reg_1179;
reg   [5:0] tmp_dest_V_reg_1179_pp0_iter2_reg;
reg   [5:0] tmp_dest_V_reg_1179_pp0_iter3_reg;
reg   [5:0] tmp_dest_V_reg_1179_pp0_iter4_reg;
wire   [15:0] select_ln302_fu_726_p3;
reg   [15:0] select_ln302_reg_1184;
wire   [15:0] select_ln302_1_fu_796_p3;
reg   [15:0] select_ln302_1_reg_1189;
wire   [15:0] select_ln302_2_fu_866_p3;
reg   [15:0] select_ln302_2_reg_1194;
wire   [15:0] select_ln302_3_fu_936_p3;
reg   [15:0] select_ln302_3_reg_1199;
reg   [15:0] kernel_bias_fp_V_load_reg_1204;
reg   [15:0] kernel_bias_fp_V_load_1_reg_1209;
wire   [0:0] curr_output_last_V_fu_975_p2;
reg   [0:0] curr_output_last_V_reg_1224;
reg   [0:0] curr_output_last_V_reg_1224_pp0_iter2_reg;
reg   [0:0] curr_output_last_V_reg_1224_pp0_iter3_reg;
reg   [0:0] curr_output_last_V_reg_1224_pp0_iter4_reg;
reg   [15:0] kernel_bias_fp_V_load_2_reg_1229;
reg   [15:0] kernel_bias_fp_V_load_3_reg_1234;
wire   [15:0] grp_post_process_unit_fu_348_ap_return;
reg   [15:0] curr_output_data_sub_data_0_V_reg_1239;
wire   [15:0] grp_post_process_unit_fu_356_ap_return;
reg   [15:0] curr_output_data_sub_data_1_V_reg_1244;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter1_stage0;
reg   [15:0] grp_post_process_unit_fu_348_data_in;
reg   [15:0] grp_post_process_unit_fu_348_bias;
reg    grp_post_process_unit_fu_348_ap_ce;
wire    ap_block_state2_pp0_stage1_iter0_ignore_call90;
wire    ap_block_state4_pp0_stage1_iter1_ignore_call90;
wire    ap_block_state6_pp0_stage1_iter2_ignore_call90;
wire    ap_block_state8_pp0_stage1_iter3_ignore_call90;
reg    ap_block_state10_pp0_stage1_iter4_ignore_call90;
reg    ap_block_pp0_stage1_11001_ignoreCallOp164;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call90;
reg    ap_block_state3_pp0_stage0_iter1_ignore_call90;
wire    ap_block_state5_pp0_stage0_iter2_ignore_call90;
wire    ap_block_state7_pp0_stage0_iter3_ignore_call90;
wire    ap_block_state9_pp0_stage0_iter4_ignore_call90;
reg    ap_block_pp0_stage0_11001_ignoreCallOp168;
reg   [15:0] grp_post_process_unit_fu_356_data_in;
reg   [15:0] grp_post_process_unit_fu_356_bias;
reg    grp_post_process_unit_fu_356_ap_ce;
wire    ap_block_state2_pp0_stage1_iter0_ignore_call95;
wire    ap_block_state4_pp0_stage1_iter1_ignore_call95;
wire    ap_block_state6_pp0_stage1_iter2_ignore_call95;
wire    ap_block_state8_pp0_stage1_iter3_ignore_call95;
reg    ap_block_state10_pp0_stage1_iter4_ignore_call95;
reg    ap_block_pp0_stage1_11001_ignoreCallOp165;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call95;
reg    ap_block_state3_pp0_stage0_iter1_ignore_call95;
wire    ap_block_state5_pp0_stage0_iter2_ignore_call95;
wire    ap_block_state7_pp0_stage0_iter3_ignore_call95;
wire    ap_block_state9_pp0_stage0_iter4_ignore_call95;
reg    ap_block_pp0_stage0_11001_ignoreCallOp169;
wire   [63:0] zext_ln65_fu_452_p1;
wire   [63:0] zext_ln66_fu_463_p1;
wire   [63:0] zext_ln67_fu_949_p1;
wire   [63:0] zext_ln68_fu_959_p1;
reg   [3:0] input_ch_idx_fu_172;
wire   [3:0] add_ln48_fu_981_p2;
wire    ap_loop_init;
reg   [8:0] col_idx_fu_176;
wire   [8:0] select_ln1027_1_fu_561_p3;
reg   [12:0] indvar_flatten_fu_180;
wire   [12:0] select_ln1027_2_fu_991_p3;
reg   [8:0] row_idx_fu_184;
wire   [8:0] select_ln1027_fu_532_p3;
reg   [21:0] indvar_flatten15_fu_188;
wire   [21:0] add_ln1027_1_fu_397_p2;
reg    ap_block_pp0_stage1_01001;
wire   [0:0] icmp_ln1027_3_fu_414_p2;
wire   [0:0] or_ln45_fu_426_p2;
wire   [2:0] trunc_ln65_fu_440_p1;
wire   [4:0] or_ln66_fu_457_p2;
wire   [9:0] row_idx_cast_fu_479_p1;
wire   [9:0] col_idx_cast_fu_488_p1;
wire   [8:0] add_ln42_fu_504_p2;
wire   [9:0] row_idx_cast_mid1_fu_510_p1;
wire   [0:0] cmp_i_i_mid1_fu_514_p2;
wire   [0:0] cmp_i_i_fu_483_p2;
wire   [0:0] cmp_i_i32_fu_492_p2;
wire   [8:0] select_ln42_fu_497_p3;
wire   [8:0] col_idx_3_fu_539_p2;
wire   [9:0] col_idx_cast_mid1_fu_545_p1;
wire   [0:0] cmp_i_i32_mid1_fu_549_p2;
wire   [0:0] select_ln42_2_fu_526_p3;
wire  signed [15:0] tmp_data_sub_data_0_V_1_fu_592_p1;
wire  signed [15:0] tmp_data_sub_data_0_V_2_fu_630_p1;
wire  signed [16:0] sext_ln813_1_fu_668_p1;
wire  signed [16:0] sext_ln813_fu_664_p1;
wire   [16:0] ret_V_fu_672_p2;
wire   [15:0] p_Val2_1_fu_686_p2;
wire   [0:0] p_Result_s_fu_678_p3;
wire   [0:0] p_Result_1_fu_692_p3;
wire   [0:0] xor_ln895_fu_700_p2;
wire   [0:0] overflow_fu_706_p2;
wire   [0:0] xor_ln302_fu_712_p2;
wire   [15:0] select_ln346_fu_718_p3;
wire  signed [15:0] tmp_data_sub_data_1_V_1_fu_596_p4;
wire  signed [15:0] tmp_data_sub_data_1_V_2_fu_634_p4;
wire  signed [16:0] sext_ln813_3_fu_738_p1;
wire  signed [16:0] sext_ln813_2_fu_734_p1;
wire   [16:0] ret_V_1_fu_742_p2;
wire   [15:0] p_Val2_3_fu_756_p2;
wire   [0:0] p_Result_2_fu_748_p3;
wire   [0:0] p_Result_3_fu_762_p3;
wire   [0:0] xor_ln895_1_fu_770_p2;
wire   [0:0] overflow_1_fu_776_p2;
wire   [0:0] xor_ln302_1_fu_782_p2;
wire   [15:0] select_ln346_1_fu_788_p3;
wire  signed [15:0] tmp_data_sub_data_2_V_1_fu_606_p4;
wire  signed [15:0] tmp_data_sub_data_2_V_2_fu_644_p4;
wire  signed [16:0] sext_ln813_5_fu_808_p1;
wire  signed [16:0] sext_ln813_4_fu_804_p1;
wire   [16:0] ret_V_2_fu_812_p2;
wire   [15:0] p_Val2_5_fu_826_p2;
wire   [0:0] p_Result_4_fu_818_p3;
wire   [0:0] p_Result_5_fu_832_p3;
wire   [0:0] xor_ln895_2_fu_840_p2;
wire   [0:0] overflow_2_fu_846_p2;
wire   [0:0] xor_ln302_2_fu_852_p2;
wire   [15:0] select_ln346_2_fu_858_p3;
wire  signed [15:0] tmp_data_sub_data_3_V_1_fu_616_p4;
wire  signed [15:0] tmp_data_sub_data_3_V_2_fu_654_p4;
wire  signed [16:0] sext_ln813_7_fu_878_p1;
wire  signed [16:0] sext_ln813_6_fu_874_p1;
wire   [16:0] ret_V_3_fu_882_p2;
wire   [15:0] p_Val2_7_fu_896_p2;
wire   [0:0] p_Result_6_fu_888_p3;
wire   [0:0] p_Result_7_fu_902_p3;
wire   [0:0] xor_ln895_3_fu_910_p2;
wire   [0:0] overflow_3_fu_916_p2;
wire   [0:0] xor_ln302_3_fu_922_p2;
wire   [15:0] select_ln346_3_fu_928_p3;
wire   [4:0] or_ln67_fu_944_p2;
wire   [4:0] or_ln68_fu_954_p2;
wire   [0:0] select_ln42_1_fu_519_p3;
wire   [0:0] icmp_ln75_fu_964_p2;
wire   [0:0] and_ln76_fu_969_p2;
wire   [0:0] select_ln45_1_fu_554_p3;
wire   [12:0] add_ln1027_fu_986_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to4;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

yolo_acc_top_post_process_unit grp_post_process_unit_fu_348(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_post_process_unit_fu_348_data_in),
    .bias(grp_post_process_unit_fu_348_bias),
    .bias_en(bias_en),
    .leaky(leaky),
    .ap_return(grp_post_process_unit_fu_348_ap_return),
    .ap_ce(grp_post_process_unit_fu_348_ap_ce)
);

yolo_acc_top_post_process_unit grp_post_process_unit_fu_356(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_post_process_unit_fu_356_data_in),
    .bias(grp_post_process_unit_fu_356_bias),
    .bias_en(bias_en),
    .leaky(leaky),
    .ap_return(grp_post_process_unit_fu_356_ap_return),
    .ap_ce(grp_post_process_unit_fu_356_ap_ce)
);

yolo_acc_top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            col_idx_fu_176 <= 9'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1027_1_reg_1113 == 1'd0))) begin
            col_idx_fu_176 <= select_ln1027_1_fu_561_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten15_fu_188 <= 22'd0;
    end else if (((icmp_ln1027_1_fu_392_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        indvar_flatten15_fu_188 <= add_ln1027_1_fu_397_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_180 <= 13'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1027_1_reg_1113 == 1'd0))) begin
            indvar_flatten_fu_180 <= select_ln1027_2_fu_991_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            input_ch_idx_fu_172 <= 4'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1027_1_reg_1113 == 1'd0))) begin
            input_ch_idx_fu_172 <= add_ln48_fu_981_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            row_idx_fu_184 <= 9'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1027_1_reg_1113 == 1'd0))) begin
            row_idx_fu_184 <= select_ln1027_fu_532_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        icmp_ln1027_1_reg_1113 <= icmp_ln1027_1_fu_392_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        curr_output_data_sub_data_0_V_reg_1239 <= grp_post_process_unit_fu_348_ap_return;
        curr_output_data_sub_data_1_V_reg_1244 <= grp_post_process_unit_fu_356_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_1_reg_1113 == 1'd0))) begin
        curr_output_last_V_reg_1224 <= curr_output_last_V_fu_975_p2;
        select_ln302_1_reg_1189 <= select_ln302_1_fu_796_p3;
        select_ln302_2_reg_1194 <= select_ln302_2_fu_866_p3;
        select_ln302_3_reg_1199 <= select_ln302_3_fu_936_p3;
        select_ln302_reg_1184 <= select_ln302_fu_726_p3;
        tmp_dest_V_reg_1179 <= inStream_a_TDEST;
        tmp_id_V_reg_1174 <= inStream_a_TID;
        tmp_keep_V_reg_1159 <= inStream_a_TKEEP;
        tmp_strb_V_reg_1164 <= inStream_a_TSTRB;
        tmp_user_V_reg_1169 <= inStream_a_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        curr_output_last_V_reg_1224_pp0_iter2_reg <= curr_output_last_V_reg_1224;
        curr_output_last_V_reg_1224_pp0_iter3_reg <= curr_output_last_V_reg_1224_pp0_iter2_reg;
        curr_output_last_V_reg_1224_pp0_iter4_reg <= curr_output_last_V_reg_1224_pp0_iter3_reg;
        tmp_dest_V_reg_1179_pp0_iter2_reg <= tmp_dest_V_reg_1179;
        tmp_dest_V_reg_1179_pp0_iter3_reg <= tmp_dest_V_reg_1179_pp0_iter2_reg;
        tmp_dest_V_reg_1179_pp0_iter4_reg <= tmp_dest_V_reg_1179_pp0_iter3_reg;
        tmp_id_V_reg_1174_pp0_iter2_reg <= tmp_id_V_reg_1174;
        tmp_id_V_reg_1174_pp0_iter3_reg <= tmp_id_V_reg_1174_pp0_iter2_reg;
        tmp_id_V_reg_1174_pp0_iter4_reg <= tmp_id_V_reg_1174_pp0_iter3_reg;
        tmp_keep_V_reg_1159_pp0_iter2_reg <= tmp_keep_V_reg_1159;
        tmp_keep_V_reg_1159_pp0_iter3_reg <= tmp_keep_V_reg_1159_pp0_iter2_reg;
        tmp_keep_V_reg_1159_pp0_iter4_reg <= tmp_keep_V_reg_1159_pp0_iter3_reg;
        tmp_strb_V_reg_1164_pp0_iter2_reg <= tmp_strb_V_reg_1164;
        tmp_strb_V_reg_1164_pp0_iter3_reg <= tmp_strb_V_reg_1164_pp0_iter2_reg;
        tmp_strb_V_reg_1164_pp0_iter4_reg <= tmp_strb_V_reg_1164_pp0_iter3_reg;
        tmp_user_V_reg_1169_pp0_iter2_reg <= tmp_user_V_reg_1169;
        tmp_user_V_reg_1169_pp0_iter3_reg <= tmp_user_V_reg_1169_pp0_iter2_reg;
        tmp_user_V_reg_1169_pp0_iter4_reg <= tmp_user_V_reg_1169_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_1_fu_392_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln1027_2_reg_1122 <= icmp_ln1027_2_fu_409_p2;
        indvar_flatten_load_reg_1117 <= indvar_flatten_fu_180;
        select_ln42_3_reg_1131 <= select_ln42_3_fu_419_p3;
        select_ln45_reg_1137 <= select_ln45_fu_432_p3;
        shl_ln_reg_1143[4 : 2] <= shl_ln_fu_444_p3[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_1_reg_1113 == 1'd0))) begin
        kernel_bias_fp_V_load_1_reg_1209 <= kernel_bias_fp_V_q0;
        kernel_bias_fp_V_load_reg_1204 <= kernel_bias_fp_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        kernel_bias_fp_V_load_2_reg_1229 <= kernel_bias_fp_V_q1;
        kernel_bias_fp_V_load_3_reg_1234 <= kernel_bias_fp_V_q0;
    end
end

always @ (*) begin
    if (((icmp_ln1027_1_fu_392_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_1_reg_1113 == 1'd1))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to4 = 1'b1;
    end else begin
        ap_idle_pp0_1to4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp168) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp164) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_post_process_unit_fu_348_ap_ce = 1'b1;
    end else begin
        grp_post_process_unit_fu_348_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_post_process_unit_fu_348_bias = kernel_bias_fp_V_load_2_reg_1229;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_post_process_unit_fu_348_bias = kernel_bias_fp_V_load_reg_1204;
    end else begin
        grp_post_process_unit_fu_348_bias = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_post_process_unit_fu_348_data_in = select_ln302_2_reg_1194;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_post_process_unit_fu_348_data_in = select_ln302_reg_1184;
    end else begin
        grp_post_process_unit_fu_348_data_in = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp169) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp165) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_post_process_unit_fu_356_ap_ce = 1'b1;
    end else begin
        grp_post_process_unit_fu_356_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_post_process_unit_fu_356_bias = kernel_bias_fp_V_load_3_reg_1234;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_post_process_unit_fu_356_bias = kernel_bias_fp_V_load_1_reg_1209;
    end else begin
        grp_post_process_unit_fu_356_bias = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_post_process_unit_fu_356_data_in = select_ln302_3_reg_1199;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_post_process_unit_fu_356_data_in = select_ln302_1_reg_1189;
    end else begin
        grp_post_process_unit_fu_356_data_in = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_1_reg_1113 == 1'd0))) begin
        inStream_a_TDATA_blk_n = inStream_a_TVALID;
    end else begin
        inStream_a_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_1_reg_1113 == 1'd0))) begin
        inStream_a_TREADY = 1'b1;
    end else begin
        inStream_a_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_1_reg_1113 == 1'd0))) begin
        inStream_b_TDATA_blk_n = inStream_b_TVALID;
    end else begin
        inStream_b_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_1_reg_1113 == 1'd0))) begin
        inStream_b_TREADY = 1'b1;
    end else begin
        inStream_b_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_bias_fp_V_address0 = zext_ln68_fu_959_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        kernel_bias_fp_V_address0 = zext_ln66_fu_463_p1;
    end else begin
        kernel_bias_fp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_bias_fp_V_address1 = zext_ln67_fu_949_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        kernel_bias_fp_V_address1 = zext_ln65_fu_452_p1;
    end else begin
        kernel_bias_fp_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        kernel_bias_fp_V_ce0 = 1'b1;
    end else begin
        kernel_bias_fp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        kernel_bias_fp_V_ce1 = 1'b1;
    end else begin
        kernel_bias_fp_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        outStream_TDATA_blk_n = outStream_TREADY;
    end else begin
        outStream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        outStream_TVALID = 1'b1;
    end else begin
        outStream_TVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to4 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1027_1_fu_397_p2 = (indvar_flatten15_fu_188 + 22'd1);

assign add_ln1027_fu_986_p2 = (indvar_flatten_load_reg_1117 + 13'd1);

assign add_ln42_fu_504_p2 = (row_idx_fu_184 + 9'd1);

assign add_ln48_fu_981_p2 = (select_ln45_reg_1137 + 4'd1);

assign and_ln76_fu_969_p2 = (select_ln42_1_fu_519_p3 & icmp_ln75_fu_964_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((inStream_b_TVALID == 1'b0) & (icmp_ln1027_1_reg_1113 == 1'd0)) | ((inStream_a_TVALID == 1'b0) & (icmp_ln1027_1_reg_1113 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp168 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((inStream_b_TVALID == 1'b0) & (icmp_ln1027_1_reg_1113 == 1'd0)) | ((inStream_a_TVALID == 1'b0) & (icmp_ln1027_1_reg_1113 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp169 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((inStream_b_TVALID == 1'b0) & (icmp_ln1027_1_reg_1113 == 1'd0)) | ((inStream_a_TVALID == 1'b0) & (icmp_ln1027_1_reg_1113 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((inStream_b_TVALID == 1'b0) & (icmp_ln1027_1_reg_1113 == 1'd0)) | ((inStream_a_TVALID == 1'b0) & (icmp_ln1027_1_reg_1113 == 1'd0))));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((outStream_TREADY == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((outStream_TREADY == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_ignoreCallOp164 = ((outStream_TREADY == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_ignoreCallOp165 = ((outStream_TREADY == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((outStream_TREADY == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_state10_pp0_stage1_iter4 = (outStream_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state10_pp0_stage1_iter4_ignore_call90 = (outStream_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state10_pp0_stage1_iter4_ignore_call95 = (outStream_TREADY == 1'b0);
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call90 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call95 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0_ignore_call90 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0_ignore_call95 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (((inStream_b_TVALID == 1'b0) & (icmp_ln1027_1_reg_1113 == 1'd0)) | ((inStream_a_TVALID == 1'b0) & (icmp_ln1027_1_reg_1113 == 1'd0)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1_ignore_call90 = (((inStream_b_TVALID == 1'b0) & (icmp_ln1027_1_reg_1113 == 1'd0)) | ((inStream_a_TVALID == 1'b0) & (icmp_ln1027_1_reg_1113 == 1'd0)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1_ignore_call95 = (((inStream_b_TVALID == 1'b0) & (icmp_ln1027_1_reg_1113 == 1'd0)) | ((inStream_a_TVALID == 1'b0) & (icmp_ln1027_1_reg_1113 == 1'd0)));
end

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1_ignore_call90 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1_ignore_call95 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2_ignore_call90 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2_ignore_call95 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2_ignore_call90 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2_ignore_call95 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3_ignore_call90 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3_ignore_call95 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3_ignore_call90 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3_ignore_call95 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4_ignore_call90 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4_ignore_call95 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign cmp_i_i32_fu_492_p2 = ((sub_i_i55 == col_idx_cast_fu_488_p1) ? 1'b1 : 1'b0);

assign cmp_i_i32_mid1_fu_549_p2 = ((sub_i_i55 == col_idx_cast_mid1_fu_545_p1) ? 1'b1 : 1'b0);

assign cmp_i_i_fu_483_p2 = ((sub_i_i == row_idx_cast_fu_479_p1) ? 1'b1 : 1'b0);

assign cmp_i_i_mid1_fu_514_p2 = ((sub_i_i == row_idx_cast_mid1_fu_510_p1) ? 1'b1 : 1'b0);

assign col_idx_3_fu_539_p2 = (select_ln42_fu_497_p3 + 9'd1);

assign col_idx_cast_fu_488_p1 = col_idx_fu_176;

assign col_idx_cast_mid1_fu_545_p1 = col_idx_3_fu_539_p2;

assign curr_output_last_V_fu_975_p2 = (select_ln45_1_fu_554_p3 & and_ln76_fu_969_p2);

assign icmp_ln1027_1_fu_392_p2 = ((indvar_flatten15_fu_188 == bound4) ? 1'b1 : 1'b0);

assign icmp_ln1027_2_fu_409_p2 = ((indvar_flatten_fu_180 == bound) ? 1'b1 : 1'b0);

assign icmp_ln1027_3_fu_414_p2 = ((input_ch_idx_fu_172 == fold_input_ch) ? 1'b1 : 1'b0);

assign icmp_ln75_fu_964_p2 = ((select_ln45_reg_1137 == 4'd7) ? 1'b1 : 1'b0);

assign or_ln45_fu_426_p2 = (select_ln42_3_fu_419_p3 | icmp_ln1027_2_fu_409_p2);

assign or_ln66_fu_457_p2 = (shl_ln_fu_444_p3 | 5'd1);

assign or_ln67_fu_944_p2 = (shl_ln_reg_1143 | 5'd2);

assign or_ln68_fu_954_p2 = (shl_ln_reg_1143 | 5'd3);

assign outStream_TDATA = {{{{grp_post_process_unit_fu_356_ap_return}, {grp_post_process_unit_fu_348_ap_return}}, {curr_output_data_sub_data_1_V_reg_1244}}, {curr_output_data_sub_data_0_V_reg_1239}};

assign outStream_TDEST = tmp_dest_V_reg_1179_pp0_iter4_reg;

assign outStream_TID = tmp_id_V_reg_1174_pp0_iter4_reg;

assign outStream_TKEEP = tmp_keep_V_reg_1159_pp0_iter4_reg;

assign outStream_TLAST = curr_output_last_V_reg_1224_pp0_iter4_reg;

assign outStream_TSTRB = tmp_strb_V_reg_1164_pp0_iter4_reg;

assign outStream_TUSER = tmp_user_V_reg_1169_pp0_iter4_reg;

assign overflow_1_fu_776_p2 = (xor_ln895_1_fu_770_p2 & p_Result_3_fu_762_p3);

assign overflow_2_fu_846_p2 = (xor_ln895_2_fu_840_p2 & p_Result_5_fu_832_p3);

assign overflow_3_fu_916_p2 = (xor_ln895_3_fu_910_p2 & p_Result_7_fu_902_p3);

assign overflow_fu_706_p2 = (xor_ln895_fu_700_p2 & p_Result_1_fu_692_p3);

assign p_Result_1_fu_692_p3 = p_Val2_1_fu_686_p2[32'd15];

assign p_Result_2_fu_748_p3 = ret_V_1_fu_742_p2[32'd16];

assign p_Result_3_fu_762_p3 = p_Val2_3_fu_756_p2[32'd15];

assign p_Result_4_fu_818_p3 = ret_V_2_fu_812_p2[32'd16];

assign p_Result_5_fu_832_p3 = p_Val2_5_fu_826_p2[32'd15];

assign p_Result_6_fu_888_p3 = ret_V_3_fu_882_p2[32'd16];

assign p_Result_7_fu_902_p3 = p_Val2_7_fu_896_p2[32'd15];

assign p_Result_s_fu_678_p3 = ret_V_fu_672_p2[32'd16];

assign p_Val2_1_fu_686_p2 = ($signed(tmp_data_sub_data_0_V_2_fu_630_p1) + $signed(tmp_data_sub_data_0_V_1_fu_592_p1));

assign p_Val2_3_fu_756_p2 = ($signed(tmp_data_sub_data_1_V_2_fu_634_p4) + $signed(tmp_data_sub_data_1_V_1_fu_596_p4));

assign p_Val2_5_fu_826_p2 = ($signed(tmp_data_sub_data_2_V_2_fu_644_p4) + $signed(tmp_data_sub_data_2_V_1_fu_606_p4));

assign p_Val2_7_fu_896_p2 = ($signed(tmp_data_sub_data_3_V_2_fu_654_p4) + $signed(tmp_data_sub_data_3_V_1_fu_616_p4));

assign ret_V_1_fu_742_p2 = ($signed(sext_ln813_3_fu_738_p1) + $signed(sext_ln813_2_fu_734_p1));

assign ret_V_2_fu_812_p2 = ($signed(sext_ln813_5_fu_808_p1) + $signed(sext_ln813_4_fu_804_p1));

assign ret_V_3_fu_882_p2 = ($signed(sext_ln813_7_fu_878_p1) + $signed(sext_ln813_6_fu_874_p1));

assign ret_V_fu_672_p2 = ($signed(sext_ln813_1_fu_668_p1) + $signed(sext_ln813_fu_664_p1));

assign row_idx_cast_fu_479_p1 = row_idx_fu_184;

assign row_idx_cast_mid1_fu_510_p1 = add_ln42_fu_504_p2;

assign select_ln1027_1_fu_561_p3 = ((select_ln42_3_reg_1131[0:0] == 1'b1) ? col_idx_3_fu_539_p2 : select_ln42_fu_497_p3);

assign select_ln1027_2_fu_991_p3 = ((icmp_ln1027_2_reg_1122[0:0] == 1'b1) ? 13'd1 : add_ln1027_fu_986_p2);

assign select_ln1027_fu_532_p3 = ((icmp_ln1027_2_reg_1122[0:0] == 1'b1) ? add_ln42_fu_504_p2 : row_idx_fu_184);

assign select_ln302_1_fu_796_p3 = ((xor_ln302_1_fu_782_p2[0:0] == 1'b1) ? select_ln346_1_fu_788_p3 : p_Val2_3_fu_756_p2);

assign select_ln302_2_fu_866_p3 = ((xor_ln302_2_fu_852_p2[0:0] == 1'b1) ? select_ln346_2_fu_858_p3 : p_Val2_5_fu_826_p2);

assign select_ln302_3_fu_936_p3 = ((xor_ln302_3_fu_922_p2[0:0] == 1'b1) ? select_ln346_3_fu_928_p3 : p_Val2_7_fu_896_p2);

assign select_ln302_fu_726_p3 = ((xor_ln302_fu_712_p2[0:0] == 1'b1) ? select_ln346_fu_718_p3 : p_Val2_1_fu_686_p2);

assign select_ln346_1_fu_788_p3 = ((overflow_1_fu_776_p2[0:0] == 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln346_2_fu_858_p3 = ((overflow_2_fu_846_p2[0:0] == 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln346_3_fu_928_p3 = ((overflow_3_fu_916_p2[0:0] == 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln346_fu_718_p3 = ((overflow_fu_706_p2[0:0] == 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln42_1_fu_519_p3 = ((icmp_ln1027_2_reg_1122[0:0] == 1'b1) ? cmp_i_i_mid1_fu_514_p2 : cmp_i_i_fu_483_p2);

assign select_ln42_2_fu_526_p3 = ((icmp_ln1027_2_reg_1122[0:0] == 1'b1) ? cmp_i_i32_mid111 : cmp_i_i32_fu_492_p2);

assign select_ln42_3_fu_419_p3 = ((icmp_ln1027_2_fu_409_p2[0:0] == 1'b1) ? icmp_ln1027 : icmp_ln1027_3_fu_414_p2);

assign select_ln42_fu_497_p3 = ((icmp_ln1027_2_reg_1122[0:0] == 1'b1) ? 9'd0 : col_idx_fu_176);

assign select_ln45_1_fu_554_p3 = ((select_ln42_3_reg_1131[0:0] == 1'b1) ? cmp_i_i32_mid1_fu_549_p2 : select_ln42_2_fu_526_p3);

assign select_ln45_fu_432_p3 = ((or_ln45_fu_426_p2[0:0] == 1'b1) ? 4'd0 : input_ch_idx_fu_172);

assign sext_ln813_1_fu_668_p1 = tmp_data_sub_data_0_V_2_fu_630_p1;

assign sext_ln813_2_fu_734_p1 = tmp_data_sub_data_1_V_1_fu_596_p4;

assign sext_ln813_3_fu_738_p1 = tmp_data_sub_data_1_V_2_fu_634_p4;

assign sext_ln813_4_fu_804_p1 = tmp_data_sub_data_2_V_1_fu_606_p4;

assign sext_ln813_5_fu_808_p1 = tmp_data_sub_data_2_V_2_fu_644_p4;

assign sext_ln813_6_fu_874_p1 = tmp_data_sub_data_3_V_1_fu_616_p4;

assign sext_ln813_7_fu_878_p1 = tmp_data_sub_data_3_V_2_fu_654_p4;

assign sext_ln813_fu_664_p1 = tmp_data_sub_data_0_V_1_fu_592_p1;

assign shl_ln_fu_444_p3 = {{trunc_ln65_fu_440_p1}, {2'd0}};

assign tmp_data_sub_data_0_V_1_fu_592_p1 = inStream_a_TDATA[15:0];

assign tmp_data_sub_data_0_V_2_fu_630_p1 = inStream_b_TDATA[15:0];

assign tmp_data_sub_data_1_V_1_fu_596_p4 = {{inStream_a_TDATA[31:16]}};

assign tmp_data_sub_data_1_V_2_fu_634_p4 = {{inStream_b_TDATA[31:16]}};

assign tmp_data_sub_data_2_V_1_fu_606_p4 = {{inStream_a_TDATA[47:32]}};

assign tmp_data_sub_data_2_V_2_fu_644_p4 = {{inStream_b_TDATA[47:32]}};

assign tmp_data_sub_data_3_V_1_fu_616_p4 = {{inStream_a_TDATA[63:48]}};

assign tmp_data_sub_data_3_V_2_fu_654_p4 = {{inStream_b_TDATA[63:48]}};

assign trunc_ln65_fu_440_p1 = select_ln45_fu_432_p3[2:0];

assign xor_ln302_1_fu_782_p2 = (p_Result_3_fu_762_p3 ^ p_Result_2_fu_748_p3);

assign xor_ln302_2_fu_852_p2 = (p_Result_5_fu_832_p3 ^ p_Result_4_fu_818_p3);

assign xor_ln302_3_fu_922_p2 = (p_Result_7_fu_902_p3 ^ p_Result_6_fu_888_p3);

assign xor_ln302_fu_712_p2 = (p_Result_s_fu_678_p3 ^ p_Result_1_fu_692_p3);

assign xor_ln895_1_fu_770_p2 = (p_Result_2_fu_748_p3 ^ 1'd1);

assign xor_ln895_2_fu_840_p2 = (p_Result_4_fu_818_p3 ^ 1'd1);

assign xor_ln895_3_fu_910_p2 = (p_Result_6_fu_888_p3 ^ 1'd1);

assign xor_ln895_fu_700_p2 = (p_Result_s_fu_678_p3 ^ 1'd1);

assign zext_ln65_fu_452_p1 = shl_ln_fu_444_p3;

assign zext_ln66_fu_463_p1 = or_ln66_fu_457_p2;

assign zext_ln67_fu_949_p1 = or_ln67_fu_944_p2;

assign zext_ln68_fu_959_p1 = or_ln68_fu_954_p2;

always @ (posedge ap_clk) begin
    shl_ln_reg_1143[1:0] <= 2'b00;
end

endmodule //yolo_acc_top_yolo_acc_top_Pipeline_VITIS_LOOP_42_2_VITIS_LOOP_45_3_VITIS_LOOP_48_4
