// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module yolo_conv_top_post_process (
        ap_clk,
        ap_rst,
        sub0_val_output,
        sub1_val_output,
        sub2_val_output,
        sub3_val_output,
        input_ch_idx,
        val_output,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [31:0] sub0_val_output;
input  [31:0] sub1_val_output;
input  [31:0] sub2_val_output;
input  [31:0] sub3_val_output;
input  [3:0] input_ch_idx;
input  [31:0] val_output;
output  [31:0] ap_return;
input   ap_ce;

reg[31:0] ap_return;

reg   [31:0] sub0_val_output_read_reg_91;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [31:0] select_ln214_fu_62_p3;
reg   [31:0] select_ln214_reg_96;
wire   [31:0] add_ln813_9_fu_76_p2;
reg   [31:0] add_ln813_9_reg_101;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln214_fu_56_p2;
wire   [31:0] add_ln813_8_fu_70_p2;
wire   [31:0] add_ln813_fu_82_p2;
wire   [31:0] add_ln813_10_fu_86_p2;
reg    ap_ce_reg;
reg   [31:0] ap_return_int_reg;

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if (((1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln813_9_reg_101 <= add_ln813_9_fu_76_p2;
        select_ln214_reg_96 <= select_ln214_fu_62_p3;
        sub0_val_output_read_reg_91 <= sub0_val_output;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= add_ln813_10_fu_86_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = add_ln813_10_fu_86_p2;
    end else begin
        ap_return = 'bx;
    end
end

assign add_ln813_10_fu_86_p2 = (add_ln813_9_reg_101 + add_ln813_fu_82_p2);

assign add_ln813_8_fu_70_p2 = (sub2_val_output + sub3_val_output);

assign add_ln813_9_fu_76_p2 = (add_ln813_8_fu_70_p2 + sub1_val_output);

assign add_ln813_fu_82_p2 = (select_ln214_reg_96 + sub0_val_output_read_reg_91);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign icmp_ln214_fu_56_p2 = ((input_ch_idx == 4'd0) ? 1'b1 : 1'b0);

assign select_ln214_fu_62_p3 = ((icmp_ln214_fu_56_p2[0:0] == 1'b1) ? 32'd0 : val_output);

endmodule //yolo_conv_top_post_process
