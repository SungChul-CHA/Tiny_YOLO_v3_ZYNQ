-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity yolo_yolo_top_yolo_yolo_top_Pipeline_VITIS_LOOP_14_1_VITIS_LOOP_17_2_VITIS_LOOP_20_3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    sub_i_i : IN STD_LOGIC_VECTOR (5 downto 0);
    sub_i_i60 : IN STD_LOGIC_VECTOR (5 downto 0);
    mul_ln3 : IN STD_LOGIC_VECTOR (12 downto 0);
    outStream_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    outStream_TVALID : OUT STD_LOGIC;
    outStream_TREADY : IN STD_LOGIC;
    outStream_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
    outStream_TSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
    outStream_TUSER : OUT STD_LOGIC_VECTOR (1 downto 0);
    outStream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    outStream_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
    outStream_TDEST : OUT STD_LOGIC_VECTOR (5 downto 0);
    activate_en : IN STD_LOGIC_VECTOR (31 downto 0);
    zext_ln3 : IN STD_LOGIC_VECTOR (7 downto 0);
    cmp_i_i37_mid111 : IN STD_LOGIC_VECTOR (0 downto 0);
    inStream_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    inStream_TVALID : IN STD_LOGIC;
    inStream_TREADY : OUT STD_LOGIC;
    inStream_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
    inStream_TSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
    inStream_TUSER : IN STD_LOGIC_VECTOR (1 downto 0);
    inStream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    inStream_TID : IN STD_LOGIC_VECTOR (4 downto 0);
    inStream_TDEST : IN STD_LOGIC_VECTOR (5 downto 0);
    trunc_ln3 : IN STD_LOGIC_VECTOR (28 downto 0) );
end;


architecture behav of yolo_yolo_top_yolo_yolo_top_Pipeline_VITIS_LOOP_14_1_VITIS_LOOP_17_2_VITIS_LOOP_20_3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv29_1 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000001";
    constant ap_const_lv29_0 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state12_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state16_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state20_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state24_pp0_stage3_iter5 : BOOLEAN;
    signal ap_block_state28_pp0_stage3_iter6 : BOOLEAN;
    signal ap_block_state32_pp0_stage3_iter7 : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal icmp_ln1027_reg_824 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage3 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal outStream_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal inStream_TDATA_blk_n : STD_LOGIC;
    signal tmp_data_sub_data_0_V_reg_261 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_sub_data_1_V_reg_271 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal indvar_flatten_load_reg_819 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1027_fu_370_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_824_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_824_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_824_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_824_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_824_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_824_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_824_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_824_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1027_1_fu_376_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1027_1_reg_828 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln1027_1_fu_385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_1_reg_833 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln14_fu_403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln14_reg_842 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln17_fu_415_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln17_reg_848 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln_fu_427_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln_reg_854 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Result_s_fu_451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_861 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_861_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_861_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_861_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_861_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_861_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_861_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_861_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal curr_output_keep_V_reg_865 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state26_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state30_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state34_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal curr_output_keep_V_reg_865_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal curr_output_keep_V_reg_865_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal curr_output_keep_V_reg_865_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal curr_output_keep_V_reg_865_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal curr_output_keep_V_reg_865_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal curr_output_keep_V_reg_865_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal curr_output_keep_V_reg_865_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal curr_output_strb_V_reg_870 : STD_LOGIC_VECTOR (7 downto 0);
    signal curr_output_strb_V_reg_870_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal curr_output_strb_V_reg_870_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal curr_output_strb_V_reg_870_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal curr_output_strb_V_reg_870_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal curr_output_strb_V_reg_870_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal curr_output_strb_V_reg_870_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal curr_output_strb_V_reg_870_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal curr_output_user_V_reg_875 : STD_LOGIC_VECTOR (1 downto 0);
    signal curr_output_user_V_reg_875_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal curr_output_user_V_reg_875_pp0_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal curr_output_user_V_reg_875_pp0_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal curr_output_user_V_reg_875_pp0_iter4_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal curr_output_user_V_reg_875_pp0_iter5_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal curr_output_user_V_reg_875_pp0_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal curr_output_user_V_reg_875_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal curr_output_id_V_reg_880 : STD_LOGIC_VECTOR (4 downto 0);
    signal curr_output_id_V_reg_880_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal curr_output_id_V_reg_880_pp0_iter2_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal curr_output_id_V_reg_880_pp0_iter3_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal curr_output_id_V_reg_880_pp0_iter4_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal curr_output_id_V_reg_880_pp0_iter5_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal curr_output_id_V_reg_880_pp0_iter6_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal curr_output_id_V_reg_880_pp0_iter7_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal curr_output_dest_V_reg_885 : STD_LOGIC_VECTOR (5 downto 0);
    signal curr_output_dest_V_reg_885_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal curr_output_dest_V_reg_885_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal curr_output_dest_V_reg_885_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal curr_output_dest_V_reg_885_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal curr_output_dest_V_reg_885_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal curr_output_dest_V_reg_885_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal curr_output_dest_V_reg_885_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_data_sub_data_0_V_1_fu_576_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_sub_data_1_V_1_reg_896 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_sub_data_2_V_1_reg_902 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_sub_data_3_V_reg_908 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_1_fu_631_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_1_reg_914 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_1_reg_914_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_1_reg_914_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_1_reg_914_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_1_reg_914_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_1_reg_914_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_1_reg_914_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_1_reg_914_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal curr_output_last_V_fu_648_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal curr_output_last_V_reg_918 : STD_LOGIC_VECTOR (0 downto 0);
    signal curr_output_last_V_reg_918_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal curr_output_last_V_reg_918_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal curr_output_last_V_reg_918_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal curr_output_last_V_reg_918_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal curr_output_last_V_reg_918_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal curr_output_last_V_reg_918_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal curr_output_last_V_reg_918_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_fu_688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_reg_923 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state11_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state15_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state19_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state23_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state27_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_state31_pp0_stage2_iter7 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal p_Result_2_reg_923_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_reg_923_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_reg_923_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_reg_923_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_reg_923_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_reg_923_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_reg_923_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_3_fu_714_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_3_reg_927 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal p_Result_3_reg_927_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_3_reg_927_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_3_reg_927_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_3_reg_927_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_3_reg_927_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_3_reg_927_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_3_reg_927_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_logistic_activate_fu_299_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal grp_logistic_activate_fu_299_ap_start : STD_LOGIC;
    signal grp_logistic_activate_fu_299_ap_done : STD_LOGIC;
    signal grp_logistic_activate_fu_299_ap_idle : STD_LOGIC;
    signal grp_logistic_activate_fu_299_ap_ready : STD_LOGIC;
    signal grp_logistic_activate_fu_299_ap_ce : STD_LOGIC;
    signal grp_logistic_activate_fu_299_val_in : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_predicate_op114_call_state2 : BOOLEAN;
    signal ap_predicate_op128_call_state3 : BOOLEAN;
    signal ap_predicate_op137_call_state4 : BOOLEAN;
    signal ap_predicate_op152_call_state5 : BOOLEAN;
    signal ap_block_state2_pp0_stage1_iter0_ignore_call0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1_ignore_call0 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter2_ignore_call0 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter3_ignore_call0 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter4_ignore_call0 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter5_ignore_call0 : BOOLEAN;
    signal ap_block_state26_pp0_stage1_iter6_ignore_call0 : BOOLEAN;
    signal ap_block_state30_pp0_stage1_iter7_ignore_call0 : BOOLEAN;
    signal ap_block_state34_pp0_stage1_iter8_ignore_call0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp114 : BOOLEAN;
    signal ap_block_state3_pp0_stage2_iter0_ignore_call0 : BOOLEAN;
    signal ap_block_state7_pp0_stage2_iter1_ignore_call0 : BOOLEAN;
    signal ap_block_state11_pp0_stage2_iter2_ignore_call0 : BOOLEAN;
    signal ap_block_state15_pp0_stage2_iter3_ignore_call0 : BOOLEAN;
    signal ap_block_state19_pp0_stage2_iter4_ignore_call0 : BOOLEAN;
    signal ap_block_state23_pp0_stage2_iter5_ignore_call0 : BOOLEAN;
    signal ap_block_state27_pp0_stage2_iter6_ignore_call0 : BOOLEAN;
    signal ap_block_state31_pp0_stage2_iter7_ignore_call0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001_ignoreCallOp127 : BOOLEAN;
    signal ap_block_state4_pp0_stage3_iter0_ignore_call0 : BOOLEAN;
    signal ap_block_state8_pp0_stage3_iter1_ignore_call0 : BOOLEAN;
    signal ap_block_state12_pp0_stage3_iter2_ignore_call0 : BOOLEAN;
    signal ap_block_state16_pp0_stage3_iter3_ignore_call0 : BOOLEAN;
    signal ap_block_state20_pp0_stage3_iter4_ignore_call0 : BOOLEAN;
    signal ap_block_state24_pp0_stage3_iter5_ignore_call0 : BOOLEAN;
    signal ap_block_state28_pp0_stage3_iter6_ignore_call0 : BOOLEAN;
    signal ap_block_state32_pp0_stage3_iter7_ignore_call0 : BOOLEAN;
    signal ap_block_pp0_stage3_11001_ignoreCallOp135 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1_ignore_call0 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter2_ignore_call0 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter3_ignore_call0 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter4_ignore_call0 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter5_ignore_call0 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter6_ignore_call0 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter7_ignore_call0 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter8_ignore_call0 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp149 : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_tmp_data_sub_data_0_V_reg_261 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_tmp_data_sub_data_0_V_reg_261 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_tmp_data_sub_data_0_V_reg_261 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_tmp_data_sub_data_0_V_reg_261 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_tmp_data_sub_data_0_V_reg_261 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter5_tmp_data_sub_data_0_V_reg_261 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter6_tmp_data_sub_data_0_V_reg_261 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter7_tmp_data_sub_data_0_V_reg_261 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_tmp_data_sub_data_1_V_reg_271 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_tmp_data_sub_data_1_V_reg_271 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_tmp_data_sub_data_1_V_reg_271 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_tmp_data_sub_data_1_V_reg_271 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_tmp_data_sub_data_1_V_reg_271 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter5_tmp_data_sub_data_1_V_reg_271 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter6_tmp_data_sub_data_1_V_reg_271 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter7_tmp_data_sub_data_1_V_reg_271 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter8_tmp_data_sub_data_1_V_reg_271 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_tmp_data_sub_data_2_V_reg_281 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_tmp_data_sub_data_2_V_reg_281 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_tmp_data_sub_data_2_V_reg_281 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_tmp_data_sub_data_2_V_reg_281 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_tmp_data_sub_data_2_V_reg_281 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter5_tmp_data_sub_data_2_V_reg_281 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter6_tmp_data_sub_data_2_V_reg_281 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter7_tmp_data_sub_data_2_V_reg_281 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter8_tmp_data_sub_data_2_V_reg_281 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_curr_output_data_sub_data_3_V_2_phi_fu_293_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter8_curr_output_data_sub_data_3_V_2_reg_290 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_curr_output_data_sub_data_3_V_2_reg_290 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_curr_output_data_sub_data_3_V_2_reg_290 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_curr_output_data_sub_data_3_V_2_reg_290 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_curr_output_data_sub_data_3_V_2_reg_290 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_curr_output_data_sub_data_3_V_2_reg_290 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter5_curr_output_data_sub_data_3_V_2_reg_290 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter6_curr_output_data_sub_data_3_V_2_reg_290 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter7_curr_output_data_sub_data_3_V_2_reg_290 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_logistic_activate_fu_299_ap_start_reg : STD_LOGIC := '0';
    signal ap_predicate_op114_call_state2_state1 : BOOLEAN;
    signal ap_predicate_op128_call_state3_state2 : BOOLEAN;
    signal ap_predicate_op137_call_state4_state3 : BOOLEAN;
    signal ap_predicate_op152_call_state5_state4 : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal input_ch_idx_fu_156 : STD_LOGIC_VECTOR (3 downto 0);
    signal input_ch_idx_1_fu_720_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_input_ch_idx_load : STD_LOGIC_VECTOR (3 downto 0);
    signal col_idx_fu_160 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln1027_1_fu_545_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten_fu_164 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln1027_2_fu_730_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (8 downto 0);
    signal row_idx_fu_168 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln1027_fu_516_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten15_fu_172 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_sig_allocacmp_indvar_flatten15_load : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal zext_ln3_cast_fu_335_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln20_fu_397_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln14_fu_391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln17_fu_409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln31_fu_423_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln779_fu_435_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal shl_ln779_fu_439_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal and_ln779_fu_445_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal row_idx_cast_fu_463_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal col_idx_cast_fu_472_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln14_fu_488_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal row_idx_cast_mid1_fu_494_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal cmp_i_i28_mid1_fu_498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i28_fu_467_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i37_fu_476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln14_fu_481_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal col_idx_3_fu_523_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal col_idx_cast_mid1_fu_529_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal cmp_i_i37_mid1_fu_533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln14_2_fu_510_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln36_fu_611_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln779_1_fu_616_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln779_1_fu_620_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln779_1_fu_626_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln14_1_fu_503_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_fu_637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln57_fu_642_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln17_1_fu_538_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln41_fu_668_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln779_2_fu_673_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln779_2_fu_677_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln779_2_fu_683_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln46_fu_694_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln779_3_fu_699_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln779_3_fu_703_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln779_3_fu_709_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln1027_fu_725_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter7_stage1 : STD_LOGIC;
    signal ap_idle_pp0_0to6 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to8 : STD_LOGIC;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_864 : BOOLEAN;
    signal ap_condition_339 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component yolo_yolo_top_logistic_activate IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        val_in : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component yolo_yolo_top_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    grp_logistic_activate_fu_299 : component yolo_yolo_top_logistic_activate
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_logistic_activate_fu_299_ap_start,
        ap_done => grp_logistic_activate_fu_299_ap_done,
        ap_idle => grp_logistic_activate_fu_299_ap_idle,
        ap_ready => grp_logistic_activate_fu_299_ap_ready,
        ap_ce => grp_logistic_activate_fu_299_ap_ce,
        val_in => grp_logistic_activate_fu_299_val_in,
        ap_return => grp_logistic_activate_fu_299_ap_return);

    flow_control_loop_pipe_sequential_init_U : component yolo_yolo_top_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage3,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage3)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    grp_logistic_activate_fu_299_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_logistic_activate_fu_299_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_predicate_op152_call_state5_state4 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_predicate_op137_call_state4_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_predicate_op128_call_state3_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_predicate_op114_call_state2_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                    grp_logistic_activate_fu_299_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_logistic_activate_fu_299_ap_ready = ap_const_logic_1)) then 
                    grp_logistic_activate_fu_299_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage1) and (ap_idle_pp0_0to6 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage1) and (ap_idle_pp0_0to6 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage1) and (ap_idle_pp0_0to6 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter4_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage1) and (ap_idle_pp0_0to6 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter5_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage1) and (ap_idle_pp0_0to6 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter6_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage1) and (ap_idle_pp0_0to6 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter7_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage1) and (ap_idle_pp0_0to6 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_curr_output_data_sub_data_3_V_2_reg_290_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_864)) then
                if (((icmp_ln1027_reg_824 = ap_const_lv1_0) and (p_Result_3_fu_714_p2 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_curr_output_data_sub_data_3_V_2_reg_290 <= tmp_data_sub_data_3_V_reg_908;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_curr_output_data_sub_data_3_V_2_reg_290 <= ap_phi_reg_pp0_iter0_curr_output_data_sub_data_3_V_2_reg_290;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter7_tmp_data_sub_data_0_V_reg_261_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (p_Result_s_reg_861_pp0_iter7_reg = ap_const_lv1_0) and (icmp_ln1027_reg_824_pp0_iter7_reg = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter7_tmp_data_sub_data_0_V_reg_261 <= grp_logistic_activate_fu_299_ap_return;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_phi_reg_pp0_iter7_tmp_data_sub_data_0_V_reg_261 <= ap_phi_reg_pp0_iter6_tmp_data_sub_data_0_V_reg_261;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter8_tmp_data_sub_data_1_V_reg_271_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_339)) then
                if (((p_Result_1_reg_914_pp0_iter7_reg = ap_const_lv1_0) and (icmp_ln1027_reg_824_pp0_iter7_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter8_tmp_data_sub_data_1_V_reg_271 <= grp_logistic_activate_fu_299_ap_return;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter8_tmp_data_sub_data_1_V_reg_271 <= ap_phi_reg_pp0_iter7_tmp_data_sub_data_1_V_reg_271;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter8_tmp_data_sub_data_2_V_reg_281_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (p_Result_2_reg_923_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1027_reg_824_pp0_iter7_reg = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter8_tmp_data_sub_data_2_V_reg_281 <= grp_logistic_activate_fu_299_ap_return;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_phi_reg_pp0_iter8_tmp_data_sub_data_2_V_reg_281 <= ap_phi_reg_pp0_iter7_tmp_data_sub_data_2_V_reg_281;
            end if; 
        end if;
    end process;

    col_idx_fu_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                col_idx_fu_160 <= ap_const_lv5_0;
            elsif (((icmp_ln1027_reg_824 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                col_idx_fu_160 <= select_ln1027_1_fu_545_p3;
            end if; 
        end if;
    end process;

    indvar_flatten15_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                indvar_flatten15_fu_172 <= ap_const_lv13_0;
            elsif (((icmp_ln1027_reg_824 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                indvar_flatten15_fu_172 <= add_ln1027_1_reg_828;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                indvar_flatten_fu_164 <= ap_const_lv9_0;
            elsif (((icmp_ln1027_reg_824 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                indvar_flatten_fu_164 <= select_ln1027_2_fu_730_p3;
            end if; 
        end if;
    end process;

    input_ch_idx_fu_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                input_ch_idx_fu_156 <= ap_const_lv4_0;
            elsif (((icmp_ln1027_reg_824 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                input_ch_idx_fu_156 <= input_ch_idx_1_fu_720_p2;
            end if; 
        end if;
    end process;

    row_idx_fu_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                row_idx_fu_168 <= ap_const_lv5_0;
            elsif (((icmp_ln1027_reg_824 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                row_idx_fu_168 <= select_ln1027_fu_516_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln1027_1_reg_828 <= add_ln1027_1_fu_376_p2;
                icmp_ln1027_reg_824 <= icmp_ln1027_fu_370_p2;
                icmp_ln1027_reg_824_pp0_iter1_reg <= icmp_ln1027_reg_824;
                icmp_ln1027_reg_824_pp0_iter2_reg <= icmp_ln1027_reg_824_pp0_iter1_reg;
                icmp_ln1027_reg_824_pp0_iter3_reg <= icmp_ln1027_reg_824_pp0_iter2_reg;
                icmp_ln1027_reg_824_pp0_iter4_reg <= icmp_ln1027_reg_824_pp0_iter3_reg;
                icmp_ln1027_reg_824_pp0_iter5_reg <= icmp_ln1027_reg_824_pp0_iter4_reg;
                icmp_ln1027_reg_824_pp0_iter6_reg <= icmp_ln1027_reg_824_pp0_iter5_reg;
                icmp_ln1027_reg_824_pp0_iter7_reg <= icmp_ln1027_reg_824_pp0_iter6_reg;
                icmp_ln1027_reg_824_pp0_iter8_reg <= icmp_ln1027_reg_824_pp0_iter7_reg;
                indvar_flatten_load_reg_819 <= ap_sig_allocacmp_indvar_flatten_load;
                p_Result_s_reg_861_pp0_iter1_reg <= p_Result_s_reg_861;
                p_Result_s_reg_861_pp0_iter2_reg <= p_Result_s_reg_861_pp0_iter1_reg;
                p_Result_s_reg_861_pp0_iter3_reg <= p_Result_s_reg_861_pp0_iter2_reg;
                p_Result_s_reg_861_pp0_iter4_reg <= p_Result_s_reg_861_pp0_iter3_reg;
                p_Result_s_reg_861_pp0_iter5_reg <= p_Result_s_reg_861_pp0_iter4_reg;
                p_Result_s_reg_861_pp0_iter6_reg <= p_Result_s_reg_861_pp0_iter5_reg;
                p_Result_s_reg_861_pp0_iter7_reg <= p_Result_s_reg_861_pp0_iter6_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1027_fu_370_p2 = ap_const_lv1_0))) then
                and_ln14_reg_842 <= and_ln14_fu_403_p2;
                icmp_ln1027_1_reg_833 <= icmp_ln1027_1_fu_385_p2;
                p_Result_s_reg_861 <= p_Result_s_fu_451_p2;
                select_ln17_reg_848 <= select_ln17_fu_415_p3;
                    shl_ln_reg_854(4 downto 2) <= shl_ln_fu_427_p3(4 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_824 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (p_Result_s_reg_861 = ap_const_lv1_1))) then
                ap_phi_reg_pp0_iter0_tmp_data_sub_data_0_V_reg_261 <= tmp_data_sub_data_0_V_1_fu_576_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_824 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (p_Result_1_fu_631_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                ap_phi_reg_pp0_iter0_tmp_data_sub_data_1_V_reg_271 <= inStream_TDATA(31 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_824 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (p_Result_2_fu_688_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                ap_phi_reg_pp0_iter0_tmp_data_sub_data_2_V_reg_281 <= tmp_data_sub_data_2_V_1_reg_902;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ap_phi_reg_pp0_iter1_tmp_data_sub_data_0_V_reg_261 <= ap_phi_reg_pp0_iter0_tmp_data_sub_data_0_V_reg_261;
                ap_phi_reg_pp0_iter1_tmp_data_sub_data_1_V_reg_271 <= ap_phi_reg_pp0_iter0_tmp_data_sub_data_1_V_reg_271;
                ap_phi_reg_pp0_iter1_tmp_data_sub_data_2_V_reg_281 <= ap_phi_reg_pp0_iter0_tmp_data_sub_data_2_V_reg_281;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ap_phi_reg_pp0_iter2_curr_output_data_sub_data_3_V_2_reg_290 <= ap_phi_reg_pp0_iter1_curr_output_data_sub_data_3_V_2_reg_290;
                ap_phi_reg_pp0_iter2_tmp_data_sub_data_0_V_reg_261 <= ap_phi_reg_pp0_iter1_tmp_data_sub_data_0_V_reg_261;
                ap_phi_reg_pp0_iter2_tmp_data_sub_data_1_V_reg_271 <= ap_phi_reg_pp0_iter1_tmp_data_sub_data_1_V_reg_271;
                ap_phi_reg_pp0_iter2_tmp_data_sub_data_2_V_reg_281 <= ap_phi_reg_pp0_iter1_tmp_data_sub_data_2_V_reg_281;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ap_phi_reg_pp0_iter3_curr_output_data_sub_data_3_V_2_reg_290 <= ap_phi_reg_pp0_iter2_curr_output_data_sub_data_3_V_2_reg_290;
                ap_phi_reg_pp0_iter3_tmp_data_sub_data_0_V_reg_261 <= ap_phi_reg_pp0_iter2_tmp_data_sub_data_0_V_reg_261;
                ap_phi_reg_pp0_iter3_tmp_data_sub_data_1_V_reg_271 <= ap_phi_reg_pp0_iter2_tmp_data_sub_data_1_V_reg_271;
                ap_phi_reg_pp0_iter3_tmp_data_sub_data_2_V_reg_281 <= ap_phi_reg_pp0_iter2_tmp_data_sub_data_2_V_reg_281;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ap_phi_reg_pp0_iter4_curr_output_data_sub_data_3_V_2_reg_290 <= ap_phi_reg_pp0_iter3_curr_output_data_sub_data_3_V_2_reg_290;
                ap_phi_reg_pp0_iter4_tmp_data_sub_data_0_V_reg_261 <= ap_phi_reg_pp0_iter3_tmp_data_sub_data_0_V_reg_261;
                ap_phi_reg_pp0_iter4_tmp_data_sub_data_1_V_reg_271 <= ap_phi_reg_pp0_iter3_tmp_data_sub_data_1_V_reg_271;
                ap_phi_reg_pp0_iter4_tmp_data_sub_data_2_V_reg_281 <= ap_phi_reg_pp0_iter3_tmp_data_sub_data_2_V_reg_281;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ap_phi_reg_pp0_iter5_curr_output_data_sub_data_3_V_2_reg_290 <= ap_phi_reg_pp0_iter4_curr_output_data_sub_data_3_V_2_reg_290;
                ap_phi_reg_pp0_iter5_tmp_data_sub_data_0_V_reg_261 <= ap_phi_reg_pp0_iter4_tmp_data_sub_data_0_V_reg_261;
                ap_phi_reg_pp0_iter5_tmp_data_sub_data_1_V_reg_271 <= ap_phi_reg_pp0_iter4_tmp_data_sub_data_1_V_reg_271;
                ap_phi_reg_pp0_iter5_tmp_data_sub_data_2_V_reg_281 <= ap_phi_reg_pp0_iter4_tmp_data_sub_data_2_V_reg_281;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ap_phi_reg_pp0_iter6_curr_output_data_sub_data_3_V_2_reg_290 <= ap_phi_reg_pp0_iter5_curr_output_data_sub_data_3_V_2_reg_290;
                ap_phi_reg_pp0_iter6_tmp_data_sub_data_0_V_reg_261 <= ap_phi_reg_pp0_iter5_tmp_data_sub_data_0_V_reg_261;
                ap_phi_reg_pp0_iter6_tmp_data_sub_data_1_V_reg_271 <= ap_phi_reg_pp0_iter5_tmp_data_sub_data_1_V_reg_271;
                ap_phi_reg_pp0_iter6_tmp_data_sub_data_2_V_reg_281 <= ap_phi_reg_pp0_iter5_tmp_data_sub_data_2_V_reg_281;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ap_phi_reg_pp0_iter7_curr_output_data_sub_data_3_V_2_reg_290 <= ap_phi_reg_pp0_iter6_curr_output_data_sub_data_3_V_2_reg_290;
                ap_phi_reg_pp0_iter7_tmp_data_sub_data_1_V_reg_271 <= ap_phi_reg_pp0_iter6_tmp_data_sub_data_1_V_reg_271;
                ap_phi_reg_pp0_iter7_tmp_data_sub_data_2_V_reg_281 <= ap_phi_reg_pp0_iter6_tmp_data_sub_data_2_V_reg_281;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ap_phi_reg_pp0_iter8_curr_output_data_sub_data_3_V_2_reg_290 <= ap_phi_reg_pp0_iter7_curr_output_data_sub_data_3_V_2_reg_290;
                tmp_data_sub_data_0_V_reg_261 <= ap_phi_reg_pp0_iter7_tmp_data_sub_data_0_V_reg_261;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_824 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                curr_output_dest_V_reg_885 <= inStream_TDEST;
                curr_output_id_V_reg_880 <= inStream_TID;
                curr_output_keep_V_reg_865 <= inStream_TKEEP;
                curr_output_last_V_reg_918 <= curr_output_last_V_fu_648_p2;
                curr_output_strb_V_reg_870 <= inStream_TSTRB;
                curr_output_user_V_reg_875 <= inStream_TUSER;
                p_Result_1_reg_914 <= p_Result_1_fu_631_p2;
                tmp_data_sub_data_1_V_1_reg_896 <= inStream_TDATA(31 downto 16);
                tmp_data_sub_data_2_V_1_reg_902 <= inStream_TDATA(47 downto 32);
                tmp_data_sub_data_3_V_reg_908 <= inStream_TDATA(63 downto 48);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                curr_output_dest_V_reg_885_pp0_iter1_reg <= curr_output_dest_V_reg_885;
                curr_output_dest_V_reg_885_pp0_iter2_reg <= curr_output_dest_V_reg_885_pp0_iter1_reg;
                curr_output_dest_V_reg_885_pp0_iter3_reg <= curr_output_dest_V_reg_885_pp0_iter2_reg;
                curr_output_dest_V_reg_885_pp0_iter4_reg <= curr_output_dest_V_reg_885_pp0_iter3_reg;
                curr_output_dest_V_reg_885_pp0_iter5_reg <= curr_output_dest_V_reg_885_pp0_iter4_reg;
                curr_output_dest_V_reg_885_pp0_iter6_reg <= curr_output_dest_V_reg_885_pp0_iter5_reg;
                curr_output_dest_V_reg_885_pp0_iter7_reg <= curr_output_dest_V_reg_885_pp0_iter6_reg;
                curr_output_id_V_reg_880_pp0_iter1_reg <= curr_output_id_V_reg_880;
                curr_output_id_V_reg_880_pp0_iter2_reg <= curr_output_id_V_reg_880_pp0_iter1_reg;
                curr_output_id_V_reg_880_pp0_iter3_reg <= curr_output_id_V_reg_880_pp0_iter2_reg;
                curr_output_id_V_reg_880_pp0_iter4_reg <= curr_output_id_V_reg_880_pp0_iter3_reg;
                curr_output_id_V_reg_880_pp0_iter5_reg <= curr_output_id_V_reg_880_pp0_iter4_reg;
                curr_output_id_V_reg_880_pp0_iter6_reg <= curr_output_id_V_reg_880_pp0_iter5_reg;
                curr_output_id_V_reg_880_pp0_iter7_reg <= curr_output_id_V_reg_880_pp0_iter6_reg;
                curr_output_keep_V_reg_865_pp0_iter1_reg <= curr_output_keep_V_reg_865;
                curr_output_keep_V_reg_865_pp0_iter2_reg <= curr_output_keep_V_reg_865_pp0_iter1_reg;
                curr_output_keep_V_reg_865_pp0_iter3_reg <= curr_output_keep_V_reg_865_pp0_iter2_reg;
                curr_output_keep_V_reg_865_pp0_iter4_reg <= curr_output_keep_V_reg_865_pp0_iter3_reg;
                curr_output_keep_V_reg_865_pp0_iter5_reg <= curr_output_keep_V_reg_865_pp0_iter4_reg;
                curr_output_keep_V_reg_865_pp0_iter6_reg <= curr_output_keep_V_reg_865_pp0_iter5_reg;
                curr_output_keep_V_reg_865_pp0_iter7_reg <= curr_output_keep_V_reg_865_pp0_iter6_reg;
                curr_output_last_V_reg_918_pp0_iter1_reg <= curr_output_last_V_reg_918;
                curr_output_last_V_reg_918_pp0_iter2_reg <= curr_output_last_V_reg_918_pp0_iter1_reg;
                curr_output_last_V_reg_918_pp0_iter3_reg <= curr_output_last_V_reg_918_pp0_iter2_reg;
                curr_output_last_V_reg_918_pp0_iter4_reg <= curr_output_last_V_reg_918_pp0_iter3_reg;
                curr_output_last_V_reg_918_pp0_iter5_reg <= curr_output_last_V_reg_918_pp0_iter4_reg;
                curr_output_last_V_reg_918_pp0_iter6_reg <= curr_output_last_V_reg_918_pp0_iter5_reg;
                curr_output_last_V_reg_918_pp0_iter7_reg <= curr_output_last_V_reg_918_pp0_iter6_reg;
                curr_output_strb_V_reg_870_pp0_iter1_reg <= curr_output_strb_V_reg_870;
                curr_output_strb_V_reg_870_pp0_iter2_reg <= curr_output_strb_V_reg_870_pp0_iter1_reg;
                curr_output_strb_V_reg_870_pp0_iter3_reg <= curr_output_strb_V_reg_870_pp0_iter2_reg;
                curr_output_strb_V_reg_870_pp0_iter4_reg <= curr_output_strb_V_reg_870_pp0_iter3_reg;
                curr_output_strb_V_reg_870_pp0_iter5_reg <= curr_output_strb_V_reg_870_pp0_iter4_reg;
                curr_output_strb_V_reg_870_pp0_iter6_reg <= curr_output_strb_V_reg_870_pp0_iter5_reg;
                curr_output_strb_V_reg_870_pp0_iter7_reg <= curr_output_strb_V_reg_870_pp0_iter6_reg;
                curr_output_user_V_reg_875_pp0_iter1_reg <= curr_output_user_V_reg_875;
                curr_output_user_V_reg_875_pp0_iter2_reg <= curr_output_user_V_reg_875_pp0_iter1_reg;
                curr_output_user_V_reg_875_pp0_iter3_reg <= curr_output_user_V_reg_875_pp0_iter2_reg;
                curr_output_user_V_reg_875_pp0_iter4_reg <= curr_output_user_V_reg_875_pp0_iter3_reg;
                curr_output_user_V_reg_875_pp0_iter5_reg <= curr_output_user_V_reg_875_pp0_iter4_reg;
                curr_output_user_V_reg_875_pp0_iter6_reg <= curr_output_user_V_reg_875_pp0_iter5_reg;
                curr_output_user_V_reg_875_pp0_iter7_reg <= curr_output_user_V_reg_875_pp0_iter6_reg;
                p_Result_1_reg_914_pp0_iter1_reg <= p_Result_1_reg_914;
                p_Result_1_reg_914_pp0_iter2_reg <= p_Result_1_reg_914_pp0_iter1_reg;
                p_Result_1_reg_914_pp0_iter3_reg <= p_Result_1_reg_914_pp0_iter2_reg;
                p_Result_1_reg_914_pp0_iter4_reg <= p_Result_1_reg_914_pp0_iter3_reg;
                p_Result_1_reg_914_pp0_iter5_reg <= p_Result_1_reg_914_pp0_iter4_reg;
                p_Result_1_reg_914_pp0_iter6_reg <= p_Result_1_reg_914_pp0_iter5_reg;
                p_Result_1_reg_914_pp0_iter7_reg <= p_Result_1_reg_914_pp0_iter6_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_824 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                p_Result_2_reg_923 <= p_Result_2_fu_688_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                p_Result_2_reg_923_pp0_iter1_reg <= p_Result_2_reg_923;
                p_Result_2_reg_923_pp0_iter2_reg <= p_Result_2_reg_923_pp0_iter1_reg;
                p_Result_2_reg_923_pp0_iter3_reg <= p_Result_2_reg_923_pp0_iter2_reg;
                p_Result_2_reg_923_pp0_iter4_reg <= p_Result_2_reg_923_pp0_iter3_reg;
                p_Result_2_reg_923_pp0_iter5_reg <= p_Result_2_reg_923_pp0_iter4_reg;
                p_Result_2_reg_923_pp0_iter6_reg <= p_Result_2_reg_923_pp0_iter5_reg;
                p_Result_2_reg_923_pp0_iter7_reg <= p_Result_2_reg_923_pp0_iter6_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_824 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                p_Result_3_reg_927 <= p_Result_3_fu_714_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                p_Result_3_reg_927_pp0_iter1_reg <= p_Result_3_reg_927;
                p_Result_3_reg_927_pp0_iter2_reg <= p_Result_3_reg_927_pp0_iter1_reg;
                p_Result_3_reg_927_pp0_iter3_reg <= p_Result_3_reg_927_pp0_iter2_reg;
                p_Result_3_reg_927_pp0_iter4_reg <= p_Result_3_reg_927_pp0_iter3_reg;
                p_Result_3_reg_927_pp0_iter5_reg <= p_Result_3_reg_927_pp0_iter4_reg;
                p_Result_3_reg_927_pp0_iter6_reg <= p_Result_3_reg_927_pp0_iter5_reg;
                p_Result_3_reg_927_pp0_iter7_reg <= p_Result_3_reg_927_pp0_iter6_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_data_sub_data_1_V_reg_271 <= ap_phi_reg_pp0_iter8_tmp_data_sub_data_1_V_reg_271;
            end if;
        end if;
    end process;
    shl_ln_reg_854(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage3_subdone, ap_block_pp0_stage1_subdone, ap_condition_exit_pp0_iter7_stage1, ap_idle_pp0_0to6, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to8, ap_block_pp0_stage2_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to8 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if (((ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage1) and (ap_idle_pp0_0to6 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add_ln1027_1_fu_376_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten15_load) + unsigned(ap_const_lv13_1));
    add_ln1027_fu_725_p2 <= std_logic_vector(unsigned(indvar_flatten_load_reg_819) + unsigned(ap_const_lv9_1));
    add_ln14_fu_488_p2 <= std_logic_vector(unsigned(row_idx_fu_168) + unsigned(ap_const_lv5_1));
    and_ln14_fu_403_p2 <= (xor_ln14_fu_391_p2 and icmp_ln20_fu_397_p2);
    and_ln57_fu_642_p2 <= (select_ln14_1_fu_503_p3 and icmp_ln56_fu_637_p2);
    and_ln779_1_fu_626_p2 <= (shl_ln779_1_fu_620_p2 and activate_en);
    and_ln779_2_fu_683_p2 <= (shl_ln779_2_fu_677_p2 and activate_en);
    and_ln779_3_fu_709_p2 <= (shl_ln779_3_fu_703_p2 and activate_en);
    and_ln779_fu_445_p2 <= (trunc_ln3 and shl_ln779_fu_439_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp149 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter8, icmp_ln1027_reg_824, outStream_TREADY, inStream_TVALID)
    begin
                ap_block_pp0_stage1_01001 <= (((outStream_TREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)) or ((inStream_TVALID = ap_const_logic_0) and (icmp_ln1027_reg_824 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter8, icmp_ln1027_reg_824, outStream_TREADY, inStream_TVALID)
    begin
                ap_block_pp0_stage1_11001 <= (((outStream_TREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)) or ((inStream_TVALID = ap_const_logic_0) and (icmp_ln1027_reg_824 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage1_11001_ignoreCallOp114_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter8, icmp_ln1027_reg_824, outStream_TREADY, inStream_TVALID)
    begin
                ap_block_pp0_stage1_11001_ignoreCallOp114 <= (((outStream_TREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)) or ((inStream_TVALID = ap_const_logic_0) and (icmp_ln1027_reg_824 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter8, icmp_ln1027_reg_824, outStream_TREADY, inStream_TVALID)
    begin
                ap_block_pp0_stage1_subdone <= (((outStream_TREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)) or ((inStream_TVALID = ap_const_logic_0) and (icmp_ln1027_reg_824 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001_ignoreCallOp127 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001_ignoreCallOp135 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter2_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage2_iter2_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage3_iter2_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter3_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter3_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage2_iter3_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage3_iter3_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter4_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter4_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage2_iter4_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage3_iter4_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter5_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage1_iter5_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage2_iter5_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage3_iter5_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter6_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage1_iter6_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage2_iter6_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage3_iter6_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter7_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage1_iter0_assign_proc : process(icmp_ln1027_reg_824, inStream_TVALID)
    begin
                ap_block_state2_pp0_stage1_iter0 <= ((inStream_TVALID = ap_const_logic_0) and (icmp_ln1027_reg_824 = ap_const_lv1_0));
    end process;


    ap_block_state2_pp0_stage1_iter0_ignore_call0_assign_proc : process(icmp_ln1027_reg_824, inStream_TVALID)
    begin
                ap_block_state2_pp0_stage1_iter0_ignore_call0 <= ((inStream_TVALID = ap_const_logic_0) and (icmp_ln1027_reg_824 = ap_const_lv1_0));
    end process;

        ap_block_state30_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage1_iter7_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage2_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage2_iter7_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage3_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage3_iter7_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage0_iter8_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state34_pp0_stage1_iter8_assign_proc : process(outStream_TREADY)
    begin
                ap_block_state34_pp0_stage1_iter8 <= (outStream_TREADY = ap_const_logic_0);
    end process;


    ap_block_state34_pp0_stage1_iter8_ignore_call0_assign_proc : process(outStream_TREADY)
    begin
                ap_block_state34_pp0_stage1_iter8_ignore_call0 <= (outStream_TREADY = ap_const_logic_0);
    end process;

        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage2_iter1_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage3_iter1_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter2_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_339_assign_proc : process(ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
                ap_condition_339 <= ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3));
    end process;


    ap_condition_864_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
                ap_condition_864 <= ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3));
    end process;


    ap_condition_exit_pp0_iter0_stage3_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone, icmp_ln1027_reg_824)
    begin
        if (((icmp_ln1027_reg_824 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_condition_exit_pp0_iter0_stage3 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter7_stage1_assign_proc : process(ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, icmp_ln1027_reg_824_pp0_iter7_reg, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln1027_reg_824_pp0_iter7_reg = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter7_stage1 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter7_stage1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter7_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to6_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to6 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to8_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to8 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to8 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage3;

    ap_phi_mux_curr_output_data_sub_data_3_V_2_phi_fu_293_p4_assign_proc : process(icmp_ln1027_reg_824_pp0_iter8_reg, p_Result_3_reg_927_pp0_iter7_reg, grp_logistic_activate_fu_299_ap_return, ap_phi_reg_pp0_iter8_curr_output_data_sub_data_3_V_2_reg_290)
    begin
        if (((p_Result_3_reg_927_pp0_iter7_reg = ap_const_lv1_0) and (icmp_ln1027_reg_824_pp0_iter8_reg = ap_const_lv1_0))) then 
            ap_phi_mux_curr_output_data_sub_data_3_V_2_phi_fu_293_p4 <= grp_logistic_activate_fu_299_ap_return;
        else 
            ap_phi_mux_curr_output_data_sub_data_3_V_2_phi_fu_293_p4 <= ap_phi_reg_pp0_iter8_curr_output_data_sub_data_3_V_2_reg_290;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_curr_output_data_sub_data_3_V_2_reg_290 <= "XXXXXXXXXXXXXXXX";

    ap_predicate_op114_call_state2_assign_proc : process(icmp_ln1027_reg_824, p_Result_s_reg_861)
    begin
                ap_predicate_op114_call_state2 <= ((icmp_ln1027_reg_824 = ap_const_lv1_0) and (p_Result_s_reg_861 = ap_const_lv1_0));
    end process;


    ap_predicate_op114_call_state2_state1_assign_proc : process(icmp_ln1027_fu_370_p2, p_Result_s_fu_451_p2)
    begin
                ap_predicate_op114_call_state2_state1 <= ((p_Result_s_fu_451_p2 = ap_const_lv1_0) and (icmp_ln1027_fu_370_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op128_call_state3_assign_proc : process(icmp_ln1027_reg_824, p_Result_1_reg_914)
    begin
                ap_predicate_op128_call_state3 <= ((icmp_ln1027_reg_824 = ap_const_lv1_0) and (p_Result_1_reg_914 = ap_const_lv1_0));
    end process;


    ap_predicate_op128_call_state3_state2_assign_proc : process(icmp_ln1027_reg_824, p_Result_1_fu_631_p2)
    begin
                ap_predicate_op128_call_state3_state2 <= ((icmp_ln1027_reg_824 = ap_const_lv1_0) and (p_Result_1_fu_631_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op137_call_state4_assign_proc : process(icmp_ln1027_reg_824, p_Result_2_reg_923)
    begin
                ap_predicate_op137_call_state4 <= ((icmp_ln1027_reg_824 = ap_const_lv1_0) and (p_Result_2_reg_923 = ap_const_lv1_0));
    end process;


    ap_predicate_op137_call_state4_state3_assign_proc : process(icmp_ln1027_reg_824, p_Result_2_fu_688_p2)
    begin
                ap_predicate_op137_call_state4_state3 <= ((icmp_ln1027_reg_824 = ap_const_lv1_0) and (p_Result_2_fu_688_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op152_call_state5_assign_proc : process(icmp_ln1027_reg_824, p_Result_3_reg_927)
    begin
                ap_predicate_op152_call_state5 <= ((icmp_ln1027_reg_824 = ap_const_lv1_0) and (p_Result_3_reg_927 = ap_const_lv1_0));
    end process;


    ap_predicate_op152_call_state5_state4_assign_proc : process(icmp_ln1027_reg_824, p_Result_3_fu_714_p2)
    begin
                ap_predicate_op152_call_state5_state4 <= ((icmp_ln1027_reg_824 = ap_const_lv1_0) and (p_Result_3_fu_714_p2 = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten15_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten15_fu_172)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_indvar_flatten15_load <= ap_const_lv13_0;
        else 
            ap_sig_allocacmp_indvar_flatten15_load <= indvar_flatten15_fu_172;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten_fu_164)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv9_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_164;
        end if; 
    end process;


    ap_sig_allocacmp_input_ch_idx_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, input_ch_idx_fu_156, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_input_ch_idx_load <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_input_ch_idx_load <= input_ch_idx_fu_156;
        end if; 
    end process;

    cmp_i_i28_fu_467_p2 <= "1" when (sub_i_i = row_idx_cast_fu_463_p1) else "0";
    cmp_i_i28_mid1_fu_498_p2 <= "1" when (sub_i_i = row_idx_cast_mid1_fu_494_p1) else "0";
    cmp_i_i37_fu_476_p2 <= "1" when (sub_i_i60 = col_idx_cast_fu_472_p1) else "0";
    cmp_i_i37_mid1_fu_533_p2 <= "1" when (sub_i_i60 = col_idx_cast_mid1_fu_529_p1) else "0";
    col_idx_3_fu_523_p2 <= std_logic_vector(unsigned(select_ln14_fu_481_p3) + unsigned(ap_const_lv5_1));
    col_idx_cast_fu_472_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_idx_fu_160),6));
    col_idx_cast_mid1_fu_529_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_idx_3_fu_523_p2),6));
    curr_output_last_V_fu_648_p2 <= (select_ln17_1_fu_538_p3 and and_ln57_fu_642_p2);

    grp_logistic_activate_fu_299_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1_11001_ignoreCallOp114, ap_block_pp0_stage2_11001_ignoreCallOp127, ap_block_pp0_stage3_11001_ignoreCallOp135, ap_block_pp0_stage0_11001_ignoreCallOp149)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp149) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001_ignoreCallOp135) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001_ignoreCallOp127) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp114) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_logistic_activate_fu_299_ap_ce <= ap_const_logic_1;
        else 
            grp_logistic_activate_fu_299_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_logistic_activate_fu_299_ap_start <= grp_logistic_activate_fu_299_ap_start_reg;

    grp_logistic_activate_fu_299_val_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, tmp_data_sub_data_0_V_1_fu_576_p1, tmp_data_sub_data_1_V_1_reg_896, tmp_data_sub_data_2_V_1_reg_902, tmp_data_sub_data_3_V_reg_908, ap_CS_fsm_pp0_stage2, ap_predicate_op114_call_state2, ap_predicate_op128_call_state3, ap_predicate_op137_call_state4, ap_predicate_op152_call_state5, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage0)
    begin
        if (((ap_predicate_op152_call_state5 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_logistic_activate_fu_299_val_in <= tmp_data_sub_data_3_V_reg_908;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_predicate_op137_call_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_logistic_activate_fu_299_val_in <= tmp_data_sub_data_2_V_1_reg_902;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_predicate_op128_call_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_logistic_activate_fu_299_val_in <= tmp_data_sub_data_1_V_1_reg_896;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_predicate_op114_call_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_logistic_activate_fu_299_val_in <= tmp_data_sub_data_0_V_1_fu_576_p1;
        else 
            grp_logistic_activate_fu_299_val_in <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln1027_1_fu_385_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = zext_ln3_cast_fu_335_p1) else "0";
    icmp_ln1027_fu_370_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten15_load = mul_ln3) else "0";
    icmp_ln20_fu_397_p2 <= "1" when (ap_sig_allocacmp_input_ch_idx_load = ap_const_lv4_8) else "0";
    icmp_ln56_fu_637_p2 <= "1" when (select_ln17_reg_848 = ap_const_lv4_7) else "0";

    inStream_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln1027_reg_824, inStream_TVALID, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
        if (((icmp_ln1027_reg_824 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            inStream_TDATA_blk_n <= inStream_TVALID;
        else 
            inStream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    inStream_TREADY_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln1027_reg_824, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((icmp_ln1027_reg_824 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            inStream_TREADY <= ap_const_logic_1;
        else 
            inStream_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    input_ch_idx_1_fu_720_p2 <= std_logic_vector(unsigned(select_ln17_reg_848) + unsigned(ap_const_lv4_1));
    or_ln17_fu_409_p2 <= (icmp_ln1027_1_fu_385_p2 or and_ln14_fu_403_p2);
    or_ln36_fu_611_p2 <= (shl_ln_reg_854 or ap_const_lv5_1);
    or_ln41_fu_668_p2 <= (shl_ln_reg_854 or ap_const_lv5_2);
    or_ln46_fu_694_p2 <= (shl_ln_reg_854 or ap_const_lv5_3);
    outStream_TDATA <= (((ap_phi_mux_curr_output_data_sub_data_3_V_2_phi_fu_293_p4 & ap_phi_reg_pp0_iter8_tmp_data_sub_data_2_V_reg_281) & tmp_data_sub_data_1_V_reg_271) & tmp_data_sub_data_0_V_reg_261);

    outStream_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter8, outStream_TREADY, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            outStream_TDATA_blk_n <= outStream_TREADY;
        else 
            outStream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    outStream_TDEST <= curr_output_dest_V_reg_885_pp0_iter7_reg;
    outStream_TID <= curr_output_id_V_reg_880_pp0_iter7_reg;
    outStream_TKEEP <= curr_output_keep_V_reg_865_pp0_iter7_reg;
    outStream_TLAST <= curr_output_last_V_reg_918_pp0_iter7_reg;
    outStream_TSTRB <= curr_output_strb_V_reg_870_pp0_iter7_reg;
    outStream_TUSER <= curr_output_user_V_reg_875_pp0_iter7_reg;

    outStream_TVALID_assign_proc : process(ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            outStream_TVALID <= ap_const_logic_1;
        else 
            outStream_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_1_fu_631_p2 <= "1" when (and_ln779_1_fu_626_p2 = ap_const_lv32_0) else "0";
    p_Result_2_fu_688_p2 <= "1" when (and_ln779_2_fu_683_p2 = ap_const_lv32_0) else "0";
    p_Result_3_fu_714_p2 <= "1" when (and_ln779_3_fu_709_p2 = ap_const_lv32_0) else "0";
    p_Result_s_fu_451_p2 <= "1" when (and_ln779_fu_445_p2 = ap_const_lv29_0) else "0";
    row_idx_cast_fu_463_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(row_idx_fu_168),6));
    row_idx_cast_mid1_fu_494_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln14_fu_488_p2),6));
    select_ln1027_1_fu_545_p3 <= 
        col_idx_3_fu_523_p2 when (and_ln14_reg_842(0) = '1') else 
        select_ln14_fu_481_p3;
    select_ln1027_2_fu_730_p3 <= 
        ap_const_lv9_1 when (icmp_ln1027_1_reg_833(0) = '1') else 
        add_ln1027_fu_725_p2;
    select_ln1027_fu_516_p3 <= 
        add_ln14_fu_488_p2 when (icmp_ln1027_1_reg_833(0) = '1') else 
        row_idx_fu_168;
    select_ln14_1_fu_503_p3 <= 
        cmp_i_i28_mid1_fu_498_p2 when (icmp_ln1027_1_reg_833(0) = '1') else 
        cmp_i_i28_fu_467_p2;
    select_ln14_2_fu_510_p3 <= 
        cmp_i_i37_mid111 when (icmp_ln1027_1_reg_833(0) = '1') else 
        cmp_i_i37_fu_476_p2;
    select_ln14_fu_481_p3 <= 
        ap_const_lv5_0 when (icmp_ln1027_1_reg_833(0) = '1') else 
        col_idx_fu_160;
    select_ln17_1_fu_538_p3 <= 
        cmp_i_i37_mid1_fu_533_p2 when (and_ln14_reg_842(0) = '1') else 
        select_ln14_2_fu_510_p3;
    select_ln17_fu_415_p3 <= 
        ap_const_lv4_0 when (or_ln17_fu_409_p2(0) = '1') else 
        ap_sig_allocacmp_input_ch_idx_load;
    shl_ln779_1_fu_620_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & zext_ln779_1_fu_616_p1(31-1 downto 0)))));
    shl_ln779_2_fu_677_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & zext_ln779_2_fu_673_p1(31-1 downto 0)))));
    shl_ln779_3_fu_703_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & zext_ln779_3_fu_699_p1(31-1 downto 0)))));
    shl_ln779_fu_439_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv29_1),to_integer(unsigned('0' & zext_ln779_fu_435_p1(29-1 downto 0)))));
    shl_ln_fu_427_p3 <= (trunc_ln31_fu_423_p1 & ap_const_lv2_0);
    tmp_data_sub_data_0_V_1_fu_576_p1 <= inStream_TDATA(16 - 1 downto 0);
    trunc_ln31_fu_423_p1 <= select_ln17_fu_415_p3(3 - 1 downto 0);
    xor_ln14_fu_391_p2 <= (icmp_ln1027_1_fu_385_p2 xor ap_const_lv1_1);
    zext_ln3_cast_fu_335_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln3),9));
    zext_ln779_1_fu_616_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln36_fu_611_p2),32));
    zext_ln779_2_fu_673_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln41_fu_668_p2),32));
    zext_ln779_3_fu_699_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln46_fu_694_p2),32));
    zext_ln779_fu_435_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_427_p3),29));
end behav;
