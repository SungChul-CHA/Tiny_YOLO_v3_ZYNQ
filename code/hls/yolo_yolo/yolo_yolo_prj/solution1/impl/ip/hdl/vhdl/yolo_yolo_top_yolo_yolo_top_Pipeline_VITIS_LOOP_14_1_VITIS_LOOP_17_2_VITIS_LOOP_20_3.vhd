-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity yolo_yolo_top_yolo_yolo_top_Pipeline_VITIS_LOOP_14_1_VITIS_LOOP_17_2_VITIS_LOOP_20_3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    sub_i_i : IN STD_LOGIC_VECTOR (5 downto 0);
    sub_i_i59 : IN STD_LOGIC_VECTOR (5 downto 0);
    mul_ln3 : IN STD_LOGIC_VECTOR (12 downto 0);
    outStream_TDATA : OUT STD_LOGIC_VECTOR (111 downto 0);
    outStream_TVALID : OUT STD_LOGIC;
    outStream_TREADY : IN STD_LOGIC;
    activate_en : IN STD_LOGIC_VECTOR (31 downto 0);
    zext_ln3 : IN STD_LOGIC_VECTOR (7 downto 0);
    cmp_i_i36_mid111 : IN STD_LOGIC_VECTOR (0 downto 0);
    inStream_TDATA : IN STD_LOGIC_VECTOR (111 downto 0);
    inStream_TVALID : IN STD_LOGIC;
    inStream_TREADY : OUT STD_LOGIC;
    trunc_ln3 : IN STD_LOGIC_VECTOR (28 downto 0) );
end;


architecture behav of yolo_yolo_top_yolo_yolo_top_Pipeline_VITIS_LOOP_14_1_VITIS_LOOP_17_2_VITIS_LOOP_20_3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv29_1 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000001";
    constant ap_const_lv29_0 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_6D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101101";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_64 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100100";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state12_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state16_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state20_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state24_pp0_stage3_iter5 : BOOLEAN;
    signal ap_block_state28_pp0_stage3_iter6 : BOOLEAN;
    signal ap_block_state32_pp0_stage3_iter7 : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal icmp_ln1027_reg_808 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage3 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal outStream_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal inStream_TDATA_blk_n : STD_LOGIC;
    signal curr_output_data_sub_data_0_V_1_reg_225 : STD_LOGIC_VECTOR (15 downto 0);
    signal curr_output_data_sub_data_1_V_1_reg_235 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal indvar_flatten_load_reg_803 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1027_fu_334_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_808_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_808_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_808_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_808_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_808_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_808_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_808_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_808_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1027_1_fu_340_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1027_1_reg_812 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln1027_1_fu_349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_1_reg_817 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln14_fu_367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln14_reg_826 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln17_fu_379_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln17_reg_832 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln_fu_391_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln_reg_838 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Result_s_fu_415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_845 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_845_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_845_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_845_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_845_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_845_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_845_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_845_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal curr_input_data_sub_data_0_V_fu_516_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state26_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state30_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state34_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal curr_input_data_sub_data_1_V_reg_855 : STD_LOGIC_VECTOR (15 downto 0);
    signal curr_input_data_sub_data_2_V_reg_861 : STD_LOGIC_VECTOR (15 downto 0);
    signal curr_input_data_sub_data_3_V_reg_867 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_1_fu_571_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_1_reg_873 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_1_reg_873_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_1_reg_873_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_1_reg_873_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_1_reg_873_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_1_reg_873_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_1_reg_873_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_1_reg_873_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal curr_output_last_V_fu_588_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal curr_output_last_V_reg_877 : STD_LOGIC_VECTOR (0 downto 0);
    signal curr_output_last_V_reg_877_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal curr_output_last_V_reg_877_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal curr_output_last_V_reg_877_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal curr_output_last_V_reg_877_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal curr_output_last_V_reg_877_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal curr_output_last_V_reg_877_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal curr_output_last_V_reg_877_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_882 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_s_reg_882_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_s_reg_882_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_s_reg_882_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_s_reg_882_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_s_reg_882_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_s_reg_882_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_s_reg_882_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_reg_887 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_reg_887_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_reg_887_pp0_iter2_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_reg_887_pp0_iter3_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_reg_887_pp0_iter4_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_reg_887_pp0_iter5_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_reg_887_pp0_iter6_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_reg_887_pp0_iter7_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_4_reg_892 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_4_reg_892_pp0_iter1_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_4_reg_892_pp0_iter2_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_4_reg_892_pp0_iter3_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_4_reg_892_pp0_iter4_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_4_reg_892_pp0_iter5_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_4_reg_892_pp0_iter6_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_4_reg_892_pp0_iter7_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_2_fu_658_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_reg_897 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state11_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state15_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state19_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state23_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state27_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_state31_pp0_stage2_iter7 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal p_Result_2_reg_897_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_reg_897_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_reg_897_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_reg_897_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_reg_897_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_reg_897_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_reg_897_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_3_fu_684_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_3_reg_901 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal p_Result_3_reg_901_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_3_reg_901_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_3_reg_901_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_3_reg_901_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_3_reg_901_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_3_reg_901_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_3_reg_901_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_logistic_activate_fu_263_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal grp_logistic_activate_fu_263_ap_start : STD_LOGIC;
    signal grp_logistic_activate_fu_263_ap_done : STD_LOGIC;
    signal grp_logistic_activate_fu_263_ap_idle : STD_LOGIC;
    signal grp_logistic_activate_fu_263_ap_ready : STD_LOGIC;
    signal grp_logistic_activate_fu_263_ap_ce : STD_LOGIC;
    signal grp_logistic_activate_fu_263_val_in : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_predicate_op106_call_state2 : BOOLEAN;
    signal ap_predicate_op123_call_state3 : BOOLEAN;
    signal ap_predicate_op132_call_state4 : BOOLEAN;
    signal ap_predicate_op147_call_state5 : BOOLEAN;
    signal ap_block_state2_pp0_stage1_iter0_ignore_call0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1_ignore_call0 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter2_ignore_call0 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter3_ignore_call0 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter4_ignore_call0 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter5_ignore_call0 : BOOLEAN;
    signal ap_block_state26_pp0_stage1_iter6_ignore_call0 : BOOLEAN;
    signal ap_block_state30_pp0_stage1_iter7_ignore_call0 : BOOLEAN;
    signal ap_block_state34_pp0_stage1_iter8_ignore_call0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp106 : BOOLEAN;
    signal ap_block_state3_pp0_stage2_iter0_ignore_call0 : BOOLEAN;
    signal ap_block_state7_pp0_stage2_iter1_ignore_call0 : BOOLEAN;
    signal ap_block_state11_pp0_stage2_iter2_ignore_call0 : BOOLEAN;
    signal ap_block_state15_pp0_stage2_iter3_ignore_call0 : BOOLEAN;
    signal ap_block_state19_pp0_stage2_iter4_ignore_call0 : BOOLEAN;
    signal ap_block_state23_pp0_stage2_iter5_ignore_call0 : BOOLEAN;
    signal ap_block_state27_pp0_stage2_iter6_ignore_call0 : BOOLEAN;
    signal ap_block_state31_pp0_stage2_iter7_ignore_call0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001_ignoreCallOp122 : BOOLEAN;
    signal ap_block_state4_pp0_stage3_iter0_ignore_call0 : BOOLEAN;
    signal ap_block_state8_pp0_stage3_iter1_ignore_call0 : BOOLEAN;
    signal ap_block_state12_pp0_stage3_iter2_ignore_call0 : BOOLEAN;
    signal ap_block_state16_pp0_stage3_iter3_ignore_call0 : BOOLEAN;
    signal ap_block_state20_pp0_stage3_iter4_ignore_call0 : BOOLEAN;
    signal ap_block_state24_pp0_stage3_iter5_ignore_call0 : BOOLEAN;
    signal ap_block_state28_pp0_stage3_iter6_ignore_call0 : BOOLEAN;
    signal ap_block_state32_pp0_stage3_iter7_ignore_call0 : BOOLEAN;
    signal ap_block_pp0_stage3_11001_ignoreCallOp130 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1_ignore_call0 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter2_ignore_call0 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter3_ignore_call0 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter4_ignore_call0 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter5_ignore_call0 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter6_ignore_call0 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter7_ignore_call0 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter8_ignore_call0 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp144 : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_curr_output_data_sub_data_0_V_1_reg_225 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_curr_output_data_sub_data_0_V_1_reg_225 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_curr_output_data_sub_data_0_V_1_reg_225 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_curr_output_data_sub_data_0_V_1_reg_225 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_curr_output_data_sub_data_0_V_1_reg_225 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter5_curr_output_data_sub_data_0_V_1_reg_225 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter6_curr_output_data_sub_data_0_V_1_reg_225 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter7_curr_output_data_sub_data_0_V_1_reg_225 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_curr_output_data_sub_data_1_V_1_reg_235 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_curr_output_data_sub_data_1_V_1_reg_235 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_curr_output_data_sub_data_1_V_1_reg_235 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_curr_output_data_sub_data_1_V_1_reg_235 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_curr_output_data_sub_data_1_V_1_reg_235 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter5_curr_output_data_sub_data_1_V_1_reg_235 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter6_curr_output_data_sub_data_1_V_1_reg_235 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter7_curr_output_data_sub_data_1_V_1_reg_235 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter8_curr_output_data_sub_data_1_V_1_reg_235 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_curr_output_data_sub_data_2_V_1_reg_245 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_curr_output_data_sub_data_2_V_1_reg_245 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_curr_output_data_sub_data_2_V_1_reg_245 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_curr_output_data_sub_data_2_V_1_reg_245 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_curr_output_data_sub_data_2_V_1_reg_245 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter5_curr_output_data_sub_data_2_V_1_reg_245 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter6_curr_output_data_sub_data_2_V_1_reg_245 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter7_curr_output_data_sub_data_2_V_1_reg_245 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter8_curr_output_data_sub_data_2_V_1_reg_245 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_curr_output_data_sub_data_3_V_1_phi_fu_257_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter8_curr_output_data_sub_data_3_V_1_reg_254 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_curr_output_data_sub_data_3_V_1_reg_254 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_curr_output_data_sub_data_3_V_1_reg_254 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_curr_output_data_sub_data_3_V_1_reg_254 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_curr_output_data_sub_data_3_V_1_reg_254 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_curr_output_data_sub_data_3_V_1_reg_254 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter5_curr_output_data_sub_data_3_V_1_reg_254 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter6_curr_output_data_sub_data_3_V_1_reg_254 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter7_curr_output_data_sub_data_3_V_1_reg_254 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_logistic_activate_fu_263_ap_start_reg : STD_LOGIC := '0';
    signal ap_predicate_op106_call_state2_state1 : BOOLEAN;
    signal ap_predicate_op123_call_state3_state2 : BOOLEAN;
    signal ap_predicate_op132_call_state4_state3 : BOOLEAN;
    signal ap_predicate_op147_call_state5_state4 : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal input_ch_idx_fu_150 : STD_LOGIC_VECTOR (3 downto 0);
    signal input_ch_idx_1_fu_690_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_input_ch_idx_load : STD_LOGIC_VECTOR (3 downto 0);
    signal col_idx_fu_154 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln1027_1_fu_509_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten_fu_158 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln1027_2_fu_700_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (8 downto 0);
    signal row_idx_fu_162 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln1027_fu_480_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten15_fu_166 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_sig_allocacmp_indvar_flatten15_load : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal zext_ln3_cast_fu_299_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln20_fu_361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln14_fu_355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln17_fu_373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln31_fu_387_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln779_fu_399_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal shl_ln779_fu_403_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal and_ln779_fu_409_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal row_idx_cast_fu_427_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal col_idx_cast_fu_436_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln14_fu_452_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal row_idx_cast_mid1_fu_458_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal cmp_i_i27_mid1_fu_462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i27_fu_431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i36_fu_440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln14_fu_445_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal col_idx_3_fu_487_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal col_idx_cast_mid1_fu_493_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal cmp_i_i36_mid1_fu_497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln14_2_fu_474_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln36_fu_551_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln779_1_fu_556_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln779_1_fu_560_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln779_1_fu_566_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln14_1_fu_467_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_fu_577_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln57_fu_582_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln17_1_fu_502_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln41_fu_638_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln779_2_fu_643_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln779_2_fu_647_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln779_2_fu_653_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln46_fu_664_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln779_3_fu_669_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln779_3_fu_673_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln779_3_fu_679_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln1027_fu_695_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_6_fu_717_p12 : STD_LOGIC_VECTOR (109 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter7_stage1 : STD_LOGIC;
    signal ap_idle_pp0_0to6 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to8 : STD_LOGIC;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_832 : BOOLEAN;
    signal ap_condition_307 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component yolo_yolo_top_logistic_activate IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        val_in : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component yolo_yolo_top_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    grp_logistic_activate_fu_263 : component yolo_yolo_top_logistic_activate
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_logistic_activate_fu_263_ap_start,
        ap_done => grp_logistic_activate_fu_263_ap_done,
        ap_idle => grp_logistic_activate_fu_263_ap_idle,
        ap_ready => grp_logistic_activate_fu_263_ap_ready,
        ap_ce => grp_logistic_activate_fu_263_ap_ce,
        val_in => grp_logistic_activate_fu_263_val_in,
        ap_return => grp_logistic_activate_fu_263_ap_return);

    flow_control_loop_pipe_sequential_init_U : component yolo_yolo_top_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage3,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage3)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    grp_logistic_activate_fu_263_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_logistic_activate_fu_263_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_predicate_op147_call_state5_state4 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_predicate_op132_call_state4_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_predicate_op123_call_state3_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_predicate_op106_call_state2_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                    grp_logistic_activate_fu_263_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_logistic_activate_fu_263_ap_ready = ap_const_logic_1)) then 
                    grp_logistic_activate_fu_263_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage1) and (ap_idle_pp0_0to6 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage1) and (ap_idle_pp0_0to6 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage1) and (ap_idle_pp0_0to6 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter4_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage1) and (ap_idle_pp0_0to6 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter5_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage1) and (ap_idle_pp0_0to6 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter6_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage1) and (ap_idle_pp0_0to6 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter7_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage1) and (ap_idle_pp0_0to6 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_curr_output_data_sub_data_3_V_1_reg_254_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_832)) then
                if (((icmp_ln1027_reg_808 = ap_const_lv1_0) and (p_Result_3_fu_684_p2 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_curr_output_data_sub_data_3_V_1_reg_254 <= curr_input_data_sub_data_3_V_reg_867;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_curr_output_data_sub_data_3_V_1_reg_254 <= ap_phi_reg_pp0_iter0_curr_output_data_sub_data_3_V_1_reg_254;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter7_curr_output_data_sub_data_0_V_1_reg_225_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (p_Result_s_reg_845_pp0_iter7_reg = ap_const_lv1_0) and (icmp_ln1027_reg_808_pp0_iter7_reg = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter7_curr_output_data_sub_data_0_V_1_reg_225 <= grp_logistic_activate_fu_263_ap_return;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_phi_reg_pp0_iter7_curr_output_data_sub_data_0_V_1_reg_225 <= ap_phi_reg_pp0_iter6_curr_output_data_sub_data_0_V_1_reg_225;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter8_curr_output_data_sub_data_1_V_1_reg_235_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_307)) then
                if (((p_Result_1_reg_873_pp0_iter7_reg = ap_const_lv1_0) and (icmp_ln1027_reg_808_pp0_iter7_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter8_curr_output_data_sub_data_1_V_1_reg_235 <= grp_logistic_activate_fu_263_ap_return;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter8_curr_output_data_sub_data_1_V_1_reg_235 <= ap_phi_reg_pp0_iter7_curr_output_data_sub_data_1_V_1_reg_235;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter8_curr_output_data_sub_data_2_V_1_reg_245_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (p_Result_2_reg_897_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1027_reg_808_pp0_iter7_reg = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter8_curr_output_data_sub_data_2_V_1_reg_245 <= grp_logistic_activate_fu_263_ap_return;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_phi_reg_pp0_iter8_curr_output_data_sub_data_2_V_1_reg_245 <= ap_phi_reg_pp0_iter7_curr_output_data_sub_data_2_V_1_reg_245;
            end if; 
        end if;
    end process;

    col_idx_fu_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                col_idx_fu_154 <= ap_const_lv5_0;
            elsif (((icmp_ln1027_reg_808 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                col_idx_fu_154 <= select_ln1027_1_fu_509_p3;
            end if; 
        end if;
    end process;

    indvar_flatten15_fu_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                indvar_flatten15_fu_166 <= ap_const_lv13_0;
            elsif (((icmp_ln1027_reg_808 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                indvar_flatten15_fu_166 <= add_ln1027_1_reg_812;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                indvar_flatten_fu_158 <= ap_const_lv9_0;
            elsif (((icmp_ln1027_reg_808 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                indvar_flatten_fu_158 <= select_ln1027_2_fu_700_p3;
            end if; 
        end if;
    end process;

    input_ch_idx_fu_150_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                input_ch_idx_fu_150 <= ap_const_lv4_0;
            elsif (((icmp_ln1027_reg_808 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                input_ch_idx_fu_150 <= input_ch_idx_1_fu_690_p2;
            end if; 
        end if;
    end process;

    row_idx_fu_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                row_idx_fu_162 <= ap_const_lv5_0;
            elsif (((icmp_ln1027_reg_808 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                row_idx_fu_162 <= select_ln1027_fu_480_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln1027_1_reg_812 <= add_ln1027_1_fu_340_p2;
                icmp_ln1027_reg_808 <= icmp_ln1027_fu_334_p2;
                icmp_ln1027_reg_808_pp0_iter1_reg <= icmp_ln1027_reg_808;
                icmp_ln1027_reg_808_pp0_iter2_reg <= icmp_ln1027_reg_808_pp0_iter1_reg;
                icmp_ln1027_reg_808_pp0_iter3_reg <= icmp_ln1027_reg_808_pp0_iter2_reg;
                icmp_ln1027_reg_808_pp0_iter4_reg <= icmp_ln1027_reg_808_pp0_iter3_reg;
                icmp_ln1027_reg_808_pp0_iter5_reg <= icmp_ln1027_reg_808_pp0_iter4_reg;
                icmp_ln1027_reg_808_pp0_iter6_reg <= icmp_ln1027_reg_808_pp0_iter5_reg;
                icmp_ln1027_reg_808_pp0_iter7_reg <= icmp_ln1027_reg_808_pp0_iter6_reg;
                icmp_ln1027_reg_808_pp0_iter8_reg <= icmp_ln1027_reg_808_pp0_iter7_reg;
                indvar_flatten_load_reg_803 <= ap_sig_allocacmp_indvar_flatten_load;
                p_Result_s_reg_845_pp0_iter1_reg <= p_Result_s_reg_845;
                p_Result_s_reg_845_pp0_iter2_reg <= p_Result_s_reg_845_pp0_iter1_reg;
                p_Result_s_reg_845_pp0_iter3_reg <= p_Result_s_reg_845_pp0_iter2_reg;
                p_Result_s_reg_845_pp0_iter4_reg <= p_Result_s_reg_845_pp0_iter3_reg;
                p_Result_s_reg_845_pp0_iter5_reg <= p_Result_s_reg_845_pp0_iter4_reg;
                p_Result_s_reg_845_pp0_iter6_reg <= p_Result_s_reg_845_pp0_iter5_reg;
                p_Result_s_reg_845_pp0_iter7_reg <= p_Result_s_reg_845_pp0_iter6_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1027_fu_334_p2 = ap_const_lv1_0))) then
                and_ln14_reg_826 <= and_ln14_fu_367_p2;
                icmp_ln1027_1_reg_817 <= icmp_ln1027_1_fu_349_p2;
                p_Result_s_reg_845 <= p_Result_s_fu_415_p2;
                select_ln17_reg_832 <= select_ln17_fu_379_p3;
                    shl_ln_reg_838(4 downto 2) <= shl_ln_fu_391_p3(4 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_808 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (p_Result_s_reg_845 = ap_const_lv1_1))) then
                ap_phi_reg_pp0_iter0_curr_output_data_sub_data_0_V_1_reg_225 <= curr_input_data_sub_data_0_V_fu_516_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_808 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (p_Result_1_fu_571_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                ap_phi_reg_pp0_iter0_curr_output_data_sub_data_1_V_1_reg_235 <= inStream_TDATA(31 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_808 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (p_Result_2_fu_658_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                ap_phi_reg_pp0_iter0_curr_output_data_sub_data_2_V_1_reg_245 <= curr_input_data_sub_data_2_V_reg_861;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ap_phi_reg_pp0_iter1_curr_output_data_sub_data_0_V_1_reg_225 <= ap_phi_reg_pp0_iter0_curr_output_data_sub_data_0_V_1_reg_225;
                ap_phi_reg_pp0_iter1_curr_output_data_sub_data_1_V_1_reg_235 <= ap_phi_reg_pp0_iter0_curr_output_data_sub_data_1_V_1_reg_235;
                ap_phi_reg_pp0_iter1_curr_output_data_sub_data_2_V_1_reg_245 <= ap_phi_reg_pp0_iter0_curr_output_data_sub_data_2_V_1_reg_245;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ap_phi_reg_pp0_iter2_curr_output_data_sub_data_0_V_1_reg_225 <= ap_phi_reg_pp0_iter1_curr_output_data_sub_data_0_V_1_reg_225;
                ap_phi_reg_pp0_iter2_curr_output_data_sub_data_1_V_1_reg_235 <= ap_phi_reg_pp0_iter1_curr_output_data_sub_data_1_V_1_reg_235;
                ap_phi_reg_pp0_iter2_curr_output_data_sub_data_2_V_1_reg_245 <= ap_phi_reg_pp0_iter1_curr_output_data_sub_data_2_V_1_reg_245;
                ap_phi_reg_pp0_iter2_curr_output_data_sub_data_3_V_1_reg_254 <= ap_phi_reg_pp0_iter1_curr_output_data_sub_data_3_V_1_reg_254;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ap_phi_reg_pp0_iter3_curr_output_data_sub_data_0_V_1_reg_225 <= ap_phi_reg_pp0_iter2_curr_output_data_sub_data_0_V_1_reg_225;
                ap_phi_reg_pp0_iter3_curr_output_data_sub_data_1_V_1_reg_235 <= ap_phi_reg_pp0_iter2_curr_output_data_sub_data_1_V_1_reg_235;
                ap_phi_reg_pp0_iter3_curr_output_data_sub_data_2_V_1_reg_245 <= ap_phi_reg_pp0_iter2_curr_output_data_sub_data_2_V_1_reg_245;
                ap_phi_reg_pp0_iter3_curr_output_data_sub_data_3_V_1_reg_254 <= ap_phi_reg_pp0_iter2_curr_output_data_sub_data_3_V_1_reg_254;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ap_phi_reg_pp0_iter4_curr_output_data_sub_data_0_V_1_reg_225 <= ap_phi_reg_pp0_iter3_curr_output_data_sub_data_0_V_1_reg_225;
                ap_phi_reg_pp0_iter4_curr_output_data_sub_data_1_V_1_reg_235 <= ap_phi_reg_pp0_iter3_curr_output_data_sub_data_1_V_1_reg_235;
                ap_phi_reg_pp0_iter4_curr_output_data_sub_data_2_V_1_reg_245 <= ap_phi_reg_pp0_iter3_curr_output_data_sub_data_2_V_1_reg_245;
                ap_phi_reg_pp0_iter4_curr_output_data_sub_data_3_V_1_reg_254 <= ap_phi_reg_pp0_iter3_curr_output_data_sub_data_3_V_1_reg_254;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ap_phi_reg_pp0_iter5_curr_output_data_sub_data_0_V_1_reg_225 <= ap_phi_reg_pp0_iter4_curr_output_data_sub_data_0_V_1_reg_225;
                ap_phi_reg_pp0_iter5_curr_output_data_sub_data_1_V_1_reg_235 <= ap_phi_reg_pp0_iter4_curr_output_data_sub_data_1_V_1_reg_235;
                ap_phi_reg_pp0_iter5_curr_output_data_sub_data_2_V_1_reg_245 <= ap_phi_reg_pp0_iter4_curr_output_data_sub_data_2_V_1_reg_245;
                ap_phi_reg_pp0_iter5_curr_output_data_sub_data_3_V_1_reg_254 <= ap_phi_reg_pp0_iter4_curr_output_data_sub_data_3_V_1_reg_254;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ap_phi_reg_pp0_iter6_curr_output_data_sub_data_0_V_1_reg_225 <= ap_phi_reg_pp0_iter5_curr_output_data_sub_data_0_V_1_reg_225;
                ap_phi_reg_pp0_iter6_curr_output_data_sub_data_1_V_1_reg_235 <= ap_phi_reg_pp0_iter5_curr_output_data_sub_data_1_V_1_reg_235;
                ap_phi_reg_pp0_iter6_curr_output_data_sub_data_2_V_1_reg_245 <= ap_phi_reg_pp0_iter5_curr_output_data_sub_data_2_V_1_reg_245;
                ap_phi_reg_pp0_iter6_curr_output_data_sub_data_3_V_1_reg_254 <= ap_phi_reg_pp0_iter5_curr_output_data_sub_data_3_V_1_reg_254;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ap_phi_reg_pp0_iter7_curr_output_data_sub_data_1_V_1_reg_235 <= ap_phi_reg_pp0_iter6_curr_output_data_sub_data_1_V_1_reg_235;
                ap_phi_reg_pp0_iter7_curr_output_data_sub_data_2_V_1_reg_245 <= ap_phi_reg_pp0_iter6_curr_output_data_sub_data_2_V_1_reg_245;
                ap_phi_reg_pp0_iter7_curr_output_data_sub_data_3_V_1_reg_254 <= ap_phi_reg_pp0_iter6_curr_output_data_sub_data_3_V_1_reg_254;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ap_phi_reg_pp0_iter8_curr_output_data_sub_data_3_V_1_reg_254 <= ap_phi_reg_pp0_iter7_curr_output_data_sub_data_3_V_1_reg_254;
                curr_output_data_sub_data_0_V_1_reg_225 <= ap_phi_reg_pp0_iter7_curr_output_data_sub_data_0_V_1_reg_225;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_808 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                curr_input_data_sub_data_1_V_reg_855 <= inStream_TDATA(31 downto 16);
                curr_input_data_sub_data_2_V_reg_861 <= inStream_TDATA(47 downto 32);
                curr_input_data_sub_data_3_V_reg_867 <= inStream_TDATA(63 downto 48);
                curr_output_last_V_reg_877 <= curr_output_last_V_fu_588_p2;
                p_Result_1_reg_873 <= p_Result_1_fu_571_p2;
                tmp_1_reg_887 <= inStream_TDATA(100 downto 96);
                tmp_4_reg_892 <= inStream_TDATA(81 downto 64);
                tmp_s_reg_882 <= inStream_TDATA(109 downto 104);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                curr_output_data_sub_data_1_V_1_reg_235 <= ap_phi_reg_pp0_iter8_curr_output_data_sub_data_1_V_1_reg_235;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                curr_output_last_V_reg_877_pp0_iter1_reg <= curr_output_last_V_reg_877;
                curr_output_last_V_reg_877_pp0_iter2_reg <= curr_output_last_V_reg_877_pp0_iter1_reg;
                curr_output_last_V_reg_877_pp0_iter3_reg <= curr_output_last_V_reg_877_pp0_iter2_reg;
                curr_output_last_V_reg_877_pp0_iter4_reg <= curr_output_last_V_reg_877_pp0_iter3_reg;
                curr_output_last_V_reg_877_pp0_iter5_reg <= curr_output_last_V_reg_877_pp0_iter4_reg;
                curr_output_last_V_reg_877_pp0_iter6_reg <= curr_output_last_V_reg_877_pp0_iter5_reg;
                curr_output_last_V_reg_877_pp0_iter7_reg <= curr_output_last_V_reg_877_pp0_iter6_reg;
                p_Result_1_reg_873_pp0_iter1_reg <= p_Result_1_reg_873;
                p_Result_1_reg_873_pp0_iter2_reg <= p_Result_1_reg_873_pp0_iter1_reg;
                p_Result_1_reg_873_pp0_iter3_reg <= p_Result_1_reg_873_pp0_iter2_reg;
                p_Result_1_reg_873_pp0_iter4_reg <= p_Result_1_reg_873_pp0_iter3_reg;
                p_Result_1_reg_873_pp0_iter5_reg <= p_Result_1_reg_873_pp0_iter4_reg;
                p_Result_1_reg_873_pp0_iter6_reg <= p_Result_1_reg_873_pp0_iter5_reg;
                p_Result_1_reg_873_pp0_iter7_reg <= p_Result_1_reg_873_pp0_iter6_reg;
                tmp_1_reg_887_pp0_iter1_reg <= tmp_1_reg_887;
                tmp_1_reg_887_pp0_iter2_reg <= tmp_1_reg_887_pp0_iter1_reg;
                tmp_1_reg_887_pp0_iter3_reg <= tmp_1_reg_887_pp0_iter2_reg;
                tmp_1_reg_887_pp0_iter4_reg <= tmp_1_reg_887_pp0_iter3_reg;
                tmp_1_reg_887_pp0_iter5_reg <= tmp_1_reg_887_pp0_iter4_reg;
                tmp_1_reg_887_pp0_iter6_reg <= tmp_1_reg_887_pp0_iter5_reg;
                tmp_1_reg_887_pp0_iter7_reg <= tmp_1_reg_887_pp0_iter6_reg;
                tmp_4_reg_892_pp0_iter1_reg <= tmp_4_reg_892;
                tmp_4_reg_892_pp0_iter2_reg <= tmp_4_reg_892_pp0_iter1_reg;
                tmp_4_reg_892_pp0_iter3_reg <= tmp_4_reg_892_pp0_iter2_reg;
                tmp_4_reg_892_pp0_iter4_reg <= tmp_4_reg_892_pp0_iter3_reg;
                tmp_4_reg_892_pp0_iter5_reg <= tmp_4_reg_892_pp0_iter4_reg;
                tmp_4_reg_892_pp0_iter6_reg <= tmp_4_reg_892_pp0_iter5_reg;
                tmp_4_reg_892_pp0_iter7_reg <= tmp_4_reg_892_pp0_iter6_reg;
                tmp_s_reg_882_pp0_iter1_reg <= tmp_s_reg_882;
                tmp_s_reg_882_pp0_iter2_reg <= tmp_s_reg_882_pp0_iter1_reg;
                tmp_s_reg_882_pp0_iter3_reg <= tmp_s_reg_882_pp0_iter2_reg;
                tmp_s_reg_882_pp0_iter4_reg <= tmp_s_reg_882_pp0_iter3_reg;
                tmp_s_reg_882_pp0_iter5_reg <= tmp_s_reg_882_pp0_iter4_reg;
                tmp_s_reg_882_pp0_iter6_reg <= tmp_s_reg_882_pp0_iter5_reg;
                tmp_s_reg_882_pp0_iter7_reg <= tmp_s_reg_882_pp0_iter6_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_808 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                p_Result_2_reg_897 <= p_Result_2_fu_658_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                p_Result_2_reg_897_pp0_iter1_reg <= p_Result_2_reg_897;
                p_Result_2_reg_897_pp0_iter2_reg <= p_Result_2_reg_897_pp0_iter1_reg;
                p_Result_2_reg_897_pp0_iter3_reg <= p_Result_2_reg_897_pp0_iter2_reg;
                p_Result_2_reg_897_pp0_iter4_reg <= p_Result_2_reg_897_pp0_iter3_reg;
                p_Result_2_reg_897_pp0_iter5_reg <= p_Result_2_reg_897_pp0_iter4_reg;
                p_Result_2_reg_897_pp0_iter6_reg <= p_Result_2_reg_897_pp0_iter5_reg;
                p_Result_2_reg_897_pp0_iter7_reg <= p_Result_2_reg_897_pp0_iter6_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_808 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                p_Result_3_reg_901 <= p_Result_3_fu_684_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                p_Result_3_reg_901_pp0_iter1_reg <= p_Result_3_reg_901;
                p_Result_3_reg_901_pp0_iter2_reg <= p_Result_3_reg_901_pp0_iter1_reg;
                p_Result_3_reg_901_pp0_iter3_reg <= p_Result_3_reg_901_pp0_iter2_reg;
                p_Result_3_reg_901_pp0_iter4_reg <= p_Result_3_reg_901_pp0_iter3_reg;
                p_Result_3_reg_901_pp0_iter5_reg <= p_Result_3_reg_901_pp0_iter4_reg;
                p_Result_3_reg_901_pp0_iter6_reg <= p_Result_3_reg_901_pp0_iter5_reg;
                p_Result_3_reg_901_pp0_iter7_reg <= p_Result_3_reg_901_pp0_iter6_reg;
            end if;
        end if;
    end process;
    shl_ln_reg_838(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage3_subdone, ap_block_pp0_stage1_subdone, ap_condition_exit_pp0_iter7_stage1, ap_idle_pp0_0to6, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to8, ap_block_pp0_stage2_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to8 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if (((ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage1) and (ap_idle_pp0_0to6 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add_ln1027_1_fu_340_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten15_load) + unsigned(ap_const_lv13_1));
    add_ln1027_fu_695_p2 <= std_logic_vector(unsigned(indvar_flatten_load_reg_803) + unsigned(ap_const_lv9_1));
    add_ln14_fu_452_p2 <= std_logic_vector(unsigned(row_idx_fu_162) + unsigned(ap_const_lv5_1));
    and_ln14_fu_367_p2 <= (xor_ln14_fu_355_p2 and icmp_ln20_fu_361_p2);
    and_ln57_fu_582_p2 <= (select_ln14_1_fu_467_p3 and icmp_ln56_fu_577_p2);
    and_ln779_1_fu_566_p2 <= (shl_ln779_1_fu_560_p2 and activate_en);
    and_ln779_2_fu_653_p2 <= (shl_ln779_2_fu_647_p2 and activate_en);
    and_ln779_3_fu_679_p2 <= (shl_ln779_3_fu_673_p2 and activate_en);
    and_ln779_fu_409_p2 <= (trunc_ln3 and shl_ln779_fu_403_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp144 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter8, icmp_ln1027_reg_808, outStream_TREADY, inStream_TVALID)
    begin
                ap_block_pp0_stage1_01001 <= (((outStream_TREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)) or ((inStream_TVALID = ap_const_logic_0) and (icmp_ln1027_reg_808 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter8, icmp_ln1027_reg_808, outStream_TREADY, inStream_TVALID)
    begin
                ap_block_pp0_stage1_11001 <= (((outStream_TREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)) or ((inStream_TVALID = ap_const_logic_0) and (icmp_ln1027_reg_808 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage1_11001_ignoreCallOp106_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter8, icmp_ln1027_reg_808, outStream_TREADY, inStream_TVALID)
    begin
                ap_block_pp0_stage1_11001_ignoreCallOp106 <= (((outStream_TREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)) or ((inStream_TVALID = ap_const_logic_0) and (icmp_ln1027_reg_808 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter8, icmp_ln1027_reg_808, outStream_TREADY, inStream_TVALID)
    begin
                ap_block_pp0_stage1_subdone <= (((outStream_TREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)) or ((inStream_TVALID = ap_const_logic_0) and (icmp_ln1027_reg_808 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001_ignoreCallOp122 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001_ignoreCallOp130 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter2_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage2_iter2_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage3_iter2_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter3_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter3_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage2_iter3_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage3_iter3_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter4_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter4_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage2_iter4_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage3_iter4_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter5_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage1_iter5_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage2_iter5_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage3_iter5_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter6_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage1_iter6_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage2_iter6_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage3_iter6_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter7_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage1_iter0_assign_proc : process(icmp_ln1027_reg_808, inStream_TVALID)
    begin
                ap_block_state2_pp0_stage1_iter0 <= ((inStream_TVALID = ap_const_logic_0) and (icmp_ln1027_reg_808 = ap_const_lv1_0));
    end process;


    ap_block_state2_pp0_stage1_iter0_ignore_call0_assign_proc : process(icmp_ln1027_reg_808, inStream_TVALID)
    begin
                ap_block_state2_pp0_stage1_iter0_ignore_call0 <= ((inStream_TVALID = ap_const_logic_0) and (icmp_ln1027_reg_808 = ap_const_lv1_0));
    end process;

        ap_block_state30_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage1_iter7_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage2_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage2_iter7_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage3_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage3_iter7_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage0_iter8_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state34_pp0_stage1_iter8_assign_proc : process(outStream_TREADY)
    begin
                ap_block_state34_pp0_stage1_iter8 <= (outStream_TREADY = ap_const_logic_0);
    end process;


    ap_block_state34_pp0_stage1_iter8_ignore_call0_assign_proc : process(outStream_TREADY)
    begin
                ap_block_state34_pp0_stage1_iter8_ignore_call0 <= (outStream_TREADY = ap_const_logic_0);
    end process;

        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage2_iter1_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage3_iter1_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter2_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_307_assign_proc : process(ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
                ap_condition_307 <= ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3));
    end process;


    ap_condition_832_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
                ap_condition_832 <= ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3));
    end process;


    ap_condition_exit_pp0_iter0_stage3_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone, icmp_ln1027_reg_808)
    begin
        if (((icmp_ln1027_reg_808 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_condition_exit_pp0_iter0_stage3 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter7_stage1_assign_proc : process(ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, icmp_ln1027_reg_808_pp0_iter7_reg, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln1027_reg_808_pp0_iter7_reg = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter7_stage1 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter7_stage1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter7_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to6_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to6 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to8_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to8 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to8 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage3;

    ap_phi_mux_curr_output_data_sub_data_3_V_1_phi_fu_257_p4_assign_proc : process(icmp_ln1027_reg_808_pp0_iter8_reg, p_Result_3_reg_901_pp0_iter7_reg, grp_logistic_activate_fu_263_ap_return, ap_phi_reg_pp0_iter8_curr_output_data_sub_data_3_V_1_reg_254)
    begin
        if (((p_Result_3_reg_901_pp0_iter7_reg = ap_const_lv1_0) and (icmp_ln1027_reg_808_pp0_iter8_reg = ap_const_lv1_0))) then 
            ap_phi_mux_curr_output_data_sub_data_3_V_1_phi_fu_257_p4 <= grp_logistic_activate_fu_263_ap_return;
        else 
            ap_phi_mux_curr_output_data_sub_data_3_V_1_phi_fu_257_p4 <= ap_phi_reg_pp0_iter8_curr_output_data_sub_data_3_V_1_reg_254;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_curr_output_data_sub_data_3_V_1_reg_254 <= "XXXXXXXXXXXXXXXX";

    ap_predicate_op106_call_state2_assign_proc : process(icmp_ln1027_reg_808, p_Result_s_reg_845)
    begin
                ap_predicate_op106_call_state2 <= ((icmp_ln1027_reg_808 = ap_const_lv1_0) and (p_Result_s_reg_845 = ap_const_lv1_0));
    end process;


    ap_predicate_op106_call_state2_state1_assign_proc : process(icmp_ln1027_fu_334_p2, p_Result_s_fu_415_p2)
    begin
                ap_predicate_op106_call_state2_state1 <= ((p_Result_s_fu_415_p2 = ap_const_lv1_0) and (icmp_ln1027_fu_334_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op123_call_state3_assign_proc : process(icmp_ln1027_reg_808, p_Result_1_reg_873)
    begin
                ap_predicate_op123_call_state3 <= ((icmp_ln1027_reg_808 = ap_const_lv1_0) and (p_Result_1_reg_873 = ap_const_lv1_0));
    end process;


    ap_predicate_op123_call_state3_state2_assign_proc : process(icmp_ln1027_reg_808, p_Result_1_fu_571_p2)
    begin
                ap_predicate_op123_call_state3_state2 <= ((icmp_ln1027_reg_808 = ap_const_lv1_0) and (p_Result_1_fu_571_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op132_call_state4_assign_proc : process(icmp_ln1027_reg_808, p_Result_2_reg_897)
    begin
                ap_predicate_op132_call_state4 <= ((icmp_ln1027_reg_808 = ap_const_lv1_0) and (p_Result_2_reg_897 = ap_const_lv1_0));
    end process;


    ap_predicate_op132_call_state4_state3_assign_proc : process(icmp_ln1027_reg_808, p_Result_2_fu_658_p2)
    begin
                ap_predicate_op132_call_state4_state3 <= ((icmp_ln1027_reg_808 = ap_const_lv1_0) and (p_Result_2_fu_658_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op147_call_state5_assign_proc : process(icmp_ln1027_reg_808, p_Result_3_reg_901)
    begin
                ap_predicate_op147_call_state5 <= ((icmp_ln1027_reg_808 = ap_const_lv1_0) and (p_Result_3_reg_901 = ap_const_lv1_0));
    end process;


    ap_predicate_op147_call_state5_state4_assign_proc : process(icmp_ln1027_reg_808, p_Result_3_fu_684_p2)
    begin
                ap_predicate_op147_call_state5_state4 <= ((icmp_ln1027_reg_808 = ap_const_lv1_0) and (p_Result_3_fu_684_p2 = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten15_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten15_fu_166)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_indvar_flatten15_load <= ap_const_lv13_0;
        else 
            ap_sig_allocacmp_indvar_flatten15_load <= indvar_flatten15_fu_166;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten_fu_158)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv9_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_158;
        end if; 
    end process;


    ap_sig_allocacmp_input_ch_idx_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, input_ch_idx_fu_150, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_input_ch_idx_load <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_input_ch_idx_load <= input_ch_idx_fu_150;
        end if; 
    end process;

    cmp_i_i27_fu_431_p2 <= "1" when (sub_i_i = row_idx_cast_fu_427_p1) else "0";
    cmp_i_i27_mid1_fu_462_p2 <= "1" when (sub_i_i = row_idx_cast_mid1_fu_458_p1) else "0";
    cmp_i_i36_fu_440_p2 <= "1" when (sub_i_i59 = col_idx_cast_fu_436_p1) else "0";
    cmp_i_i36_mid1_fu_497_p2 <= "1" when (sub_i_i59 = col_idx_cast_mid1_fu_493_p1) else "0";
    col_idx_3_fu_487_p2 <= std_logic_vector(unsigned(select_ln14_fu_445_p3) + unsigned(ap_const_lv5_1));
    col_idx_cast_fu_436_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_idx_fu_154),6));
    col_idx_cast_mid1_fu_493_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_idx_3_fu_487_p2),6));
    curr_input_data_sub_data_0_V_fu_516_p1 <= inStream_TDATA(16 - 1 downto 0);
    curr_output_last_V_fu_588_p2 <= (select_ln17_1_fu_502_p3 and and_ln57_fu_582_p2);

    grp_logistic_activate_fu_263_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1_11001_ignoreCallOp106, ap_block_pp0_stage2_11001_ignoreCallOp122, ap_block_pp0_stage3_11001_ignoreCallOp130, ap_block_pp0_stage0_11001_ignoreCallOp144)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp144) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001_ignoreCallOp130) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001_ignoreCallOp122) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp106) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_logistic_activate_fu_263_ap_ce <= ap_const_logic_1;
        else 
            grp_logistic_activate_fu_263_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_logistic_activate_fu_263_ap_start <= grp_logistic_activate_fu_263_ap_start_reg;

    grp_logistic_activate_fu_263_val_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, curr_input_data_sub_data_0_V_fu_516_p1, curr_input_data_sub_data_1_V_reg_855, curr_input_data_sub_data_2_V_reg_861, curr_input_data_sub_data_3_V_reg_867, ap_CS_fsm_pp0_stage2, ap_predicate_op106_call_state2, ap_predicate_op123_call_state3, ap_predicate_op132_call_state4, ap_predicate_op147_call_state5, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op147_call_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_logistic_activate_fu_263_val_in <= curr_input_data_sub_data_3_V_reg_867;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_predicate_op132_call_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_logistic_activate_fu_263_val_in <= curr_input_data_sub_data_2_V_reg_861;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_predicate_op123_call_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_logistic_activate_fu_263_val_in <= curr_input_data_sub_data_1_V_reg_855;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_predicate_op106_call_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_logistic_activate_fu_263_val_in <= curr_input_data_sub_data_0_V_fu_516_p1;
        else 
            grp_logistic_activate_fu_263_val_in <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln1027_1_fu_349_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = zext_ln3_cast_fu_299_p1) else "0";
    icmp_ln1027_fu_334_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten15_load = mul_ln3) else "0";
    icmp_ln20_fu_361_p2 <= "1" when (ap_sig_allocacmp_input_ch_idx_load = ap_const_lv4_8) else "0";
    icmp_ln56_fu_577_p2 <= "1" when (select_ln17_reg_832 = ap_const_lv4_7) else "0";

    inStream_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln1027_reg_808, inStream_TVALID, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
        if (((icmp_ln1027_reg_808 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            inStream_TDATA_blk_n <= inStream_TVALID;
        else 
            inStream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    inStream_TREADY_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln1027_reg_808, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((icmp_ln1027_reg_808 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            inStream_TREADY <= ap_const_logic_1;
        else 
            inStream_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    input_ch_idx_1_fu_690_p2 <= std_logic_vector(unsigned(select_ln17_reg_832) + unsigned(ap_const_lv4_1));
    or_ln17_fu_373_p2 <= (icmp_ln1027_1_fu_349_p2 or and_ln14_fu_367_p2);
    or_ln36_fu_551_p2 <= (shl_ln_reg_838 or ap_const_lv5_1);
    or_ln41_fu_638_p2 <= (shl_ln_reg_838 or ap_const_lv5_2);
    or_ln46_fu_664_p2 <= (shl_ln_reg_838 or ap_const_lv5_3);
    outStream_TDATA <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_717_p12),112));

    outStream_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter8, outStream_TREADY, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            outStream_TDATA_blk_n <= outStream_TREADY;
        else 
            outStream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    outStream_TVALID_assign_proc : process(ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            outStream_TVALID <= ap_const_logic_1;
        else 
            outStream_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_1_fu_571_p2 <= "1" when (and_ln779_1_fu_566_p2 = ap_const_lv32_0) else "0";
    p_Result_2_fu_658_p2 <= "1" when (and_ln779_2_fu_653_p2 = ap_const_lv32_0) else "0";
    p_Result_3_fu_684_p2 <= "1" when (and_ln779_3_fu_679_p2 = ap_const_lv32_0) else "0";
    p_Result_s_fu_415_p2 <= "1" when (and_ln779_fu_409_p2 = ap_const_lv29_0) else "0";
    row_idx_cast_fu_427_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(row_idx_fu_162),6));
    row_idx_cast_mid1_fu_458_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln14_fu_452_p2),6));
    select_ln1027_1_fu_509_p3 <= 
        col_idx_3_fu_487_p2 when (and_ln14_reg_826(0) = '1') else 
        select_ln14_fu_445_p3;
    select_ln1027_2_fu_700_p3 <= 
        ap_const_lv9_1 when (icmp_ln1027_1_reg_817(0) = '1') else 
        add_ln1027_fu_695_p2;
    select_ln1027_fu_480_p3 <= 
        add_ln14_fu_452_p2 when (icmp_ln1027_1_reg_817(0) = '1') else 
        row_idx_fu_162;
    select_ln14_1_fu_467_p3 <= 
        cmp_i_i27_mid1_fu_462_p2 when (icmp_ln1027_1_reg_817(0) = '1') else 
        cmp_i_i27_fu_431_p2;
    select_ln14_2_fu_474_p3 <= 
        cmp_i_i36_mid111 when (icmp_ln1027_1_reg_817(0) = '1') else 
        cmp_i_i36_fu_440_p2;
    select_ln14_fu_445_p3 <= 
        ap_const_lv5_0 when (icmp_ln1027_1_reg_817(0) = '1') else 
        col_idx_fu_154;
    select_ln17_1_fu_502_p3 <= 
        cmp_i_i36_mid1_fu_497_p2 when (and_ln14_reg_826(0) = '1') else 
        select_ln14_2_fu_474_p3;
    select_ln17_fu_379_p3 <= 
        ap_const_lv4_0 when (or_ln17_fu_373_p2(0) = '1') else 
        ap_sig_allocacmp_input_ch_idx_load;
    shl_ln779_1_fu_560_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & zext_ln779_1_fu_556_p1(31-1 downto 0)))));
    shl_ln779_2_fu_647_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & zext_ln779_2_fu_643_p1(31-1 downto 0)))));
    shl_ln779_3_fu_673_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & zext_ln779_3_fu_669_p1(31-1 downto 0)))));
    shl_ln779_fu_403_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv29_1),to_integer(unsigned('0' & zext_ln779_fu_399_p1(29-1 downto 0)))));
    shl_ln_fu_391_p3 <= (trunc_ln31_fu_387_p1 & ap_const_lv2_0);
    tmp_6_fu_717_p12 <= ((((((((((tmp_s_reg_882_pp0_iter7_reg & ap_const_lv3_0) & tmp_1_reg_887_pp0_iter7_reg) & ap_const_lv7_0) & curr_output_last_V_reg_877_pp0_iter7_reg) & ap_const_lv6_0) & tmp_4_reg_892_pp0_iter7_reg) & ap_phi_mux_curr_output_data_sub_data_3_V_1_phi_fu_257_p4) & ap_phi_reg_pp0_iter8_curr_output_data_sub_data_2_V_1_reg_245) & curr_output_data_sub_data_1_V_1_reg_235) & curr_output_data_sub_data_0_V_1_reg_225);
    trunc_ln31_fu_387_p1 <= select_ln17_fu_379_p3(3 - 1 downto 0);
    xor_ln14_fu_355_p2 <= (icmp_ln1027_1_fu_349_p2 xor ap_const_lv1_1);
    zext_ln3_cast_fu_299_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln3),9));
    zext_ln779_1_fu_556_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln36_fu_551_p2),32));
    zext_ln779_2_fu_643_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln41_fu_638_p2),32));
    zext_ln779_3_fu_669_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln46_fu_664_p2),32));
    zext_ln779_fu_399_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_391_p3),29));
end behav;
