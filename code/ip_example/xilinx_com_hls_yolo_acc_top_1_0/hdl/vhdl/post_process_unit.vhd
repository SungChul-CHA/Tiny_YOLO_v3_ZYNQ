-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity post_process_unit is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    data_in_V : IN STD_LOGIC_VECTOR (15 downto 0);
    bias_V : IN STD_LOGIC_VECTOR (15 downto 0);
    bias_en_V : IN STD_LOGIC_VECTOR (0 downto 0);
    leaky_V : IN STD_LOGIC_VECTOR (0 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of post_process_unit is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv16_7FFF : STD_LOGIC_VECTOR (15 downto 0) := "0111111111111111";
    constant ap_const_lv16_8000 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv22_1A : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000011010";

    signal leaky_V_read_reg_364 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal leaky_V_read_reg_364_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal bias_en_V_read_reg_369 : STD_LOGIC_VECTOR (0 downto 0);
    signal bias_en_V_read_reg_369_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal data_in_V_read_reg_375 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_V_read_reg_375_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal activated_output_V_fu_152_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal activated_output_V_reg_380 : STD_LOGIC_VECTOR (15 downto 0);
    signal activated_output_V_reg_380_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_fu_355_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_reg_387 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln718_fu_163_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln718_reg_395 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Result_9_reg_400 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_reg_406 : STD_LOGIC_VECTOR (0 downto 0);
    signal lhs_V_fu_70_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal rhs_V_fu_74_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal rhs_V_fu_74_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal lhs_V_fu_70_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_fu_78_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_16_fu_92_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_16_fu_92_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_16_fu_92_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_8_fu_98_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_84_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_fu_106_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_fu_124_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_8_fu_118_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_fu_112_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_fu_130_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_fu_136_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln388_fu_144_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln_fu_187_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_fu_207_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_200_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_218_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln412_fu_212_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln415_fu_225_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln713_fu_196_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln415_fu_231_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Val2_18_fu_235_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_14_fu_245_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_1_fu_253_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_272_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_2_fu_285_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln416_1_fu_290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_fu_279_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln416_fu_296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_1_fu_259_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_10_fu_264_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_fu_302_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_fu_307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_fu_312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_fu_318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln415_fu_241_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln97_fu_332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_180_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln97_1_fu_336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_4_fu_324_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln97_fu_342_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_fu_355_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln97_1_fu_349_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_ce_reg : STD_LOGIC;
    signal data_in_V_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_V_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_en_V_int_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal leaky_V_int_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_return_int_reg : STD_LOGIC_VECTOR (15 downto 0);

    component yolo_acc_top_mul_mul_6ns_16s_22_1_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;



begin
    yolo_acc_top_mul_mul_6ns_16s_22_1_0_U1 : component yolo_acc_top_mul_mul_6ns_16s_22_1_0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 16,
        dout_WIDTH => 22)
    port map (
        din0 => r_V_fu_355_p0,
        din1 => activated_output_V_reg_380,
        dout => r_V_fu_355_p2);





    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((bias_en_V_read_reg_369 = ap_const_lv1_1) and (ap_const_logic_1 = ap_ce_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                Range2_all_ones_reg_406 <= r_V_fu_355_p2(21 downto 21);
                p_Result_9_reg_400 <= r_V_fu_355_p2(21 downto 21);
                r_V_reg_387 <= r_V_fu_355_p2;
                trunc_ln718_reg_395 <= trunc_ln718_fu_163_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                activated_output_V_reg_380 <= activated_output_V_fu_152_p3;
                activated_output_V_reg_380_pp0_iter1_reg <= activated_output_V_reg_380;
                bias_en_V_read_reg_369 <= bias_en_V_int_reg;
                bias_en_V_read_reg_369_pp0_iter1_reg <= bias_en_V_read_reg_369;
                data_in_V_read_reg_375 <= data_in_V_int_reg;
                data_in_V_read_reg_375_pp0_iter1_reg <= data_in_V_read_reg_375;
                leaky_V_read_reg_364 <= leaky_V_int_reg;
                leaky_V_read_reg_364_pp0_iter1_reg <= leaky_V_read_reg_364;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_int_reg <= select_ln97_1_fu_349_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                bias_V_int_reg <= bias_V;
                bias_en_V_int_reg <= bias_en_V;
                data_in_V_int_reg <= data_in_V;
                leaky_V_int_reg <= leaky_V;
            end if;
        end if;
    end process;
    activated_output_V_fu_152_p3 <= 
        select_ln340_fu_136_p3 when (or_ln340_fu_130_p2(0) = '1') else 
        select_ln388_fu_144_p3;
    and_ln415_fu_225_p2 <= (tmp_13_fu_218_p3 and or_ln412_fu_212_p2);
    and_ln781_fu_307_p2 <= (carry_1_fu_259_p2 and Range2_all_ones_reg_406);
    and_ln786_fu_312_p2 <= (p_Result_10_fu_264_p3 and deleted_ones_fu_302_p2);
    and_ln97_1_fu_336_p2 <= (tmp_fu_180_p3 and and_ln97_fu_332_p2);
    and_ln97_fu_332_p2 <= (leaky_V_read_reg_364_pp0_iter1_reg and bias_en_V_read_reg_369_pp0_iter1_reg);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_assign_proc : process(select_ln97_1_fu_349_p3, ap_ce_reg, ap_return_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return <= ap_return_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return <= select_ln97_1_fu_349_p3;
        end if; 
    end process;

    carry_1_fu_259_p2 <= (xor_ln416_1_fu_253_p2 and p_Result_9_reg_400);
    deleted_ones_fu_302_p2 <= (or_ln416_fu_296_p2 and Range2_all_ones_reg_406);
    lhs_V_fu_70_p0 <= data_in_V_int_reg;
        lhs_V_fu_70_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_fu_70_p0),17));

    or_ln340_fu_130_p2 <= (xor_ln340_fu_124_p2 or p_Result_8_fu_98_p3);
    or_ln412_fu_212_p2 <= (tmp_11_fu_200_p3 or r_fu_207_p2);
    or_ln416_1_fu_290_p2 <= (xor_ln416_2_fu_285_p2 or tmp_14_fu_245_p3);
    or_ln416_fu_296_p2 <= (xor_ln779_fu_279_p2 or or_ln416_1_fu_290_p2);
    or_ln786_fu_318_p2 <= (and_ln786_fu_312_p2 or and_ln781_fu_307_p2);
    p_Result_10_fu_264_p3 <= p_Val2_18_fu_235_p2(14 downto 14);
    p_Result_8_fu_98_p3 <= p_Val2_16_fu_92_p2(15 downto 15);
    p_Result_s_fu_84_p3 <= ret_V_fu_78_p2(16 downto 16);
    p_Val2_16_fu_92_p0 <= data_in_V_int_reg;
    p_Val2_16_fu_92_p1 <= bias_V_int_reg;
    p_Val2_16_fu_92_p2 <= std_logic_vector(signed(p_Val2_16_fu_92_p0) + signed(p_Val2_16_fu_92_p1));
    p_Val2_18_fu_235_p2 <= std_logic_vector(signed(sext_ln713_fu_196_p1) + signed(zext_ln415_fu_231_p1));
    r_V_fu_355_p0 <= ap_const_lv22_1A(6 - 1 downto 0);
    r_fu_207_p2 <= "0" when (trunc_ln718_reg_395 = ap_const_lv7_0) else "1";
    ret_V_fu_78_p2 <= std_logic_vector(signed(rhs_V_fu_74_p1) + signed(lhs_V_fu_70_p1));
    rhs_V_fu_74_p0 <= bias_V_int_reg;
        rhs_V_fu_74_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_fu_74_p0),17));

    select_ln340_4_fu_324_p3 <= 
        sext_ln415_fu_241_p1 when (or_ln786_fu_318_p2(0) = '1') else 
        ap_const_lv16_8000;
    select_ln340_fu_136_p3 <= 
        ap_const_lv16_7FFF when (xor_ln340_8_fu_118_p2(0) = '1') else 
        p_Val2_16_fu_92_p2;
    select_ln388_fu_144_p3 <= 
        ap_const_lv16_8000 when (underflow_fu_112_p2(0) = '1') else 
        p_Val2_16_fu_92_p2;
    select_ln97_1_fu_349_p3 <= 
        select_ln97_fu_342_p3 when (bias_en_V_read_reg_369_pp0_iter1_reg(0) = '1') else 
        data_in_V_read_reg_375_pp0_iter1_reg;
    select_ln97_fu_342_p3 <= 
        select_ln340_4_fu_324_p3 when (and_ln97_1_fu_336_p2(0) = '1') else 
        activated_output_V_reg_380_pp0_iter1_reg;
        sext_ln415_fu_241_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_18_fu_235_p2),16));

        sext_ln713_fu_196_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_187_p4),15));

    tmp_11_fu_200_p3 <= r_V_reg_387(8 downto 8);
    tmp_13_fu_218_p3 <= r_V_reg_387(7 downto 7);
    tmp_14_fu_245_p3 <= p_Val2_18_fu_235_p2(14 downto 14);
    tmp_17_fu_272_p3 <= r_V_reg_387(20 downto 20);
    tmp_fu_180_p3 <= activated_output_V_reg_380_pp0_iter1_reg(15 downto 15);
    trunc_ln718_fu_163_p1 <= r_V_fu_355_p2(7 - 1 downto 0);
    trunc_ln_fu_187_p4 <= r_V_reg_387(21 downto 8);
    underflow_fu_112_p2 <= (xor_ln786_fu_106_p2 and p_Result_s_fu_84_p3);
    xor_ln340_8_fu_118_p2 <= (p_Result_s_fu_84_p3 xor p_Result_8_fu_98_p3);
    xor_ln340_fu_124_p2 <= (p_Result_s_fu_84_p3 xor ap_const_lv1_1);
    xor_ln416_1_fu_253_p2 <= (tmp_14_fu_245_p3 xor ap_const_lv1_1);
    xor_ln416_2_fu_285_p2 <= (p_Result_9_reg_400 xor ap_const_lv1_1);
    xor_ln779_fu_279_p2 <= (tmp_17_fu_272_p3 xor ap_const_lv1_1);
    xor_ln786_fu_106_p2 <= (p_Result_8_fu_98_p3 xor ap_const_lv1_1);
    zext_ln415_fu_231_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln415_fu_225_p2),15));
end behav;
