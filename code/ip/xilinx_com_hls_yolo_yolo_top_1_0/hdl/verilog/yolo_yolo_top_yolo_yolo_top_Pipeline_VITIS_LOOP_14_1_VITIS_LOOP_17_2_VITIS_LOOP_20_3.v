// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module yolo_yolo_top_yolo_yolo_top_Pipeline_VITIS_LOOP_14_1_VITIS_LOOP_17_2_VITIS_LOOP_20_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sub_i_i,
        sub_i_i60,
        mul_ln3,
        outStream_TDATA,
        outStream_TVALID,
        outStream_TREADY,
        outStream_TKEEP,
        outStream_TSTRB,
        outStream_TUSER,
        outStream_TLAST,
        outStream_TID,
        outStream_TDEST,
        activate_en,
        zext_ln3,
        cmp_i_i37_mid111,
        inStream_TDATA,
        inStream_TVALID,
        inStream_TREADY,
        inStream_TKEEP,
        inStream_TSTRB,
        inStream_TUSER,
        inStream_TLAST,
        inStream_TID,
        inStream_TDEST,
        trunc_ln3
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [5:0] sub_i_i;
input  [5:0] sub_i_i60;
input  [12:0] mul_ln3;
output  [63:0] outStream_TDATA;
output   outStream_TVALID;
input   outStream_TREADY;
output  [7:0] outStream_TKEEP;
output  [7:0] outStream_TSTRB;
output  [1:0] outStream_TUSER;
output  [0:0] outStream_TLAST;
output  [4:0] outStream_TID;
output  [5:0] outStream_TDEST;
input  [31:0] activate_en;
input  [7:0] zext_ln3;
input  [0:0] cmp_i_i37_mid111;
input  [63:0] inStream_TDATA;
input   inStream_TVALID;
output   inStream_TREADY;
input  [7:0] inStream_TKEEP;
input  [7:0] inStream_TSTRB;
input  [1:0] inStream_TUSER;
input  [0:0] inStream_TLAST;
input  [4:0] inStream_TID;
input  [5:0] inStream_TDEST;
input  [28:0] trunc_ln3;

reg ap_idle;
reg outStream_TVALID;
reg inStream_TREADY;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state8_pp0_stage3_iter1;
wire    ap_block_state12_pp0_stage3_iter2;
wire    ap_block_state16_pp0_stage3_iter3;
wire    ap_block_state20_pp0_stage3_iter4;
wire    ap_block_state24_pp0_stage3_iter5;
wire    ap_block_state28_pp0_stage3_iter6;
wire    ap_block_state32_pp0_stage3_iter7;
wire    ap_block_pp0_stage3_subdone;
reg   [0:0] icmp_ln1027_reg_824;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    outStream_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg    inStream_TDATA_blk_n;
reg   [15:0] tmp_data_sub_data_0_V_reg_261;
reg   [15:0] tmp_data_sub_data_1_V_reg_271;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state9_pp0_stage0_iter2;
wire    ap_block_state13_pp0_stage0_iter3;
wire    ap_block_state17_pp0_stage0_iter4;
wire    ap_block_state21_pp0_stage0_iter5;
wire    ap_block_state25_pp0_stage0_iter6;
wire    ap_block_state29_pp0_stage0_iter7;
wire    ap_block_state33_pp0_stage0_iter8;
wire    ap_block_pp0_stage0_11001;
reg   [8:0] indvar_flatten_load_reg_819;
wire   [0:0] icmp_ln1027_fu_370_p2;
reg   [0:0] icmp_ln1027_reg_824_pp0_iter1_reg;
reg   [0:0] icmp_ln1027_reg_824_pp0_iter2_reg;
reg   [0:0] icmp_ln1027_reg_824_pp0_iter3_reg;
reg   [0:0] icmp_ln1027_reg_824_pp0_iter4_reg;
reg   [0:0] icmp_ln1027_reg_824_pp0_iter5_reg;
reg   [0:0] icmp_ln1027_reg_824_pp0_iter6_reg;
reg   [0:0] icmp_ln1027_reg_824_pp0_iter7_reg;
reg   [0:0] icmp_ln1027_reg_824_pp0_iter8_reg;
wire   [12:0] add_ln1027_1_fu_376_p2;
reg   [12:0] add_ln1027_1_reg_828;
wire   [0:0] icmp_ln1027_1_fu_385_p2;
reg   [0:0] icmp_ln1027_1_reg_833;
wire   [0:0] and_ln14_fu_403_p2;
reg   [0:0] and_ln14_reg_842;
wire   [3:0] select_ln17_fu_415_p3;
reg   [3:0] select_ln17_reg_848;
wire   [4:0] shl_ln_fu_427_p3;
reg   [4:0] shl_ln_reg_854;
wire   [0:0] p_Result_s_fu_451_p2;
reg   [0:0] p_Result_s_reg_861;
reg   [0:0] p_Result_s_reg_861_pp0_iter1_reg;
reg   [0:0] p_Result_s_reg_861_pp0_iter2_reg;
reg   [0:0] p_Result_s_reg_861_pp0_iter3_reg;
reg   [0:0] p_Result_s_reg_861_pp0_iter4_reg;
reg   [0:0] p_Result_s_reg_861_pp0_iter5_reg;
reg   [0:0] p_Result_s_reg_861_pp0_iter6_reg;
reg   [0:0] p_Result_s_reg_861_pp0_iter7_reg;
reg   [7:0] curr_output_keep_V_reg_865;
reg    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_state10_pp0_stage1_iter2;
wire    ap_block_state14_pp0_stage1_iter3;
wire    ap_block_state18_pp0_stage1_iter4;
wire    ap_block_state22_pp0_stage1_iter5;
wire    ap_block_state26_pp0_stage1_iter6;
wire    ap_block_state30_pp0_stage1_iter7;
reg    ap_block_state34_pp0_stage1_iter8;
reg    ap_block_pp0_stage1_11001;
reg   [7:0] curr_output_keep_V_reg_865_pp0_iter1_reg;
reg   [7:0] curr_output_keep_V_reg_865_pp0_iter2_reg;
reg   [7:0] curr_output_keep_V_reg_865_pp0_iter3_reg;
reg   [7:0] curr_output_keep_V_reg_865_pp0_iter4_reg;
reg   [7:0] curr_output_keep_V_reg_865_pp0_iter5_reg;
reg   [7:0] curr_output_keep_V_reg_865_pp0_iter6_reg;
reg   [7:0] curr_output_keep_V_reg_865_pp0_iter7_reg;
reg   [7:0] curr_output_strb_V_reg_870;
reg   [7:0] curr_output_strb_V_reg_870_pp0_iter1_reg;
reg   [7:0] curr_output_strb_V_reg_870_pp0_iter2_reg;
reg   [7:0] curr_output_strb_V_reg_870_pp0_iter3_reg;
reg   [7:0] curr_output_strb_V_reg_870_pp0_iter4_reg;
reg   [7:0] curr_output_strb_V_reg_870_pp0_iter5_reg;
reg   [7:0] curr_output_strb_V_reg_870_pp0_iter6_reg;
reg   [7:0] curr_output_strb_V_reg_870_pp0_iter7_reg;
reg   [1:0] curr_output_user_V_reg_875;
reg   [1:0] curr_output_user_V_reg_875_pp0_iter1_reg;
reg   [1:0] curr_output_user_V_reg_875_pp0_iter2_reg;
reg   [1:0] curr_output_user_V_reg_875_pp0_iter3_reg;
reg   [1:0] curr_output_user_V_reg_875_pp0_iter4_reg;
reg   [1:0] curr_output_user_V_reg_875_pp0_iter5_reg;
reg   [1:0] curr_output_user_V_reg_875_pp0_iter6_reg;
reg   [1:0] curr_output_user_V_reg_875_pp0_iter7_reg;
reg   [4:0] curr_output_id_V_reg_880;
reg   [4:0] curr_output_id_V_reg_880_pp0_iter1_reg;
reg   [4:0] curr_output_id_V_reg_880_pp0_iter2_reg;
reg   [4:0] curr_output_id_V_reg_880_pp0_iter3_reg;
reg   [4:0] curr_output_id_V_reg_880_pp0_iter4_reg;
reg   [4:0] curr_output_id_V_reg_880_pp0_iter5_reg;
reg   [4:0] curr_output_id_V_reg_880_pp0_iter6_reg;
reg   [4:0] curr_output_id_V_reg_880_pp0_iter7_reg;
reg   [5:0] curr_output_dest_V_reg_885;
reg   [5:0] curr_output_dest_V_reg_885_pp0_iter1_reg;
reg   [5:0] curr_output_dest_V_reg_885_pp0_iter2_reg;
reg   [5:0] curr_output_dest_V_reg_885_pp0_iter3_reg;
reg   [5:0] curr_output_dest_V_reg_885_pp0_iter4_reg;
reg   [5:0] curr_output_dest_V_reg_885_pp0_iter5_reg;
reg   [5:0] curr_output_dest_V_reg_885_pp0_iter6_reg;
reg   [5:0] curr_output_dest_V_reg_885_pp0_iter7_reg;
wire   [15:0] tmp_data_sub_data_0_V_1_fu_576_p1;
reg   [15:0] tmp_data_sub_data_1_V_1_reg_896;
reg   [15:0] tmp_data_sub_data_2_V_1_reg_902;
reg   [15:0] tmp_data_sub_data_3_V_reg_908;
wire   [0:0] p_Result_1_fu_631_p2;
reg   [0:0] p_Result_1_reg_914;
reg   [0:0] p_Result_1_reg_914_pp0_iter1_reg;
reg   [0:0] p_Result_1_reg_914_pp0_iter2_reg;
reg   [0:0] p_Result_1_reg_914_pp0_iter3_reg;
reg   [0:0] p_Result_1_reg_914_pp0_iter4_reg;
reg   [0:0] p_Result_1_reg_914_pp0_iter5_reg;
reg   [0:0] p_Result_1_reg_914_pp0_iter6_reg;
reg   [0:0] p_Result_1_reg_914_pp0_iter7_reg;
wire   [0:0] curr_output_last_V_fu_648_p2;
reg   [0:0] curr_output_last_V_reg_918;
reg   [0:0] curr_output_last_V_reg_918_pp0_iter1_reg;
reg   [0:0] curr_output_last_V_reg_918_pp0_iter2_reg;
reg   [0:0] curr_output_last_V_reg_918_pp0_iter3_reg;
reg   [0:0] curr_output_last_V_reg_918_pp0_iter4_reg;
reg   [0:0] curr_output_last_V_reg_918_pp0_iter5_reg;
reg   [0:0] curr_output_last_V_reg_918_pp0_iter6_reg;
reg   [0:0] curr_output_last_V_reg_918_pp0_iter7_reg;
wire   [0:0] p_Result_2_fu_688_p2;
reg   [0:0] p_Result_2_reg_923;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state7_pp0_stage2_iter1;
wire    ap_block_state11_pp0_stage2_iter2;
wire    ap_block_state15_pp0_stage2_iter3;
wire    ap_block_state19_pp0_stage2_iter4;
wire    ap_block_state23_pp0_stage2_iter5;
wire    ap_block_state27_pp0_stage2_iter6;
wire    ap_block_state31_pp0_stage2_iter7;
wire    ap_block_pp0_stage2_11001;
reg   [0:0] p_Result_2_reg_923_pp0_iter1_reg;
reg   [0:0] p_Result_2_reg_923_pp0_iter2_reg;
reg   [0:0] p_Result_2_reg_923_pp0_iter3_reg;
reg   [0:0] p_Result_2_reg_923_pp0_iter4_reg;
reg   [0:0] p_Result_2_reg_923_pp0_iter5_reg;
reg   [0:0] p_Result_2_reg_923_pp0_iter6_reg;
reg   [0:0] p_Result_2_reg_923_pp0_iter7_reg;
wire   [0:0] p_Result_3_fu_714_p2;
reg   [0:0] p_Result_3_reg_927;
wire    ap_block_pp0_stage3_11001;
reg   [0:0] p_Result_3_reg_927_pp0_iter1_reg;
reg   [0:0] p_Result_3_reg_927_pp0_iter2_reg;
reg   [0:0] p_Result_3_reg_927_pp0_iter3_reg;
reg   [0:0] p_Result_3_reg_927_pp0_iter4_reg;
reg   [0:0] p_Result_3_reg_927_pp0_iter5_reg;
reg   [0:0] p_Result_3_reg_927_pp0_iter6_reg;
reg   [0:0] p_Result_3_reg_927_pp0_iter7_reg;
wire   [15:0] grp_logistic_activate_fu_299_ap_return;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage1_subdone;
wire    grp_logistic_activate_fu_299_ap_start;
wire    grp_logistic_activate_fu_299_ap_done;
wire    grp_logistic_activate_fu_299_ap_idle;
wire    grp_logistic_activate_fu_299_ap_ready;
reg    grp_logistic_activate_fu_299_ap_ce;
reg   [15:0] grp_logistic_activate_fu_299_val_in;
reg    ap_predicate_op114_call_state2;
reg    ap_predicate_op128_call_state3;
reg    ap_predicate_op137_call_state4;
reg    ap_predicate_op152_call_state5;
reg    ap_block_state2_pp0_stage1_iter0_ignore_call0;
wire    ap_block_state6_pp0_stage1_iter1_ignore_call0;
wire    ap_block_state10_pp0_stage1_iter2_ignore_call0;
wire    ap_block_state14_pp0_stage1_iter3_ignore_call0;
wire    ap_block_state18_pp0_stage1_iter4_ignore_call0;
wire    ap_block_state22_pp0_stage1_iter5_ignore_call0;
wire    ap_block_state26_pp0_stage1_iter6_ignore_call0;
wire    ap_block_state30_pp0_stage1_iter7_ignore_call0;
reg    ap_block_state34_pp0_stage1_iter8_ignore_call0;
reg    ap_block_pp0_stage1_11001_ignoreCallOp114;
wire    ap_block_state3_pp0_stage2_iter0_ignore_call0;
wire    ap_block_state7_pp0_stage2_iter1_ignore_call0;
wire    ap_block_state11_pp0_stage2_iter2_ignore_call0;
wire    ap_block_state15_pp0_stage2_iter3_ignore_call0;
wire    ap_block_state19_pp0_stage2_iter4_ignore_call0;
wire    ap_block_state23_pp0_stage2_iter5_ignore_call0;
wire    ap_block_state27_pp0_stage2_iter6_ignore_call0;
wire    ap_block_state31_pp0_stage2_iter7_ignore_call0;
wire    ap_block_pp0_stage2_11001_ignoreCallOp127;
wire    ap_block_state4_pp0_stage3_iter0_ignore_call0;
wire    ap_block_state8_pp0_stage3_iter1_ignore_call0;
wire    ap_block_state12_pp0_stage3_iter2_ignore_call0;
wire    ap_block_state16_pp0_stage3_iter3_ignore_call0;
wire    ap_block_state20_pp0_stage3_iter4_ignore_call0;
wire    ap_block_state24_pp0_stage3_iter5_ignore_call0;
wire    ap_block_state28_pp0_stage3_iter6_ignore_call0;
wire    ap_block_state32_pp0_stage3_iter7_ignore_call0;
wire    ap_block_pp0_stage3_11001_ignoreCallOp135;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call0;
wire    ap_block_state5_pp0_stage0_iter1_ignore_call0;
wire    ap_block_state9_pp0_stage0_iter2_ignore_call0;
wire    ap_block_state13_pp0_stage0_iter3_ignore_call0;
wire    ap_block_state17_pp0_stage0_iter4_ignore_call0;
wire    ap_block_state21_pp0_stage0_iter5_ignore_call0;
wire    ap_block_state25_pp0_stage0_iter6_ignore_call0;
wire    ap_block_state29_pp0_stage0_iter7_ignore_call0;
wire    ap_block_state33_pp0_stage0_iter8_ignore_call0;
wire    ap_block_pp0_stage0_11001_ignoreCallOp149;
reg   [15:0] ap_phi_reg_pp0_iter0_tmp_data_sub_data_0_V_reg_261;
reg   [15:0] ap_phi_reg_pp0_iter1_tmp_data_sub_data_0_V_reg_261;
reg   [15:0] ap_phi_reg_pp0_iter2_tmp_data_sub_data_0_V_reg_261;
reg   [15:0] ap_phi_reg_pp0_iter3_tmp_data_sub_data_0_V_reg_261;
reg   [15:0] ap_phi_reg_pp0_iter4_tmp_data_sub_data_0_V_reg_261;
reg   [15:0] ap_phi_reg_pp0_iter5_tmp_data_sub_data_0_V_reg_261;
reg   [15:0] ap_phi_reg_pp0_iter6_tmp_data_sub_data_0_V_reg_261;
reg   [15:0] ap_phi_reg_pp0_iter7_tmp_data_sub_data_0_V_reg_261;
reg   [15:0] ap_phi_reg_pp0_iter0_tmp_data_sub_data_1_V_reg_271;
reg   [15:0] ap_phi_reg_pp0_iter1_tmp_data_sub_data_1_V_reg_271;
reg   [15:0] ap_phi_reg_pp0_iter2_tmp_data_sub_data_1_V_reg_271;
reg   [15:0] ap_phi_reg_pp0_iter3_tmp_data_sub_data_1_V_reg_271;
reg   [15:0] ap_phi_reg_pp0_iter4_tmp_data_sub_data_1_V_reg_271;
reg   [15:0] ap_phi_reg_pp0_iter5_tmp_data_sub_data_1_V_reg_271;
reg   [15:0] ap_phi_reg_pp0_iter6_tmp_data_sub_data_1_V_reg_271;
reg   [15:0] ap_phi_reg_pp0_iter7_tmp_data_sub_data_1_V_reg_271;
reg   [15:0] ap_phi_reg_pp0_iter8_tmp_data_sub_data_1_V_reg_271;
reg   [15:0] ap_phi_reg_pp0_iter0_tmp_data_sub_data_2_V_reg_281;
reg   [15:0] ap_phi_reg_pp0_iter1_tmp_data_sub_data_2_V_reg_281;
reg   [15:0] ap_phi_reg_pp0_iter2_tmp_data_sub_data_2_V_reg_281;
reg   [15:0] ap_phi_reg_pp0_iter3_tmp_data_sub_data_2_V_reg_281;
reg   [15:0] ap_phi_reg_pp0_iter4_tmp_data_sub_data_2_V_reg_281;
reg   [15:0] ap_phi_reg_pp0_iter5_tmp_data_sub_data_2_V_reg_281;
reg   [15:0] ap_phi_reg_pp0_iter6_tmp_data_sub_data_2_V_reg_281;
reg   [15:0] ap_phi_reg_pp0_iter7_tmp_data_sub_data_2_V_reg_281;
reg   [15:0] ap_phi_reg_pp0_iter8_tmp_data_sub_data_2_V_reg_281;
reg   [15:0] ap_phi_mux_curr_output_data_sub_data_3_V_2_phi_fu_293_p4;
reg   [15:0] ap_phi_reg_pp0_iter8_curr_output_data_sub_data_3_V_2_reg_290;
wire   [15:0] ap_phi_reg_pp0_iter0_curr_output_data_sub_data_3_V_2_reg_290;
reg   [15:0] ap_phi_reg_pp0_iter1_curr_output_data_sub_data_3_V_2_reg_290;
reg   [15:0] ap_phi_reg_pp0_iter2_curr_output_data_sub_data_3_V_2_reg_290;
reg   [15:0] ap_phi_reg_pp0_iter3_curr_output_data_sub_data_3_V_2_reg_290;
reg   [15:0] ap_phi_reg_pp0_iter4_curr_output_data_sub_data_3_V_2_reg_290;
reg   [15:0] ap_phi_reg_pp0_iter5_curr_output_data_sub_data_3_V_2_reg_290;
reg   [15:0] ap_phi_reg_pp0_iter6_curr_output_data_sub_data_3_V_2_reg_290;
reg   [15:0] ap_phi_reg_pp0_iter7_curr_output_data_sub_data_3_V_2_reg_290;
reg    grp_logistic_activate_fu_299_ap_start_reg;
reg    ap_predicate_op114_call_state2_state1;
reg    ap_predicate_op128_call_state3_state2;
reg    ap_predicate_op137_call_state4_state3;
reg    ap_predicate_op152_call_state5_state4;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage0;
reg   [3:0] input_ch_idx_fu_156;
wire   [3:0] input_ch_idx_1_fu_720_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_input_ch_idx_load;
reg   [4:0] col_idx_fu_160;
wire   [4:0] select_ln1027_1_fu_545_p3;
reg   [8:0] indvar_flatten_fu_164;
wire   [8:0] select_ln1027_2_fu_730_p3;
reg   [8:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [4:0] row_idx_fu_168;
wire   [4:0] select_ln1027_fu_516_p3;
reg   [12:0] indvar_flatten15_fu_172;
reg   [12:0] ap_sig_allocacmp_indvar_flatten15_load;
reg    ap_block_pp0_stage1_01001;
wire   [8:0] zext_ln3_cast_fu_335_p1;
wire   [0:0] icmp_ln20_fu_397_p2;
wire   [0:0] xor_ln14_fu_391_p2;
wire   [0:0] or_ln17_fu_409_p2;
wire   [2:0] trunc_ln31_fu_423_p1;
wire   [28:0] zext_ln779_fu_435_p1;
wire   [28:0] shl_ln779_fu_439_p2;
wire   [28:0] and_ln779_fu_445_p2;
wire   [5:0] row_idx_cast_fu_463_p1;
wire   [5:0] col_idx_cast_fu_472_p1;
wire   [4:0] add_ln14_fu_488_p2;
wire   [5:0] row_idx_cast_mid1_fu_494_p1;
wire   [0:0] cmp_i_i28_mid1_fu_498_p2;
wire   [0:0] cmp_i_i28_fu_467_p2;
wire   [0:0] cmp_i_i37_fu_476_p2;
wire   [4:0] select_ln14_fu_481_p3;
wire   [4:0] col_idx_3_fu_523_p2;
wire   [5:0] col_idx_cast_mid1_fu_529_p1;
wire   [0:0] cmp_i_i37_mid1_fu_533_p2;
wire   [0:0] select_ln14_2_fu_510_p3;
wire   [4:0] or_ln36_fu_611_p2;
wire   [31:0] zext_ln779_1_fu_616_p1;
wire   [31:0] shl_ln779_1_fu_620_p2;
wire   [31:0] and_ln779_1_fu_626_p2;
wire   [0:0] select_ln14_1_fu_503_p3;
wire   [0:0] icmp_ln56_fu_637_p2;
wire   [0:0] and_ln57_fu_642_p2;
wire   [0:0] select_ln17_1_fu_538_p3;
wire   [4:0] or_ln41_fu_668_p2;
wire   [31:0] zext_ln779_2_fu_673_p1;
wire   [31:0] shl_ln779_2_fu_677_p2;
wire   [31:0] and_ln779_2_fu_683_p2;
wire   [4:0] or_ln46_fu_694_p2;
wire   [31:0] zext_ln779_3_fu_699_p1;
wire   [31:0] shl_ln779_3_fu_703_p2;
wire   [31:0] and_ln779_3_fu_709_p2;
wire   [8:0] add_ln1027_fu_725_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter7_stage1;
reg    ap_idle_pp0_0to6;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg   [3:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to8;
wire    ap_block_pp0_stage2_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_864;
reg    ap_condition_339;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 grp_logistic_activate_fu_299_ap_start_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

yolo_yolo_top_logistic_activate grp_logistic_activate_fu_299(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_logistic_activate_fu_299_ap_start),
    .ap_done(grp_logistic_activate_fu_299_ap_done),
    .ap_idle(grp_logistic_activate_fu_299_ap_idle),
    .ap_ready(grp_logistic_activate_fu_299_ap_ready),
    .ap_ce(grp_logistic_activate_fu_299_ap_ce),
    .val_in(grp_logistic_activate_fu_299_val_in),
    .ap_return(grp_logistic_activate_fu_299_ap_return)
);

yolo_yolo_top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter8 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_logistic_activate_fu_299_ap_start_reg <= 1'b0;
    end else begin
        if ((((ap_predicate_op152_call_state5_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((ap_predicate_op137_call_state4_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_predicate_op128_call_state3_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_predicate_op114_call_state2_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            grp_logistic_activate_fu_299_ap_start_reg <= 1'b1;
        end else if ((grp_logistic_activate_fu_299_ap_ready == 1'b1)) begin
            grp_logistic_activate_fu_299_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter7_stage1) & (ap_idle_pp0_0to6 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter7_stage1) & (ap_idle_pp0_0to6 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter7_stage1) & (ap_idle_pp0_0to6 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter7_stage1) & (ap_idle_pp0_0to6 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter7_stage1) & (ap_idle_pp0_0to6 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter7_stage1) & (ap_idle_pp0_0to6 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter7_stage1) & (ap_idle_pp0_0to6 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_864)) begin
        if (((icmp_ln1027_reg_824 == 1'd0) & (p_Result_3_fu_714_p2 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_curr_output_data_sub_data_3_V_2_reg_290 <= tmp_data_sub_data_3_V_reg_908;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_curr_output_data_sub_data_3_V_2_reg_290 <= ap_phi_reg_pp0_iter0_curr_output_data_sub_data_3_V_2_reg_290;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (p_Result_s_reg_861_pp0_iter7_reg == 1'd0) & (icmp_ln1027_reg_824_pp0_iter7_reg == 1'd0))) begin
        ap_phi_reg_pp0_iter7_tmp_data_sub_data_0_V_reg_261 <= grp_logistic_activate_fu_299_ap_return;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_phi_reg_pp0_iter7_tmp_data_sub_data_0_V_reg_261 <= ap_phi_reg_pp0_iter6_tmp_data_sub_data_0_V_reg_261;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_339)) begin
        if (((p_Result_1_reg_914_pp0_iter7_reg == 1'd0) & (icmp_ln1027_reg_824_pp0_iter7_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter8_tmp_data_sub_data_1_V_reg_271 <= grp_logistic_activate_fu_299_ap_return;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter8_tmp_data_sub_data_1_V_reg_271 <= ap_phi_reg_pp0_iter7_tmp_data_sub_data_1_V_reg_271;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (p_Result_2_reg_923_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_reg_824_pp0_iter7_reg == 1'd0))) begin
        ap_phi_reg_pp0_iter8_tmp_data_sub_data_2_V_reg_281 <= grp_logistic_activate_fu_299_ap_return;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_phi_reg_pp0_iter8_tmp_data_sub_data_2_V_reg_281 <= ap_phi_reg_pp0_iter7_tmp_data_sub_data_2_V_reg_281;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        col_idx_fu_160 <= 5'd0;
    end else if (((icmp_ln1027_reg_824 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        col_idx_fu_160 <= select_ln1027_1_fu_545_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        indvar_flatten15_fu_172 <= 13'd0;
    end else if (((icmp_ln1027_reg_824 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        indvar_flatten15_fu_172 <= add_ln1027_1_reg_828;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        indvar_flatten_fu_164 <= 9'd0;
    end else if (((icmp_ln1027_reg_824 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        indvar_flatten_fu_164 <= select_ln1027_2_fu_730_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        input_ch_idx_fu_156 <= 4'd0;
    end else if (((icmp_ln1027_reg_824 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        input_ch_idx_fu_156 <= input_ch_idx_1_fu_720_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        row_idx_fu_168 <= 5'd0;
    end else if (((icmp_ln1027_reg_824 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        row_idx_fu_168 <= select_ln1027_fu_516_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln1027_1_reg_828 <= add_ln1027_1_fu_376_p2;
        icmp_ln1027_reg_824 <= icmp_ln1027_fu_370_p2;
        icmp_ln1027_reg_824_pp0_iter1_reg <= icmp_ln1027_reg_824;
        icmp_ln1027_reg_824_pp0_iter2_reg <= icmp_ln1027_reg_824_pp0_iter1_reg;
        icmp_ln1027_reg_824_pp0_iter3_reg <= icmp_ln1027_reg_824_pp0_iter2_reg;
        icmp_ln1027_reg_824_pp0_iter4_reg <= icmp_ln1027_reg_824_pp0_iter3_reg;
        icmp_ln1027_reg_824_pp0_iter5_reg <= icmp_ln1027_reg_824_pp0_iter4_reg;
        icmp_ln1027_reg_824_pp0_iter6_reg <= icmp_ln1027_reg_824_pp0_iter5_reg;
        icmp_ln1027_reg_824_pp0_iter7_reg <= icmp_ln1027_reg_824_pp0_iter6_reg;
        icmp_ln1027_reg_824_pp0_iter8_reg <= icmp_ln1027_reg_824_pp0_iter7_reg;
        indvar_flatten_load_reg_819 <= ap_sig_allocacmp_indvar_flatten_load;
        p_Result_s_reg_861_pp0_iter1_reg <= p_Result_s_reg_861;
        p_Result_s_reg_861_pp0_iter2_reg <= p_Result_s_reg_861_pp0_iter1_reg;
        p_Result_s_reg_861_pp0_iter3_reg <= p_Result_s_reg_861_pp0_iter2_reg;
        p_Result_s_reg_861_pp0_iter4_reg <= p_Result_s_reg_861_pp0_iter3_reg;
        p_Result_s_reg_861_pp0_iter5_reg <= p_Result_s_reg_861_pp0_iter4_reg;
        p_Result_s_reg_861_pp0_iter6_reg <= p_Result_s_reg_861_pp0_iter5_reg;
        p_Result_s_reg_861_pp0_iter7_reg <= p_Result_s_reg_861_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_fu_370_p2 == 1'd0))) begin
        and_ln14_reg_842 <= and_ln14_fu_403_p2;
        icmp_ln1027_1_reg_833 <= icmp_ln1027_1_fu_385_p2;
        p_Result_s_reg_861 <= p_Result_s_fu_451_p2;
        select_ln17_reg_848 <= select_ln17_fu_415_p3;
        shl_ln_reg_854[4 : 2] <= shl_ln_fu_427_p3[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_824 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (p_Result_s_reg_861 == 1'd1))) begin
        ap_phi_reg_pp0_iter0_tmp_data_sub_data_0_V_reg_261 <= tmp_data_sub_data_0_V_1_fu_576_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_824 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (p_Result_1_fu_631_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter0_tmp_data_sub_data_1_V_reg_271 <= {{inStream_TDATA[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_824 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (p_Result_2_fu_688_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_phi_reg_pp0_iter0_tmp_data_sub_data_2_V_reg_281 <= tmp_data_sub_data_2_V_1_reg_902;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_phi_reg_pp0_iter1_tmp_data_sub_data_0_V_reg_261 <= ap_phi_reg_pp0_iter0_tmp_data_sub_data_0_V_reg_261;
        ap_phi_reg_pp0_iter1_tmp_data_sub_data_1_V_reg_271 <= ap_phi_reg_pp0_iter0_tmp_data_sub_data_1_V_reg_271;
        ap_phi_reg_pp0_iter1_tmp_data_sub_data_2_V_reg_281 <= ap_phi_reg_pp0_iter0_tmp_data_sub_data_2_V_reg_281;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_phi_reg_pp0_iter2_curr_output_data_sub_data_3_V_2_reg_290 <= ap_phi_reg_pp0_iter1_curr_output_data_sub_data_3_V_2_reg_290;
        ap_phi_reg_pp0_iter2_tmp_data_sub_data_0_V_reg_261 <= ap_phi_reg_pp0_iter1_tmp_data_sub_data_0_V_reg_261;
        ap_phi_reg_pp0_iter2_tmp_data_sub_data_1_V_reg_271 <= ap_phi_reg_pp0_iter1_tmp_data_sub_data_1_V_reg_271;
        ap_phi_reg_pp0_iter2_tmp_data_sub_data_2_V_reg_281 <= ap_phi_reg_pp0_iter1_tmp_data_sub_data_2_V_reg_281;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_phi_reg_pp0_iter3_curr_output_data_sub_data_3_V_2_reg_290 <= ap_phi_reg_pp0_iter2_curr_output_data_sub_data_3_V_2_reg_290;
        ap_phi_reg_pp0_iter3_tmp_data_sub_data_0_V_reg_261 <= ap_phi_reg_pp0_iter2_tmp_data_sub_data_0_V_reg_261;
        ap_phi_reg_pp0_iter3_tmp_data_sub_data_1_V_reg_271 <= ap_phi_reg_pp0_iter2_tmp_data_sub_data_1_V_reg_271;
        ap_phi_reg_pp0_iter3_tmp_data_sub_data_2_V_reg_281 <= ap_phi_reg_pp0_iter2_tmp_data_sub_data_2_V_reg_281;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_phi_reg_pp0_iter4_curr_output_data_sub_data_3_V_2_reg_290 <= ap_phi_reg_pp0_iter3_curr_output_data_sub_data_3_V_2_reg_290;
        ap_phi_reg_pp0_iter4_tmp_data_sub_data_0_V_reg_261 <= ap_phi_reg_pp0_iter3_tmp_data_sub_data_0_V_reg_261;
        ap_phi_reg_pp0_iter4_tmp_data_sub_data_1_V_reg_271 <= ap_phi_reg_pp0_iter3_tmp_data_sub_data_1_V_reg_271;
        ap_phi_reg_pp0_iter4_tmp_data_sub_data_2_V_reg_281 <= ap_phi_reg_pp0_iter3_tmp_data_sub_data_2_V_reg_281;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_phi_reg_pp0_iter5_curr_output_data_sub_data_3_V_2_reg_290 <= ap_phi_reg_pp0_iter4_curr_output_data_sub_data_3_V_2_reg_290;
        ap_phi_reg_pp0_iter5_tmp_data_sub_data_0_V_reg_261 <= ap_phi_reg_pp0_iter4_tmp_data_sub_data_0_V_reg_261;
        ap_phi_reg_pp0_iter5_tmp_data_sub_data_1_V_reg_271 <= ap_phi_reg_pp0_iter4_tmp_data_sub_data_1_V_reg_271;
        ap_phi_reg_pp0_iter5_tmp_data_sub_data_2_V_reg_281 <= ap_phi_reg_pp0_iter4_tmp_data_sub_data_2_V_reg_281;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_phi_reg_pp0_iter6_curr_output_data_sub_data_3_V_2_reg_290 <= ap_phi_reg_pp0_iter5_curr_output_data_sub_data_3_V_2_reg_290;
        ap_phi_reg_pp0_iter6_tmp_data_sub_data_0_V_reg_261 <= ap_phi_reg_pp0_iter5_tmp_data_sub_data_0_V_reg_261;
        ap_phi_reg_pp0_iter6_tmp_data_sub_data_1_V_reg_271 <= ap_phi_reg_pp0_iter5_tmp_data_sub_data_1_V_reg_271;
        ap_phi_reg_pp0_iter6_tmp_data_sub_data_2_V_reg_281 <= ap_phi_reg_pp0_iter5_tmp_data_sub_data_2_V_reg_281;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_phi_reg_pp0_iter7_curr_output_data_sub_data_3_V_2_reg_290 <= ap_phi_reg_pp0_iter6_curr_output_data_sub_data_3_V_2_reg_290;
        ap_phi_reg_pp0_iter7_tmp_data_sub_data_1_V_reg_271 <= ap_phi_reg_pp0_iter6_tmp_data_sub_data_1_V_reg_271;
        ap_phi_reg_pp0_iter7_tmp_data_sub_data_2_V_reg_281 <= ap_phi_reg_pp0_iter6_tmp_data_sub_data_2_V_reg_281;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_phi_reg_pp0_iter8_curr_output_data_sub_data_3_V_2_reg_290 <= ap_phi_reg_pp0_iter7_curr_output_data_sub_data_3_V_2_reg_290;
        tmp_data_sub_data_0_V_reg_261 <= ap_phi_reg_pp0_iter7_tmp_data_sub_data_0_V_reg_261;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_824 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        curr_output_dest_V_reg_885 <= inStream_TDEST;
        curr_output_id_V_reg_880 <= inStream_TID;
        curr_output_keep_V_reg_865 <= inStream_TKEEP;
        curr_output_last_V_reg_918 <= curr_output_last_V_fu_648_p2;
        curr_output_strb_V_reg_870 <= inStream_TSTRB;
        curr_output_user_V_reg_875 <= inStream_TUSER;
        p_Result_1_reg_914 <= p_Result_1_fu_631_p2;
        tmp_data_sub_data_1_V_1_reg_896 <= {{inStream_TDATA[31:16]}};
        tmp_data_sub_data_2_V_1_reg_902 <= {{inStream_TDATA[47:32]}};
        tmp_data_sub_data_3_V_reg_908 <= {{inStream_TDATA[63:48]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        curr_output_dest_V_reg_885_pp0_iter1_reg <= curr_output_dest_V_reg_885;
        curr_output_dest_V_reg_885_pp0_iter2_reg <= curr_output_dest_V_reg_885_pp0_iter1_reg;
        curr_output_dest_V_reg_885_pp0_iter3_reg <= curr_output_dest_V_reg_885_pp0_iter2_reg;
        curr_output_dest_V_reg_885_pp0_iter4_reg <= curr_output_dest_V_reg_885_pp0_iter3_reg;
        curr_output_dest_V_reg_885_pp0_iter5_reg <= curr_output_dest_V_reg_885_pp0_iter4_reg;
        curr_output_dest_V_reg_885_pp0_iter6_reg <= curr_output_dest_V_reg_885_pp0_iter5_reg;
        curr_output_dest_V_reg_885_pp0_iter7_reg <= curr_output_dest_V_reg_885_pp0_iter6_reg;
        curr_output_id_V_reg_880_pp0_iter1_reg <= curr_output_id_V_reg_880;
        curr_output_id_V_reg_880_pp0_iter2_reg <= curr_output_id_V_reg_880_pp0_iter1_reg;
        curr_output_id_V_reg_880_pp0_iter3_reg <= curr_output_id_V_reg_880_pp0_iter2_reg;
        curr_output_id_V_reg_880_pp0_iter4_reg <= curr_output_id_V_reg_880_pp0_iter3_reg;
        curr_output_id_V_reg_880_pp0_iter5_reg <= curr_output_id_V_reg_880_pp0_iter4_reg;
        curr_output_id_V_reg_880_pp0_iter6_reg <= curr_output_id_V_reg_880_pp0_iter5_reg;
        curr_output_id_V_reg_880_pp0_iter7_reg <= curr_output_id_V_reg_880_pp0_iter6_reg;
        curr_output_keep_V_reg_865_pp0_iter1_reg <= curr_output_keep_V_reg_865;
        curr_output_keep_V_reg_865_pp0_iter2_reg <= curr_output_keep_V_reg_865_pp0_iter1_reg;
        curr_output_keep_V_reg_865_pp0_iter3_reg <= curr_output_keep_V_reg_865_pp0_iter2_reg;
        curr_output_keep_V_reg_865_pp0_iter4_reg <= curr_output_keep_V_reg_865_pp0_iter3_reg;
        curr_output_keep_V_reg_865_pp0_iter5_reg <= curr_output_keep_V_reg_865_pp0_iter4_reg;
        curr_output_keep_V_reg_865_pp0_iter6_reg <= curr_output_keep_V_reg_865_pp0_iter5_reg;
        curr_output_keep_V_reg_865_pp0_iter7_reg <= curr_output_keep_V_reg_865_pp0_iter6_reg;
        curr_output_last_V_reg_918_pp0_iter1_reg <= curr_output_last_V_reg_918;
        curr_output_last_V_reg_918_pp0_iter2_reg <= curr_output_last_V_reg_918_pp0_iter1_reg;
        curr_output_last_V_reg_918_pp0_iter3_reg <= curr_output_last_V_reg_918_pp0_iter2_reg;
        curr_output_last_V_reg_918_pp0_iter4_reg <= curr_output_last_V_reg_918_pp0_iter3_reg;
        curr_output_last_V_reg_918_pp0_iter5_reg <= curr_output_last_V_reg_918_pp0_iter4_reg;
        curr_output_last_V_reg_918_pp0_iter6_reg <= curr_output_last_V_reg_918_pp0_iter5_reg;
        curr_output_last_V_reg_918_pp0_iter7_reg <= curr_output_last_V_reg_918_pp0_iter6_reg;
        curr_output_strb_V_reg_870_pp0_iter1_reg <= curr_output_strb_V_reg_870;
        curr_output_strb_V_reg_870_pp0_iter2_reg <= curr_output_strb_V_reg_870_pp0_iter1_reg;
        curr_output_strb_V_reg_870_pp0_iter3_reg <= curr_output_strb_V_reg_870_pp0_iter2_reg;
        curr_output_strb_V_reg_870_pp0_iter4_reg <= curr_output_strb_V_reg_870_pp0_iter3_reg;
        curr_output_strb_V_reg_870_pp0_iter5_reg <= curr_output_strb_V_reg_870_pp0_iter4_reg;
        curr_output_strb_V_reg_870_pp0_iter6_reg <= curr_output_strb_V_reg_870_pp0_iter5_reg;
        curr_output_strb_V_reg_870_pp0_iter7_reg <= curr_output_strb_V_reg_870_pp0_iter6_reg;
        curr_output_user_V_reg_875_pp0_iter1_reg <= curr_output_user_V_reg_875;
        curr_output_user_V_reg_875_pp0_iter2_reg <= curr_output_user_V_reg_875_pp0_iter1_reg;
        curr_output_user_V_reg_875_pp0_iter3_reg <= curr_output_user_V_reg_875_pp0_iter2_reg;
        curr_output_user_V_reg_875_pp0_iter4_reg <= curr_output_user_V_reg_875_pp0_iter3_reg;
        curr_output_user_V_reg_875_pp0_iter5_reg <= curr_output_user_V_reg_875_pp0_iter4_reg;
        curr_output_user_V_reg_875_pp0_iter6_reg <= curr_output_user_V_reg_875_pp0_iter5_reg;
        curr_output_user_V_reg_875_pp0_iter7_reg <= curr_output_user_V_reg_875_pp0_iter6_reg;
        p_Result_1_reg_914_pp0_iter1_reg <= p_Result_1_reg_914;
        p_Result_1_reg_914_pp0_iter2_reg <= p_Result_1_reg_914_pp0_iter1_reg;
        p_Result_1_reg_914_pp0_iter3_reg <= p_Result_1_reg_914_pp0_iter2_reg;
        p_Result_1_reg_914_pp0_iter4_reg <= p_Result_1_reg_914_pp0_iter3_reg;
        p_Result_1_reg_914_pp0_iter5_reg <= p_Result_1_reg_914_pp0_iter4_reg;
        p_Result_1_reg_914_pp0_iter6_reg <= p_Result_1_reg_914_pp0_iter5_reg;
        p_Result_1_reg_914_pp0_iter7_reg <= p_Result_1_reg_914_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_824 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_Result_2_reg_923 <= p_Result_2_fu_688_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_Result_2_reg_923_pp0_iter1_reg <= p_Result_2_reg_923;
        p_Result_2_reg_923_pp0_iter2_reg <= p_Result_2_reg_923_pp0_iter1_reg;
        p_Result_2_reg_923_pp0_iter3_reg <= p_Result_2_reg_923_pp0_iter2_reg;
        p_Result_2_reg_923_pp0_iter4_reg <= p_Result_2_reg_923_pp0_iter3_reg;
        p_Result_2_reg_923_pp0_iter5_reg <= p_Result_2_reg_923_pp0_iter4_reg;
        p_Result_2_reg_923_pp0_iter6_reg <= p_Result_2_reg_923_pp0_iter5_reg;
        p_Result_2_reg_923_pp0_iter7_reg <= p_Result_2_reg_923_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_824 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        p_Result_3_reg_927 <= p_Result_3_fu_714_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        p_Result_3_reg_927_pp0_iter1_reg <= p_Result_3_reg_927;
        p_Result_3_reg_927_pp0_iter2_reg <= p_Result_3_reg_927_pp0_iter1_reg;
        p_Result_3_reg_927_pp0_iter3_reg <= p_Result_3_reg_927_pp0_iter2_reg;
        p_Result_3_reg_927_pp0_iter4_reg <= p_Result_3_reg_927_pp0_iter3_reg;
        p_Result_3_reg_927_pp0_iter5_reg <= p_Result_3_reg_927_pp0_iter4_reg;
        p_Result_3_reg_927_pp0_iter6_reg <= p_Result_3_reg_927_pp0_iter5_reg;
        p_Result_3_reg_927_pp0_iter7_reg <= p_Result_3_reg_927_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_data_sub_data_1_V_reg_271 <= ap_phi_reg_pp0_iter8_tmp_data_sub_data_1_V_reg_271;
    end
end

always @ (*) begin
    if (((icmp_ln1027_reg_824 == 1'd1) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_reg_824_pp0_iter7_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter7_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter7_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to6 = 1'b1;
    end else begin
        ap_idle_pp0_0to6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to8 = 1'b1;
    end else begin
        ap_idle_pp0_1to8 = 1'b0;
    end
end

always @ (*) begin
    if (((p_Result_3_reg_927_pp0_iter7_reg == 1'd0) & (icmp_ln1027_reg_824_pp0_iter8_reg == 1'd0))) begin
        ap_phi_mux_curr_output_data_sub_data_3_V_2_phi_fu_293_p4 = grp_logistic_activate_fu_299_ap_return;
    end else begin
        ap_phi_mux_curr_output_data_sub_data_3_V_2_phi_fu_293_p4 = ap_phi_reg_pp0_iter8_curr_output_data_sub_data_3_V_2_reg_290;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten15_load = 13'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten15_load = indvar_flatten15_fu_172;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten_load = 9'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_164;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_input_ch_idx_load = 4'd0;
    end else begin
        ap_sig_allocacmp_input_ch_idx_load = input_ch_idx_fu_156;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp149) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001_ignoreCallOp135) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001_ignoreCallOp127) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp114) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_logistic_activate_fu_299_ap_ce = 1'b1;
    end else begin
        grp_logistic_activate_fu_299_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op152_call_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_logistic_activate_fu_299_val_in = tmp_data_sub_data_3_V_reg_908;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_predicate_op137_call_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_logistic_activate_fu_299_val_in = tmp_data_sub_data_2_V_1_reg_902;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_predicate_op128_call_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_logistic_activate_fu_299_val_in = tmp_data_sub_data_1_V_1_reg_896;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_predicate_op114_call_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_logistic_activate_fu_299_val_in = tmp_data_sub_data_0_V_1_fu_576_p1;
    end else begin
        grp_logistic_activate_fu_299_val_in = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln1027_reg_824 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        inStream_TDATA_blk_n = inStream_TVALID;
    end else begin
        inStream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln1027_reg_824 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        inStream_TREADY = 1'b1;
    end else begin
        inStream_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        outStream_TDATA_blk_n = outStream_TREADY;
    end else begin
        outStream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        outStream_TVALID = 1'b1;
    end else begin
        outStream_TVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to8 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter7_stage1) & (ap_idle_pp0_0to6 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1027_1_fu_376_p2 = (ap_sig_allocacmp_indvar_flatten15_load + 13'd1);

assign add_ln1027_fu_725_p2 = (indvar_flatten_load_reg_819 + 9'd1);

assign add_ln14_fu_488_p2 = (row_idx_fu_168 + 5'd1);

assign and_ln14_fu_403_p2 = (xor_ln14_fu_391_p2 & icmp_ln20_fu_397_p2);

assign and_ln57_fu_642_p2 = (select_ln14_1_fu_503_p3 & icmp_ln56_fu_637_p2);

assign and_ln779_1_fu_626_p2 = (shl_ln779_1_fu_620_p2 & activate_en);

assign and_ln779_2_fu_683_p2 = (shl_ln779_2_fu_677_p2 & activate_en);

assign and_ln779_3_fu_709_p2 = (shl_ln779_3_fu_703_p2 & activate_en);

assign and_ln779_fu_445_p2 = (trunc_ln3 & shl_ln779_fu_439_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp149 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = (((outStream_TREADY == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1)) | ((inStream_TVALID == 1'b0) & (icmp_ln1027_reg_824 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((outStream_TREADY == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1)) | ((inStream_TVALID == 1'b0) & (icmp_ln1027_reg_824 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_ignoreCallOp114 = (((outStream_TREADY == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1)) | ((inStream_TVALID == 1'b0) & (icmp_ln1027_reg_824 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((outStream_TREADY == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1)) | ((inStream_TVALID == 1'b0) & (icmp_ln1027_reg_824 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001_ignoreCallOp127 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001_ignoreCallOp135 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter2_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter2_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter2_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter3_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter3_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter3_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage3_iter3_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter4_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter4_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter4_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter4_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter5_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter5_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage2_iter5_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage3_iter5_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter6_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter6_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage2_iter6_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage3_iter6_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter7_ignore_call0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = ((inStream_TVALID == 1'b0) & (icmp_ln1027_reg_824 == 1'd0));
end

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0_ignore_call0 = ((inStream_TVALID == 1'b0) & (icmp_ln1027_reg_824 == 1'd0));
end

assign ap_block_state30_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage1_iter7_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage2_iter7_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage3_iter7_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter8_ignore_call0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state34_pp0_stage1_iter8 = (outStream_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state34_pp0_stage1_iter8_ignore_call0 = (outStream_TREADY == 1'b0);
end

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage2_iter1_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage3_iter1_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter2_ignore_call0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_339 = ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3));
end

always @ (*) begin
    ap_condition_864 = ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

assign ap_phi_reg_pp0_iter0_curr_output_data_sub_data_3_V_2_reg_290 = 'bx;

always @ (*) begin
    ap_predicate_op114_call_state2 = ((icmp_ln1027_reg_824 == 1'd0) & (p_Result_s_reg_861 == 1'd0));
end

always @ (*) begin
    ap_predicate_op114_call_state2_state1 = ((p_Result_s_fu_451_p2 == 1'd0) & (icmp_ln1027_fu_370_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op128_call_state3 = ((icmp_ln1027_reg_824 == 1'd0) & (p_Result_1_reg_914 == 1'd0));
end

always @ (*) begin
    ap_predicate_op128_call_state3_state2 = ((icmp_ln1027_reg_824 == 1'd0) & (p_Result_1_fu_631_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op137_call_state4 = ((icmp_ln1027_reg_824 == 1'd0) & (p_Result_2_reg_923 == 1'd0));
end

always @ (*) begin
    ap_predicate_op137_call_state4_state3 = ((icmp_ln1027_reg_824 == 1'd0) & (p_Result_2_fu_688_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op152_call_state5 = ((icmp_ln1027_reg_824 == 1'd0) & (p_Result_3_reg_927 == 1'd0));
end

always @ (*) begin
    ap_predicate_op152_call_state5_state4 = ((icmp_ln1027_reg_824 == 1'd0) & (p_Result_3_fu_714_p2 == 1'd0));
end

assign cmp_i_i28_fu_467_p2 = ((sub_i_i == row_idx_cast_fu_463_p1) ? 1'b1 : 1'b0);

assign cmp_i_i28_mid1_fu_498_p2 = ((sub_i_i == row_idx_cast_mid1_fu_494_p1) ? 1'b1 : 1'b0);

assign cmp_i_i37_fu_476_p2 = ((sub_i_i60 == col_idx_cast_fu_472_p1) ? 1'b1 : 1'b0);

assign cmp_i_i37_mid1_fu_533_p2 = ((sub_i_i60 == col_idx_cast_mid1_fu_529_p1) ? 1'b1 : 1'b0);

assign col_idx_3_fu_523_p2 = (select_ln14_fu_481_p3 + 5'd1);

assign col_idx_cast_fu_472_p1 = col_idx_fu_160;

assign col_idx_cast_mid1_fu_529_p1 = col_idx_3_fu_523_p2;

assign curr_output_last_V_fu_648_p2 = (select_ln17_1_fu_538_p3 & and_ln57_fu_642_p2);

assign grp_logistic_activate_fu_299_ap_start = grp_logistic_activate_fu_299_ap_start_reg;

assign icmp_ln1027_1_fu_385_p2 = ((ap_sig_allocacmp_indvar_flatten_load == zext_ln3_cast_fu_335_p1) ? 1'b1 : 1'b0);

assign icmp_ln1027_fu_370_p2 = ((ap_sig_allocacmp_indvar_flatten15_load == mul_ln3) ? 1'b1 : 1'b0);

assign icmp_ln20_fu_397_p2 = ((ap_sig_allocacmp_input_ch_idx_load == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln56_fu_637_p2 = ((select_ln17_reg_848 == 4'd7) ? 1'b1 : 1'b0);

assign input_ch_idx_1_fu_720_p2 = (select_ln17_reg_848 + 4'd1);

assign or_ln17_fu_409_p2 = (icmp_ln1027_1_fu_385_p2 | and_ln14_fu_403_p2);

assign or_ln36_fu_611_p2 = (shl_ln_reg_854 | 5'd1);

assign or_ln41_fu_668_p2 = (shl_ln_reg_854 | 5'd2);

assign or_ln46_fu_694_p2 = (shl_ln_reg_854 | 5'd3);

assign outStream_TDATA = {{{{ap_phi_mux_curr_output_data_sub_data_3_V_2_phi_fu_293_p4}, {ap_phi_reg_pp0_iter8_tmp_data_sub_data_2_V_reg_281}}, {tmp_data_sub_data_1_V_reg_271}}, {tmp_data_sub_data_0_V_reg_261}};

assign outStream_TDEST = curr_output_dest_V_reg_885_pp0_iter7_reg;

assign outStream_TID = curr_output_id_V_reg_880_pp0_iter7_reg;

assign outStream_TKEEP = curr_output_keep_V_reg_865_pp0_iter7_reg;

assign outStream_TLAST = curr_output_last_V_reg_918_pp0_iter7_reg;

assign outStream_TSTRB = curr_output_strb_V_reg_870_pp0_iter7_reg;

assign outStream_TUSER = curr_output_user_V_reg_875_pp0_iter7_reg;

assign p_Result_1_fu_631_p2 = ((and_ln779_1_fu_626_p2 == 32'd0) ? 1'b1 : 1'b0);

assign p_Result_2_fu_688_p2 = ((and_ln779_2_fu_683_p2 == 32'd0) ? 1'b1 : 1'b0);

assign p_Result_3_fu_714_p2 = ((and_ln779_3_fu_709_p2 == 32'd0) ? 1'b1 : 1'b0);

assign p_Result_s_fu_451_p2 = ((and_ln779_fu_445_p2 == 29'd0) ? 1'b1 : 1'b0);

assign row_idx_cast_fu_463_p1 = row_idx_fu_168;

assign row_idx_cast_mid1_fu_494_p1 = add_ln14_fu_488_p2;

assign select_ln1027_1_fu_545_p3 = ((and_ln14_reg_842[0:0] == 1'b1) ? col_idx_3_fu_523_p2 : select_ln14_fu_481_p3);

assign select_ln1027_2_fu_730_p3 = ((icmp_ln1027_1_reg_833[0:0] == 1'b1) ? 9'd1 : add_ln1027_fu_725_p2);

assign select_ln1027_fu_516_p3 = ((icmp_ln1027_1_reg_833[0:0] == 1'b1) ? add_ln14_fu_488_p2 : row_idx_fu_168);

assign select_ln14_1_fu_503_p3 = ((icmp_ln1027_1_reg_833[0:0] == 1'b1) ? cmp_i_i28_mid1_fu_498_p2 : cmp_i_i28_fu_467_p2);

assign select_ln14_2_fu_510_p3 = ((icmp_ln1027_1_reg_833[0:0] == 1'b1) ? cmp_i_i37_mid111 : cmp_i_i37_fu_476_p2);

assign select_ln14_fu_481_p3 = ((icmp_ln1027_1_reg_833[0:0] == 1'b1) ? 5'd0 : col_idx_fu_160);

assign select_ln17_1_fu_538_p3 = ((and_ln14_reg_842[0:0] == 1'b1) ? cmp_i_i37_mid1_fu_533_p2 : select_ln14_2_fu_510_p3);

assign select_ln17_fu_415_p3 = ((or_ln17_fu_409_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_input_ch_idx_load);

assign shl_ln779_1_fu_620_p2 = 32'd1 << zext_ln779_1_fu_616_p1;

assign shl_ln779_2_fu_677_p2 = 32'd1 << zext_ln779_2_fu_673_p1;

assign shl_ln779_3_fu_703_p2 = 32'd1 << zext_ln779_3_fu_699_p1;

assign shl_ln779_fu_439_p2 = 29'd1 << zext_ln779_fu_435_p1;

assign shl_ln_fu_427_p3 = {{trunc_ln31_fu_423_p1}, {2'd0}};

assign tmp_data_sub_data_0_V_1_fu_576_p1 = inStream_TDATA[15:0];

assign trunc_ln31_fu_423_p1 = select_ln17_fu_415_p3[2:0];

assign xor_ln14_fu_391_p2 = (icmp_ln1027_1_fu_385_p2 ^ 1'd1);

assign zext_ln3_cast_fu_335_p1 = zext_ln3;

assign zext_ln779_1_fu_616_p1 = or_ln36_fu_611_p2;

assign zext_ln779_2_fu_673_p1 = or_ln41_fu_668_p2;

assign zext_ln779_3_fu_699_p1 = or_ln46_fu_694_p2;

assign zext_ln779_fu_435_p1 = shl_ln_fu_427_p3;

always @ (posedge ap_clk) begin
    shl_ln_reg_854[1:0] <= 2'b00;
end

endmodule //yolo_yolo_top_yolo_yolo_top_Pipeline_VITIS_LOOP_14_1_VITIS_LOOP_17_2_VITIS_LOOP_20_3
